<?xml version="1.0"?>
<SqlData xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" DefaultPath="Request[{0}]">
  <Connections>
    <Connection Name="Auth" ProviderName="System.Data.SqlClient" ConnectionString="Server=10.1.15.235;Database=PA_Sys;User Id=pguser;Password=sa123456;" />
  </Connections>
  <Groups>
    <Group Name="组织结构">
      <Table Name="hr_BU" ConnectionName="Auth" TableName="hr_BU">
        <Sql Name="Add" ConnectionName="Auth" Description="Add">
          DECLARE @IsExist INT
          SET @IsExist = 0
          SELECT @IsExist = 1 FROM
          [hr_BU]
          WHERE [Name] = @Name AND [IsActive] = 1;
          IF (@IsExist = 0)
          BEGIN
          INSERT INTO [hr_BU]
          ([BUID],[Name],[ManagerID],[Description],[IsActive],[SortID],[CreatedUser],[CreatedTime],[ModifiedUser],[ModifiedTime])
          VALUES(@BUID,LTRIM(RTRIM(@Name)),@ManagerID,LTRIM(RTRIM(@Description)),@IsActive,@SortID,@CreatedUser,@CreatedTime,@ModifiedUser,@ModifiedTime);
          SELECT [hr_BU].[BUID],[hr_BU].[Name],[hr_Employee].[Name] AS ManagerName,[hr_BU].[Description],
          [hr_BU].[IsActive] ,[hr_BU].[SortID] FROM
          [hr_BU] LEFT JOIN [hr_Employee] ON [hr_BU].[ManagerID] = [hr_Employee].EmployeeID
          WHERE [hr_BU].[AutoKey]=scope_identity();
          END
          ELSE
          BEGIN
          RAISERROR ('已经存在相同信息，无法保存！' ,15, 1) WITH NOWAIT
          END
        </Sql>
        <Sql Name="Update" ConnectionName="Auth" SqlType="Execute" Description="Update">
          DECLARE @IsExist INT
          SET @IsExist = 0
          SELECT @IsExist = 1 FROM
          [hr_BU]
          WHERE [Name] = @Name AND [BUID] &lt;&gt; @BUID AND [IsActive] = 1;
          IF (@IsExist = 0)
          BEGIN
          UPDATE [hr_BU]
          SET  [Name]=LTRIM(RTRIM(@Name)),[ManagerID]=@ManagerID,[Description]=LTRIM(RTRIM(@Description)),[SortID]=@SortID,[ModifiedUser]=@ModifiedUser,[ModifiedTime]=@ModifiedTime WHERE [BUID]=@BUID;
          SELECT [hr_BU].[BUID],[hr_BU].[Name],[hr_Employee].[Name] AS ManagerName,[hr_BU].[Description],
          [hr_BU].[IsActive],[hr_BU].[SortID] FROM
          [hr_BU] LEFT JOIN [hr_Employee] ON [hr_BU].[ManagerID] = [hr_Employee].EmployeeID
          WHERE [BUID]=@BUID;
          END
          ELSE
          BEGIN
          RAISERROR ('已经存在相同信息，无法保存！' ,15, 1) WITH NOWAIT
          END
        </Sql>
        <Sql Name="Delete" ConnectionName="Auth" SqlType="Execute" Description="Delete">
          DECLARE @sql varchar(max);
          SET @sql='UPDATE [hr_BU]
          SET [ModifiedUser]='''+@ModifiedUser+''',[ModifiedTime]='''+@ModifiedTime+''',[IsActive]=0 WHERE [BUID] in ('''+replace(@BUIDs,',',''',''')+''') ;'
          EXEC(@sql);
        </Sql>
        <Sql Name="GetItem" ConnectionName="Auth" SqlType="Execute" Description="GetItem">
          SELECT [hr_BU].[BUID],[hr_BU].[Name],[hr_BU].[ManagerID], [hr_Employee].[Name] ManagerName,[hr_BU].[Description],[hr_BU].[IsActive],
          [hr_BU].[SortID],[hr_BU].[CreatedUser],[hr_BU].[CreatedTime],[hr_BU].[ModifiedUser],[hr_BU].[ModifiedTime],[hr_BU].[AutoKey] FROM
          [hr_BU] LEFT JOIN [hr_Employee] ON [hr_BU].[ManagerID] = [hr_Employee].EmployeeID
          WHERE [hr_BU].[BUID]=@BUID;
        </Sql>
        <Sql Name="GetItem_View" ConnectionName="Auth" SqlType="Execute" Description="GetItem_View">
          SELECT [hr_BU].[Name],[hr_Employee].[Name] AS ManagerName,[hr_BU].[Description],[hr_BU].[IsActive] ,[hr_BU].[SortID] FROM
          [hr_BU] LEFT JOIN [hr_Employee] ON [hr_BU].[ManagerID] = [hr_Employee].EmployeeID
          WHERE [BUID]=@BUID;
        </Sql>
        <Sql Name="GetAll" ConnectionName="Auth" SqlType="Execute" Description="GetAll">SELECT [BUID],[Name],[ManagerID],[Description],[IsActive],[SortID],[CreatedUser],[CreatedTime],[ModifiedUser],[ModifiedTime],[AutoKey] FROM [hr_BU];</Sql>
        <Sql Name="GetAll_Search" ConnectionName="Auth" SqlType="Execute" Description="GetAll_Search">
          DECLARE @SQL VARCHAR(500)
          SET @SQL = '
          SELECT [hr_BU].[BUID],[hr_BU].[Name],[hr_Employee].[Name] AS ManagerName,[hr_BU].[Description],[hr_BU].[IsActive],[SortID]
          FROM [hr_BU] LEFT JOIN [hr_Employee] ON [hr_BU].[ManagerID] = [hr_Employee].EmployeeID
          WHERE [hr_BU].[IsActive]=1'
          IF LTRIM(RTRIM(@Name)) &lt;&gt; ''
          BEGIN
          SET @SQL = @SQL + ' AND [hr_BU].[Name] LIKE ''%'+LTRIM(RTRIM(@Name))+'%'''
          END
          SET @SQL = @SQL + ' ORDER BY [hr_BU].[SortID];'

          EXEC (@SQL)
        </Sql>
        <Sql Name="GetName" SharedName="GetBUName" ConnectionName="Auth" Description="GetBUName">select [Name],[BUID],SortID FROM [hr_BU] where IsActive=1 union select ' 无','','0' order by SortID;</Sql>
        <Sql Name="QueryCount" ConnectionName="Auth" Description="查询总数">
          DECLARE @SQL VARCHAR(500)
          SET @SQL = '
          SELECT count(*)
          FROM [hr_BU] LEFT JOIN [hr_Employee] ON [hr_BU].[ManagerID] = [hr_Employee].EmployeeID
          WHERE [hr_BU].[IsActive]=1'
          IF LTRIM(RTRIM(@Name)) &lt;&gt; ''
          BEGIN
          SET @SQL = @SQL + ' AND [hr_BU].[Name] LIKE ''%'+LTRIM(RTRIM(@Name))+'%'''
          END


          EXEC (@SQL)
        </Sql>
        <Sql Name="QueryPage" ConnectionName="Auth" Description="查询分页">
          DECLARE @SQL VARCHAR(500)
          SET @SQL = '
          SELECT [hr_BU].[BUID],[hr_BU].[Name],[hr_Employee].[Name] AS ManagerName,[hr_BU].[Description],[hr_BU].[IsActive],[SortID]
          FROM [hr_BU] LEFT JOIN [hr_Employee] ON [hr_BU].[ManagerID] = [hr_Employee].EmployeeID
          WHERE [hr_BU].[IsActive]=1'
          IF LTRIM(RTRIM(@Name)) &lt;&gt; ''
          BEGIN
          SET @SQL = @SQL + ' AND [hr_BU].[Name] LIKE ''%'+LTRIM(RTRIM(@Name))+'%'''
          END
          SET @SQL = @SQL + ' ORDER BY [hr_BU].[SortID]'
          SET @sql = @sql + '
          OFFSET ('+ CAST((@Page - 1) * @Rows AS varchar(10)) +') ROWS
          FETCH NEXT ' + CAST(@Rows AS varchar(10)) +' ROWS ONLY';
          EXEC (@SQL)
        </Sql>
      </Table>
      <Table Name="hr_Company" ConnectionName="Auth">
        <Sql Name="Add" ConnectionName="Auth" Description="新增公司信息">
          if exists(select * from hr_Company where Name =@Name and IsActive=1  or JC=@JC)
          begin
          RAISERROR ('已经存在相同信息，无法保存！',15, 1) WITH NOWAIT
          end
          else
          begin
          INSERT INTO [hr_Company]
          ([CompanyID],[Name],[ManagerID],[Description],[IsActive],[SortID],[JM],[JC],[Url1],[Url2],[Tel1],[Tel2],[Address],[Remark],[CreatedUser],[CreatedTime],[ModifiedUser],[ModifiedTime])
          VALUES(@CompanyID,@Name,@ManagerID,@Description,@IsActive,@SortID,@JM,@JC,@Url1,@Url2,@Tel1,@Tel2,@Address,@Remark,@CreatedUser,@CreatedTime,@ModifiedUser,@ModifiedTime)
          end
          select CompanyID as id,Name as text from [hr_Company] where [AutoKey]=scope_identity();
        </Sql>
        <Sql Name="Update" ConnectionName="Auth" SqlType="Execute" Description="更新公司信息">
          DECLARE @IsExist INT
          SET @IsExist = 0
          SELECT @IsExist = 1 FROM
          [hr_Company]
          WHERE [Name] = @Name AND [CompanyID] &lt;&gt; @CompanyID AND [IsActive] = 1 or JC=@JC and [CompanyID]!=@CompanyID;
          IF (@IsExist = 0)
          BEGIN
          UPDATE [hr_Company]
          SET  [Name]=LTRIM(RTRIM(@Name)),[Description]=LTRIM(RTRIM(@Description)),[ManagerID]=@ManagerID,[JC]=@JC,[JM]=@JM,[ModifiedUser]=@ModifiedUser,[ModifiedTime]=@ModifiedTime,
          [Url1]=@Url1,[Url2]=@Url2,[Tel1]=@Tel1,[Tel2]=@Tel2,[Address]=@Address,[Remark]=@Remark,[SortID]=@SortID
          WHERE [CompanyID]=@CompanyID;

          END
          ELSE
          BEGIN
          RAISERROR ('已经存在相同信息，无法保存！' ,15, 1) WITH NOWAIT
          END
          select JC as text  from [hr_Company] where [CompanyID]=@CompanyID
        </Sql>
        <Sql Name="Delete" ConnectionName="Auth" SqlType="Execute" Description="将选中的公司更新为无效">
          declare @sql varchar(max);
          set @sql ='
          declare @m int
          declare @n int
          select @m= COUNT([CompanyID]) from [dbo].[hr_Company] where [CompanyID] in ('''+replace(@CompanyIDs,',',''',''')+''') ;
          select @n= COUNT([CompanyID]) from [dbo].[hr_Company] where [CompanyID] in ('''+replace(@CompanyIDs,',',''',''')+''')   and  [CompanyID] not in (SELECT [CompanyID] FROM [hr_Department] where [IsActive]=1 group by [CompanyID]) ;
          if(@m=@n)
          begin
          UPDATE [hr_Company]
          SET [ModifiedUser]='''+@ModifiedUser+''',[ModifiedTime]='''+@ModifiedTime+''',[IsActive]=0 WHERE [CompanyID] in ('''+replace(@CompanyIDs,',',''',''')+''') ;
          end
          else
          BEGIN
          RAISERROR (''公司下存在部门，删除失败！'' ,15, 1) WITH NOWAIT
          END';
          exec(@sql);
        </Sql>
        <Sql Name="GetItem" ConnectionName="Auth" Description="根据选中的公司返回相应公司信息">
          SELECT b.Name as ManagerName,a.*
          FROM [hr_Company] a
          left join hr_Employee b on a.ManagerID=b.EmployeeID
          WHERE a.[CompanyID]=@CompanyID;
        </Sql>
        <Sql Name="GetAll" ConnectionName="Auth" SqlType="Execute" Description="GetAll">
          SELECT a.[CompanyID],a.[Name],b.[Name] as ManagerName,[Description],CASE a.[IsActive] WHEN 1 THEN '有效' WHEN 0 THEN '无效' END IsActive ,[SortID],a.[CreatedUser],a.[CreatedTime],
          a.[ModifiedUser],a.[ModifiedTime],a.[AutoKey]
          FROM [hr_Company] a
          left join hr_Employee b on a.ManagerID=b.EmployeeID
          WHERE [CompanyID]=@CompanyID;
        </Sql>
        <Sql Name="Search" ConnectionName="Auth" SqlType="Execute" Description="根据公司名称和状态检索公司">
          SELECT a.[CompanyID],a.[Name],b.[Name] as ManagerName,[Description],a.[IsActive],[SortID],a.[AutoKey],a.[JM],a.[JC],a.Url1,a.Tel1
          FROM
          (SELECT c.* FROM [hr_Company] c join fun_sys_GetUserCompanys(@UserID) g on c.CompanyID=g.CompanyID)  a
          left join hr_Employee b on a.ManagerID=b.EmployeeID
          where (a.Name like '%'+@Key+'%' or b.Name like '%'+@Key+'%' or a.JC like '%'+@Key+'%' or a.JM like '%'+@Key+'%') and a.IsActive=1
          order by a.SortID
        </Sql>
        <Sql Name="GetName" SharedName="GetCompanyName" ConnectionName="Auth" Description="公司选择下拉列表">
			SELECT CompanyID as ID,JC as Name FROM  fun_sys_GetUserCompanys(@UserID)  where JC like  '%'+@Key+'%' or JM like '%'+@Key+'%'
			order by SortID
        </Sql>
        <Sql Name="GetComDptTree" SharedName="GetComDptTree" ConnectionName="Auth" Description="根据多选的公司带出部门">
          declare @sql varchar(max)
          set @sql=
          'select d.Name,d.DeptID as ID,case when d.ParentID='''' then d.CompanyID when d.ParentID=''无'' then d.CompanyID else d.ParentID end as PID,d.SortID
          from hr_Department d join
          (SELECT d1.* FROM [hr_Department] d1 join fun_sys_GetUserDepartments('''+@UserID+''') g1 on d1.CompanyID=g1.DeptID union
          SELECT d2.* FROM [hr_Department] d2 join fun_sys_GetUserDepartments('''+@UserID+''') g2 on d2.DeptID=g2.DeptID)g on d.DeptID =g.DeptID  where d.IsActive=1 union
          select c.JC,c.CompanyID,'''',SortID from
          (SELECT k.* FROM [hr_Company] k join fun_sys_GetUserCompanys('''+@UserID+''') g on k.CompanyID=g.CompanyID)c
          where c.CompanyID in  (''' + REPLACE(@CompanyID,',',''',''') + ''') and c.IsActive=1 union
          select '' 全部部门'','''',''aaaaaa'',''0'' order by SortID';
          exec (@sql)
        </Sql>
        <Sql Name="GetComName" SharedName="GetComName" ConnectionName="Auth" Description="检索界面的公司下拉列表">select JC as Name,[CompanyID],SortID FROM fun_sys_GetUserCompanys(@UserID)  union select ' 无','','0' order by SortID;</Sql>
        <Sql Name="GetComWithRootName" SharedName="GetComWithRootName" ConnectionName="Auth" Description="获取根节点为‘泛亚江苏’公司树">
          SELECT CompanyID as ID,JC as Name,'000000' as PID,SortID
          FROM  fun_sys_GetUserCompanys(@UserID)
          union select '000000','泛亚江苏','111111','0' order by SortID;
        </Sql>
        <Sql Name="GetAllEmployee" SharedName="GetAllEmployee" ConnectionName="Auth" Description="新增公司时选择负责人">
          SELECT JC as Name,CompanyID as DeptID,'000000' as PID,SortID from hr_Company where IsActive=1
          union
          SELECT distinct [Name],[DeptID],IIF([ParentID]='',[CompanyID],[ParentID])[PID],[SortID] FROM [hr_Department] where IsActive=1
          union
          SELECT Name,EmployeeID,DeptID ,'9999' FROM [hr_Employee] where IsActive=1
          union
          SELECT '无','','000000','0'
          order by SortID
        </Sql>
        <Sql Name="GetAllEmployeeWithoutNone" SharedName="GetAllEmployeeWithoutNone" ConnectionName="Auth" Description="获得组织架构树">
          SELECT JC as Name,CompanyID as DeptID,'000000' as PID,SortID from hr_Company where IsActive=1
          union
          SELECT distinct [Name],[DeptID],IIF([ParentID]='',[CompanyID],[ParentID])[PID],[SortID] FROM [hr_Department] where IsActive=1
          union
          SELECT Name,EmployeeID,DeptID ,'9999' FROM [hr_Employee] where IsActive=1
          order by SortID
        </Sql>
        <Sql Name="GetAllComAndDptTree" SharedName="GetAllComAndDptTree" ConnectionName="Auth" Description="获取所有公司部门">
          SELECT Name,DeptID as ID, ParentID as PID, SortID FROM fun_sys_GetUserDepartments(@UserID) union
          select '泛亚集团','','000000',0
          order by SortID

        </Sql>
        <Sql Name="ReportTest" ConnectionName="Auth" Description="报表测试">
          SELECT [CompanyID],[Name],[Description]
          FROM [hr_Company]
        </Sql>
        <Sql Name="QueryCount" ConnectionName="Auth" Description="检索查询总数">
          DECLARE @sql varchar(max);
          DECLARE @where varchar(2000);
          SET @where=' M.[IsActive]=1';
          IF(len(@Key)&gt;0)
          BEGIN
          IF(LEN(@where)&gt;0)
          SET @where = @where + ' AND'
          set @where= @where+' (M.Name like ''%'+@Key+'%'' or A.Name like ''%'+@Key+'%'' or M.CompanyID like ''%'+@Key+'%''  or M.JC like ''%'+@Key+'%'' or M.JM like ''%'+@Key+'%'')';
          END

          SET @sql='SELECT COUNT(*)
          FROM
          (SELECT c.* FROM [hr_Company] c join fun_sys_GetUserCompanys('''+@UserID+''') g on c.CompanyID=g.CompanyID) M
          left outer join [hr_Employee] A on M.[ManagerID] = A.[EmployeeID]';

          IF(LEN(@where)&gt;0)
          BEGIN
          SET @sql=@sql+' WHERE' + @where;
          END
          execute(@sql);
        </Sql>
        <Sql Name="QueryPage" ConnectionName="Auth" Description="检索分页查询">
          DECLARE @sql varchar(max);
          DECLARE @where varchar(2000);
          SET @where=' M.[IsActive]=1';
          IF(len(@Key)&gt;0)
          BEGIN
          IF(LEN(@where)&gt;0)
          SET @where = @where + ' AND'
          set @where= @where+' (M.Name like ''%'+@Key+'%'' or A.Name like ''%'+@Key+'%'' or M.CompanyID like ''%'+@Key+'%''  or M.JC like ''%'+@Key+'%'' or M.JM like ''%'+@Key+'%'')';
          END

          SET @sql='SELECT M.[CompanyID] as CompanyID,M.[Name] as Name,M.[JC] as JC,M.[JM] as JM,M.[Description] as Description,A.[Name] as Manager,M.Url1,M.Tel1
          FROM
          (SELECT c.* FROM [hr_Company] c join fun_sys_GetUserCompanys('''+@UserID+''') g on c.CompanyID=g.CompanyID)  M
          left outer join [hr_Employee] A on M.[ManagerID] = A.[EmployeeID]';

          IF(LEN(@where)&gt;0)
          BEGIN
          SET @sql=@sql+' WHERE' + @where;
          END

          IF(LEN(ISNULL(@OrderBy,''))=0)
          BEGIN
          SET @sql=@sql+' ORDER BY M.[CompanyID]';
          END
          ELSE
          BEGIN
          SET @sql=@sql+' ORDER BY ' + @OrderBy;
          END

          SET @sql = @sql + '
          OFFSET ('+ CAST((@Page - 1) * @Rows AS varchar(10)) +') ROWS
          FETCH NEXT ' + CAST(@Rows AS varchar(10)) +' ROWS ONLY';

          execute(@sql);
        </Sql>
        <Sql Name="SearchEmployeeName" SharedName="SearchEmployeeName" ConnectionName="Auth" Description="根据输入的缩略字检索员工">
          select a.[EmployeeID],a.[Name] from
          (SELECT e2.* FROM [hr_Employee] e2 join fun_sys_GetUserDepartments(@UserID) g2 on e2.DeptID=g2.DeptID)a where a.[Name] like '%'+@Name+'%'
        </Sql>
        <Sql Name="SearchBankName" SharedName="SearchBankName" ConnectionName="Auth" Description="根据输入的关键字检索银行">select [BankID],[BankName] from [bi_Bank] where [CompanyID]=@CompanyID and [BankName] like '%'+@Name+'%'</Sql>
        <Sql Name="GetCompanyAndDeptAll" SharedName="GetCompanyAndDeptAll" ConnectionName="Auth" Description="获取根节点为泛亚信息技术的全部公司部门的树">
          select  Name,DeptID as ID, case when ParentID ='' then '111111' when ParentID !='' then ParentID end as PID, SortID FROM fun_sys_GetUserDepartments(@UserID) union
          select '泛亚集团','111111','000000',0
          order by SortID
        </Sql>
        <Sql Name="GetBUAndDept" SharedName="GetBUAndDept" ConnectionName="Auth" Description="获取根节点为泛亚集团的事业部信息">
          select  d.Name,d.DeptID as ID, IIF(d.ParentID ='',d.CompanyID+d.BUID,d.ParentID)as PID,d.SortID
          FROM hr_Department d
          join fun_sys_GetUserDepartments(@UserID) g on d.DeptID=g.DeptID
          union
          select distinct c.Name,c.CompanyID+d.BUID,b.BUID,c.SortID
          FROM hr_Department d
          join fun_sys_GetUserDepartments(@UserID)g on d.DeptID=g.DeptID
          join hr_BU b on d.BUID=b.BUID
          join hr_Company c on d.CompanyID=c.CompanyID
          union
          select  b.Name,b.BUID,'111111',b.SortID
          FROM hr_Department d
          join fun_sys_GetUserDepartments(@UserID) g on d.DeptID=g.DeptID
          join hr_BU b on d.BUID=b.BUID
          union
          select '泛亚集团','111111','000000',0
          order by SortID
        </Sql>
        <Sql Name="GetAllCompany" ConnectionName="Auth" Description="获取所有公司">
          SELECT CompanyID,Name FROM hr_Company WHERE IsActive=1 ORDER BY SortID
        </Sql>
        <Sql Name="GetDemo" SharedName="GetDemo" ConnectionName="Auth" Description="GetDemo">   SELECT CompanyID as ID,JC as Name FROM  fun_sys_GetUserCompanys(@UserID) 
   where JC like  '%'+@Key+'%' or JM like '%'+@Key+'%'
    order by SortID </Sql>
        <Sql Name="GetCompanyNameByKey" SharedName="GetCompanyNameByKey" ConnectionName="Auth" Description="根据关键字检索公司名称">    select a.JC,a.CompanyID from  (SELECT c.* FROM [hr_Company] c join fun_sys_GetUserCompanys(@UserID)
     g on c.CompanyID=g.CompanyID) a left outer join [hr_Employee] b on a.ManagerID=b.EmployeeID
     where a.Name like '%'+@Key+'%' or b.Name like '%'+@Key+'%' or a.JC like '%'+@Key+'%' or a.JM like '%'+@Key+'%'
     or a.CompanyID like '%'+@Key+'%'</Sql>
        <Sql Name="GetCompanyByUserID" SharedName="GetCompanyByUserID" ConnectionName="Auth" Description="获取用户拥有权限的公司">
          SELECT * FROM  fun_sys_GetUserCompanys(@UserID)
          ORDER BY SortID,CompanyID
        </Sql>
      </Table>
      <Table Name="hr_Department" ConnectionName="Auth" TableName="hr_Department">
        <Sql Name="Add" ConnectionName="Auth" Description="新增部门">
          if exists(select * from hr_Department where Name =@Name and IsActive=1 and CompanyID=@CompanyID and ParentID=@ParentID)
          begin
          RAISERROR ('已经存在相同信息，无法保存！',15, 1) WITH NOWAIT
          end
          else
          begin
          INSERT INTO [hr_Department]
          ([DeptID],[Name],[ManagerID],[ParentID],[CompanyID],[BUID],[Description],[IsActive],[SortID],[CreatedUser],[CreatedTime],[ModifiedUser],[ModifiedTime])
          VALUES(@DeptID,@Name,@ManagerID,isnull(@ParentID,'000000'),@CompanyID,@BUID,@Description,@IsActive,@SortID,@CreatedUser,@CreatedTime,@ModifiedUser,@ModifiedTime);
          end
          select DeptID as id,Name as text from [hr_Department] where [AutoKey]=scope_identity();
        </Sql>
        <Sql Name="Update" ConnectionName="Auth" SqlType="Execute" Description="更新部门信息">
          if exists(select * from hr_Department where Name =@Name and IsActive=1 and [ParentID]=@ParentID and [CompanyID]=@CompanyID and DeptID !=@DeptID)
          begin
          RAISERROR ('已经存在相同信息，无法保存！',15, 1) WITH NOWAIT
          end
          else
          begin
          UPDATE [hr_Department]
          SET  [Name]=@Name,[ManagerID]=@ManagerID,[ParentID]=@ParentID,[CompanyID]=@CompanyID,[BUID]=@BUID,[Description]=@Description,[SortID]=@SortID,[ModifiedUser]=@ModifiedUser,[ModifiedTime]=@ModifiedTime WHERE [DeptID]=@DeptID;

          end
          select Name as text from [hr_Department] WHERE [DeptID]=@DeptID;
        </Sql>
        <Sql Name="Delete" ConnectionName="Auth" SqlType="Execute" Description="更新所选部门为无效">
          declare @sql varchar(max);
          set @sql ='
if exists(select [DeptID] from [dbo].[hr_Department] where [ParentID] in ('''+replace(@DeptIDs,',',''',''')+''') and [IsActive]=1)
 RAISERROR (''该部门存在子部门，删除失败！'' ,15, 1) WITH NOWAIT
else if exists(SELECT [EmployeeID] FROM [hr_Employee] where [DeptID] in ('''+replace(@DeptIDs,',',''',''')+''') and [IsActive]=1)
 RAISERROR (''该部门存在员工，删除失败！'' ,15, 1) WITH NOWAIT
else
          begin
          UPDATE [hr_Department]
          SET [ModifiedUser]='''+@ModifiedUser+''',[ModifiedTime]='''+@ModifiedTime+''',[IsActive]=0 WHERE [DeptID] in ('''+replace(@DeptIDs,',',''',''')+''') ;
          END';
          exec(@sql);
        </Sql>
        <Sql Name="GetItem" ConnectionName="Auth" SqlType="Execute" Description="查看公司信息">
          select a.DeptID, a.[Name] as DeptName,a.BUID,d.[Name] as ParentName,b.[Name] as CompanyName,c.[Name] as BUName,e.Name as ManagerName,CASE a.[IsActive] WHEN 1 THEN '有效' WHEN 0 THEN '无效' END IsActive,a.Description,a.ManagerID,a.ParentID,a.CompanyID ,a.SortID,b.JC
          from [hr_Department] a
          left join [hr_Department] d on a.[ParentID]=d.[DeptID]
          left join [hr_Company] b on a.[CompanyID]=b.[CompanyID]
          left join [hr_BU] c on a.[BUID]=c.[BUID]
          left join hr_Employee e on a.ManagerID=e.EmployeeID
          WHERE a.[DeptID]=@DeptID;
        </Sql>
        <Sql Name="GetAll" ConnectionName="Auth" SqlType="Execute" Description="GetAll">
          SELECT [DeptID],[Name],[ManagerID],[ParentID],[CompanyID],[BUID],[Description],[IsActive],[SortID],[CreatedUser],[CreatedTime],[ModifiedUser],[ModifiedTime],[AutoKey] FROM [hr_Department];
        </Sql>
        <Sql Name="Query" ConnectionName="Auth" Description="部门的检索">
          select a.[DeptID],a.[Name] as DeptName,d.[Name] as ParentName,b.[Name] as CompanyName,c.[Name] as BUName,e.Name as ManagerName,a.[IsActive],a.[Description]
          from
          (SELECT d2.* FROM [hr_Department] d2 join fun_sys_GetUserDepartments(@UserID) g2 on d2.DeptID=g2.DeptID) a
          left join [hr_Department] d on a.[ParentID]=d.[DeptID]
          left join [hr_Company] b on a.[CompanyID]=b.[CompanyID]
          left join [hr_BU] c on a.[BUID]=c.[BUID]
          left join hr_Employee e on a.ManagerID=e.EmployeeID
          WHERE (a.[DeptID] LIKE '%'+@Key+'%' or a.Name like '%'+@Key+'%' or e.Name like '%'+@Key+'%' or b.Name like '%'+@Key+'%' ) AND a.[IsActive]=1 and  a.[CompanyID] like '%'+@CompanyID+'%' 
          order by a.ModifiedTime desc
          OFFSET ((CAST(@Page as int)-1)*CAST(@Rows as int)) Rows FETCH NEXT CAST(@Rows as int) ROWS ONLY;
        </Sql>
        <Sql Name="GetDeptTreeByCompanyID" SharedName="GetDeptTreeByCompanyID" ConnectionName="Auth" Description="根据选择到公司带出的所有部门">
          select d.Name as Name,d.DeptID as ID,d.ParentID as PID  from fun_sys_GetUserDepartments(@UserID)d join hr_Department dpt on d.DeptID=dpt.DeptID  where dpt.CompanyID=@CompanyID

        </Sql>
        <Sql Name="GetDeptTreeNoEmpty" SharedName="GetDeptTreeNoEmpty" ConnectionName="Auth" Description="GetDeptTreeNoEmpty">
          select a.[Name],a.[DeptID],a.ParentID,a.SortID from
          (SELECT d2.* FROM [hr_Department] d2 join fun_sys_GetUserDepartments(@UserID) g2 on d2.DeptID=g2.DeptID)a  where a.IsActive=1 order by a.SortID
        </Sql>
        <Sql Name="GetDeptTreeNoParent" SharedName="GetDeptTreeNoParent" ConnectionName="Auth" Description="获取部门树上级部门的根节点id为空，用于查询">
          select a.[Name],a.[DeptID] as ID,a.ParentID as PID,b.SortID from
          (SELECT d2.* FROM [hr_Department] d2 join fun_sys_GetUserDepartments(@UserID) g2 on d2.DeptID=g2.DeptID) a
          left join  hr_Company b on a.CompanyID=b.CompanyID
          where a.CompanyID=@CompanyID and a.IsActive=1 union select ' 无',' ','','0' order by SortID;
        </Sql>
        <Sql Name="GetDeptTreeNoParentForQuery" SharedName="GetDeptTreeNoParentForQuery" ConnectionName="Auth" Description="获取部门树上级部门的根节点id为空，用于查询">
          select a.[Name],a.[DeptID] as ID,a.ParentID as PID,b.SortID from
          (SELECT d2.* FROM [hr_Department] d2 join fun_sys_GetUserDepartments(@UserID) g2 on d2.DeptID=g2.DeptID) a
          left join  hr_Company b on a.CompanyID=b.CompanyID
          where a.CompanyID=@CompanyID and a.IsActive=1 union select ' 无','','000000','0' order by SortID;
        </Sql>
        <Sql Name="GetDeptSkipByMySelf" SharedName="GetDeptSkipByMySelf" ConnectionName="Auth" Description="获取当前用户部门之外的部门(改动后包含本部门)">
          select [Name],[DeptID] as [ID],[ParentID] as [PID],[SortID] from [hr_Department]
          where IsActive=1 and CompanyID=@CompanyID
          order by [SortID];
        </Sql>
        <Sql Name="QueryCount" ConnectionName="Auth" Description="查询总数">
          select count(*)
          from
          (SELECT d2.* FROM [hr_Department] d2 join fun_sys_GetUserDepartments(@UserID) g2 on d2.DeptID=g2.DeptID) a
          left join [hr_Department] d on a.[ParentID]=d.[DeptID]
          left join [hr_Company] b on a.[CompanyID]=b.[CompanyID]
          left join [hr_BU] c on a.[BUID]=c.[BUID]
          left join hr_Employee e on a.ManagerID=e.EmployeeID
          WHERE (a.[DeptID] LIKE '%'+@Key+'%' or a.Name like '%'+@Key+'%' or e.Name like '%'+@Key+'%' or b.Name like '%'+@Key+'%' ) AND a.[IsActive]=1 and  a.[CompanyID] like '%'+@CompanyID+'%' 
        </Sql>
        <Sql Name="GetDeptItem" ConnectionName="Auth" Description="获取部门详细信息">
          select a.DeptID, a.[Name] as Name,a.BUID,  isnull(d.[Name],'')  as Parent
          ,b.[Name] as CompanyName,c.[Name] as BUName,e.Name as ManagerName,CASE a.[IsActive] WHEN 1 THEN '有效' WHEN 0 THEN '无效' END IsActive,a.Description,a.ManagerID,a.ParentID,a.CompanyID ,a.SortID,b.JC
          from [hr_Department] a
          left join [hr_Department] d on a.[ParentID]=d.[DeptID]
          left join [hr_Company] b on a.[CompanyID]=b.[CompanyID]
          left join [hr_BU] c on a.[BUID]=c.[BUID]
          left join hr_Employee e on a.ManagerID=e.EmployeeID
          WHERE a.[DeptID]=@DeptID;
        </Sql>
        <Sql Name="GetDeptNameByKey" SharedName="GetDeptNameByKey" ConnectionName="Auth" Description="根据关键字模糊检索部门名称">select a.[DeptID] as ID,a.[Name] from [dbo].[hr_Department] a 
join fun_sys_GetUserDepartments(@UserID) b on a.DeptID=b.DeptID 
left join [dbo].[hr_Company] c on a.CompanyID=c.CompanyID
left join [dbo].[hr_Employee] d on a.ManagerID=d.EmployeeID
left join [dbo].[hr_BU] e on a.BUID=e.BUID
where a.Name like '%'+@Key+'%' or d.Name like '%'+@Key+'%'   or c.Name like '%'+@Key+'%' 
or e.Name like '%'+@Key+'%'</Sql>
        <Sql Name="GetBUIDBYDept" SharedName="GetBUIDBYDept" ConnectionName="Auth" Description="根据部门获取事业部信息">select [BUID] from [hr_Department] where [DeptID]=@DeptID</Sql>
      </Table>
      <Table Name="hr_Job" ConnectionName="Auth" TableName="hr_Job">
        <Sql Name="Add" ConnectionName="Auth" Description="Add">
          DECLARE @IsExist INT
          SET @IsExist = 0
          SELECT @IsExist = 1 FROM
          [hr_Job]
          WHERE [Name] = @Name AND [IsActive] = 1;
          IF (@IsExist = 0)
          BEGIN
          INSERT INTO [hr_Job]
          ([JobID],[Name],[Description],[IsActive],[SortID],[CreatedUser],[CreatedTime],[ModifiedUser],[ModifiedTime])
          VALUES(@JobID,LTRIM(RTRIM(@Name)),LTRIM(RTRIM(@Description)),@IsActive,@SortID,@CreatedUser,@CreatedTime,@ModifiedUser,@ModifiedTime);
          SELECT [JobID],[Name],[Description],IsActive ,[SortID] FROM
          [hr_Job]
          WHERE [AutoKey]=scope_identity();
          END
          ELSE
          BEGIN
          RAISERROR ('已经存在相同信息，无法保存！' ,15, 1) WITH NOWAIT
          END
        </Sql>
        <Sql Name="Update" ConnectionName="Auth" SqlType="Execute" Description="Update">
          DECLARE @IsExist INT
          SET @IsExist = 0
          SELECT @IsExist = 1 FROM
          [hr_Job]
          WHERE [Name] = @Name AND [JobID] &lt;&gt; @JobID AND [IsActive] = 1;
          IF (@IsExist = 0)
          BEGIN
          UPDATE [hr_Job]
          SET  [Name]=LTRIM(RTRIM(@Name)),[Description]=LTRIM(RTRIM(@Description)),[SortID]=@SortID,[ModifiedUser]=@ModifiedUser,[ModifiedTime]=@ModifiedTime WHERE [JobID]=@JobID;
          SELECT [JobID],[Name],[Description],IsActive ,[SortID]
          FROM [hr_Job]
          WHERE [JobID]=@JobID;
          END
          ELSE
          BEGIN
          RAISERROR ('已经存在相同信息，无法保存！' ,15, 1) WITH NOWAIT
          END
        </Sql>
        <Sql Name="Delete" ConnectionName="Auth" SqlType="Execute" Description="Delete">
          DECLARE @sql varchar(max);
          SET @sql='UPDATE [hr_Job]
          SET [ModifiedUser]='''+@ModifiedUser+''',[ModifiedTime]='''+@ModifiedTime+''',[IsActive]=0 WHERE [JobID] in ('''+replace(@JobIDs,',',''',''')+''') ;'
          EXEC(@sql);
        </Sql>
        <Sql Name="GetItem" ConnectionName="Auth" SqlType="Execute" Description="GetItem">
          SELECT [JobID],[Name],[Description],[IsActive],
          [SortID],[CreatedUser],[CreatedTime],[ModifiedUser],[ModifiedTime],[AutoKey] FROM [hr_Job]
          WHERE [JobID]=@JobID;
        </Sql>
        <Sql Name="GetAll" ConnectionName="Auth" SqlType="Execute" Description="GetAll">
          SELECT [JobID],[Name],[Description],[IsActive],[SortID],[CreatedUser],[CreatedTime],[ModifiedUser],[ModifiedTime],[AutoKey] FROM [hr_Job];
        </Sql>
        <Sql Name="GetAll_Search" ConnectionName="Auth" SqlType="Execute" Description="GetAll_Search">
          DECLARE @SQL VARCHAR(500)
          SET @SQL = '
          SELECT [JobID],[Name],[Description],[IsActive],[SortID]
          FROM [hr_Job]
          WHERE [IsActive] = 1'
          IF LTRIM(RTRIM(@Name)) &lt;&gt; ''
          BEGIN
          SET @SQL = @SQL + ' AND [Name] LIKE ''%'+LTRIM(RTRIM(@Name))+'%'''
          END
          SET @SQL = @SQL + ' ORDER BY [SortID];'
          EXEC (@SQL)
        </Sql>
        <Sql Name="Position" SharedName="GetPositionByDeptID" ConnectionName="Auth" Description="根据部门编号获取职位">
          select distinct a.JobID as ID ,ISNULL(b.Name,'无') as Name from hr_Employee a left join hr_Job b on a.JobID=b.JobID  where a.IsActive=1 and a.DeptID like '%'+@DeptID+'%'
        </Sql>
        <Sql Name="GetName" ConnectionName="Auth" Description="GetJobName">select JobID,Name from hr_Job union select '',' 全部';</Sql>
        <Sql Name="GetAllJob" SharedName="GetAllJob" ConnectionName="Auth" Description="获取所有职位">select JobID as ID,Name from hr_Job where IsActive=1 order by SortID</Sql>
        <Sql Name="QueryCount" ConnectionName="Auth" Description="查询总数">
          SELECT count([Name])
          FROM [hr_Job]
          WHERE [IsActive] = 1  AND [Name] LIKE '%'+@Name+'%'
        </Sql>
        <Sql Name="QueryPage" ConnectionName="Auth" Description="查询分页">
          SELECT [JobID],[Name],[Description],[IsActive],[SortID]
          FROM [hr_Job]
          WHERE [IsActive] = 1  AND [Name] LIKE '%'+@Name+'%'
          ORDER BY [SortID]
          OFFSET (CAST(@Page AS int) - 1) * CAST(@Rows AS int) ROWS
          FETCH NEXT CAST(@Rows AS int) ROWS ONLY;
        </Sql>
      </Table>
    </Group>
    <Group Name="系统安全">
      <Table Name="sys_Role" ConnectionName="Auth" TableName="sys_Role">
        <Sql Name="Add" ConnectionName="Auth" Description="Add">
          INSERT INTO [sys_Role]
          ([RoleID],[Name],[Description],[CreatedUser],[CreatedTime],[ModifiedUser],[ModifiedTime])
          VALUES(@RoleID,@Name,@Description,@CreatedUser,@CreatedTime,@ModifiedUser,@ModifiedTime);
          SELECT [RoleID],[Name],[Description],[CreatedUser],[CreatedTime],[ModifiedUser],[ModifiedTime],[AutoKey] FROM [sys_Role]
          WHERE [AutoKey]=scope_identity();
        </Sql>
        <Sql Name="Update" ConnectionName="Auth" SqlType="Execute" Description="Update">
          UPDATE [sys_Role]
          SET  [Name]=@Name,[Description]=@Description,[ModifiedUser]=@ModifiedUser,[ModifiedTime]=@ModifiedTime WHERE [RoleID]=@RoleID;
        </Sql>
        <Sql Name="Delete" ConnectionName="Auth" SqlType="Execute" Description="Delete">
          DELETE FROM [sys_Role]
          WHERE [RoleID]=@RoleID;
        </Sql>
        <Sql Name="GetItem" ConnectionName="Auth" SqlType="Execute" Description="GetItem">
          SELECT [RoleID],[Name],[Description],[CreatedUser],[CreatedTime],[ModifiedUser],[ModifiedTime],[AutoKey] FROM [sys_Role]
          WHERE [RoleID]=@RoleID;
        </Sql>
        <Sql Name="GetAll" ConnectionName="Auth" SqlType="Execute" Description="GetAll">SELECT [RoleID],[Name],[Description],[CreatedUser],[CreatedTime],[ModifiedUser],[ModifiedTime],[AutoKey] FROM [sys_Role];</Sql>
      </Table>
      <Table Name="sys_RolePage" ConnectionName="Auth" TableName="sys_RolePage">
        <Sql Name="Add" ConnectionName="Auth" Description="Add">
          INSERT INTO [sys_RolePage]
          ([RoleID],[PageID],[ActionValue],[DataFilter],[CreatedUser],[CreatedTime],[ModifiedUser],[ModifiedTime],[AutoKey])
          VALUES(@RoleID,@PageID,@ActionValue,@DataFilter,@CreatedUser,@CreatedTime,@ModifiedUser,@ModifiedTime,@AutoKey);
          SELECT [RoleID],[PageID],[ActionValue],[DataFilter],[CreatedUser],[CreatedTime],[ModifiedUser],[ModifiedTime],[AutoKey] FROM [sys_RolePage]
          WHERE [RoleID]=@RoleID AND [PageID]=@PageID;
        </Sql>
        <Sql Name="Update" ConnectionName="Auth" SqlType="Execute" Description="Update">
          UPDATE [sys_RolePage]
          SET  [RoleID]=@RoleID,[PageID]=@PageID,[ActionValue]=@ActionValue,[DataFilter]=@DataFilter,[ModifiedUser]=@ModifiedUser,[ModifiedTime]=@ModifiedTime,[AutoKey]=@AutoKey WHERE [RoleID]=@RoleID AND [PageID]=@PageID;
        </Sql>
        <Sql Name="Delete" ConnectionName="Auth" SqlType="Execute" Description="Delete">
          DELETE FROM [sys_RolePage]
          WHERE [RoleID]=@RoleID AND [PageID]=@PageID;
        </Sql>
        <Sql Name="GetItem" ConnectionName="Auth" SqlType="Execute" Description="GetItem">
          SELECT [RoleID],[PageID],[ActionValue],[DataFilter],[CreatedUser],[CreatedTime],[ModifiedUser],[ModifiedTime],[AutoKey] FROM [sys_RolePage]
          WHERE [RoleID]=@RoleID AND [PageID]=@PageID;
        </Sql>
        <Sql Name="GetAll" ConnectionName="Auth" SqlType="Execute" Description="GetAll">SELECT [RoleID],[PageID],[ActionValue],[DataFilter],[CreatedUser],[CreatedTime],[ModifiedUser],[ModifiedTime],[AutoKey] FROM [sys_RolePage];</Sql>
      </Table>
      <Table Name="sys_SerialCode" ConnectionName="Auth" TableName="sys_SerialCode">
        <Sql Name="Add" ConnectionName="Auth" Description="Add">
          INSERT INTO [sys_SerialCode]
          ([CodeType],[Prefix],[NextIndex],[FixedLength],[CreatedUser],[CreatedTime],[ModifiedUser],[ModifiedTime])
          VALUES(@CodeType,@Prefix,@NextIndex,@FixedLength,@CreatedUser,@CreatedTime,@ModifiedUser,@ModifiedTime);
          SELECT [CodeType],[Prefix],[NextIndex],[FixedLength],[CreatedUser],[CreatedTime],[ModifiedUser],[ModifiedTime],[AutoKey] FROM [sys_SerialCode]
          WHERE [AutoKey]=scope_identity();
        </Sql>
        <Sql Name="Update" ConnectionName="Auth" SqlType="Execute" Description="Update">
          UPDATE [sys_SerialCode]
          SET  [CodeType]=@CodeType,[Prefix]=@Prefix,[NextIndex]=@NextIndex,[FixedLength]=@FixedLength,[ModifiedUser]=@ModifiedUser,[ModifiedTime]=@ModifiedTime WHERE [CodeType]=@CodeType AND [Prefix]=@Prefix;
        </Sql>
        <Sql Name="Delete" ConnectionName="Auth" SqlType="Execute" Description="Delete">
          DELETE FROM [sys_SerialCode]
          WHERE [CodeType]=@CodeType AND [Prefix]=@Prefix;
        </Sql>
        <Sql Name="GetItem" ConnectionName="Auth" SqlType="Execute" Description="GetItem">
          SELECT [CodeType],[Prefix],[NextIndex],[FixedLength],[CreatedUser],[CreatedTime],[ModifiedUser],[ModifiedTime],[AutoKey] FROM [sys_SerialCode]
          WHERE [CodeType]=@CodeType AND [Prefix]=@Prefix;
        </Sql>
        <Sql Name="GetAll" ConnectionName="Auth" SqlType="Execute" Description="GetAll">SELECT [CodeType],[Prefix],[NextIndex],[FixedLength],[CreatedUser],[CreatedTime],[ModifiedUser],[ModifiedTime],[AutoKey] FROM [sys_SerialCode];</Sql>
      </Table>
      <Table Name="sys_User" ConnectionName="Auth" TableName="sys_User">
        <Sql Name="Add" ConnectionName="Auth" Description="Add">
          INSERT INTO [sys_User]
          ([UserID],[UserName],[FullName],[Email],[Password],[IsValid],[CreatedUser],[CreatedTime],[ModifiedUser],[ModifiedTime])
          VALUES(@UserID,@UserName,@FullName,@Email,@Password,@IsValid,@CreatedUser,@CreatedTime,@ModifiedUser,@ModifiedTime);
          SELECT [UserID],[UserName],[FullName],[Email],[Password],[IsValid],[CreatedUser],[CreatedTime],[ModifiedUser],[ModifiedTime],[AutoKey] FROM [sys_User]
          WHERE [AutoKey]=scope_identity();
        </Sql>
        <Sql Name="Update" ConnectionName="Auth" SqlType="Execute" Description="Update">
          UPDATE [sys_User]
          SET  [UserName]=@UserName,[FullName]=@FullName,[Email]=@Email,[Password]=@Password,[IsValid]=@IsValid,[ModifiedUser]=@ModifiedUser,[ModifiedTime]=@ModifiedTime WHERE [UserID]=@UserID;
        </Sql>
        <Sql Name="Delete" ConnectionName="Auth" SqlType="Execute" Description="Delete">
          DELETE FROM [sys_User]
          WHERE [UserID]=@UserID;
        </Sql>
        <Sql Name="GetItem" ConnectionName="Auth" SqlType="Execute" Description="GetItem">
          SELECT [UserID],[UserName],[FullName],[Email],[Password],[IsValid],[CreatedUser],[CreatedTime],[ModifiedUser],[ModifiedTime],[AutoKey] FROM [sys_User]
          WHERE [UserID]=@UserID;
        </Sql>
        <Sql Name="GetAll" ConnectionName="Auth" SqlType="Execute" Description="GetAll">SELECT [UserID],[UserName],[FullName],[Email],[Password],[IsValid],[CreatedUser],[CreatedTime],[ModifiedUser],[ModifiedTime],[AutoKey] FROM [sys_User];</Sql>
        <Sql Name="UpdateByEmpID" ConnectionName="Auth" Description="员工建档-账户设置">
          if exists(select * from hr_Employee a join sys_User b on a.UserID=b.UserID where a.EmployeeID=@EmployeeID)
          begin
          update sys_User set [IsValid]=@IsValid ,[ModifiedUser]=@ModifiedUser,[ModifiedTime]=@ModifiedTime where UserID in(select UserID from hr_Employee where EmployeeID=@EmployeeID)
          end
          else
          begin
          declare @userID varchar(6)
          exec sp_CreateSerialCode 'User','U',6,@userID output
          insert into [sys_User]([UserID],[UserName],[FullName],[Email],[Password],[IsValid],[CreatedUser],[CreatedTime],[ModifiedUser],[ModifiedTime] )
          values(@userID,@Email,@Name,@Email,'5A38563FFCF23CF186A23CC88B28115D',@IsValid ,@CreatedUser,@CreatedTime,@ModifiedUser,@ModifiedTime)
          UPDATE [hr_Employee] SET UserID=@userID WHERE  EmployeeID=@EmployeeID;
          end
          SELECT EmployeeID,c.Name+'-'+b.Name as DeptName,d.Name as JobName,a.Name,Sex,CardNo,
          CONVERT(nvarchar(20),Birthday) as Birthday,
          Nation,Marriage,Politics,Native,RegisterAddress,Health,LiveAddress,MobiPhone,Education,
          CONVERT(nvarchar(20),HireDate) as HireDate,
          CONVERT(nvarchar(20),Terminate) as Terminate,
          CONVERT(nvarchar(20),HireDate) as HireDate,a.[AutoKey],
          isnull(e.UserName,'无') as UserName,
          case e.IsValid when 0 then '停用' when 1 then '启用' else '无' end  as IsValid
          FROM [hr_Employee] a
          left join hr_Department b on a.DeptID=b.DeptID
          left join hr_Company c on b.CompanyID=c.CompanyID
          left join hr_Job d on a.JobID=d.JobID
          left join sys_User e on a.UserID=e.UserID
          WHERE [EmployeeID]=@EmployeeID;
        </Sql>
        <Sql Name="AddByEmpID" ConnectionName="Auth" Description="员工建档_创建账户">  declare @Name nvarchar(60)
  select @Name=Name from hr_Employee where EmployeeID=@EmployeeID
          if exists(select * from hr_Employee where  len(Email)&gt;0 and  EmployeeID= @EmployeeID)
          begin
          if exists(select * from  sys_User  where Email in (select Email from hr_Employee where EmployeeID= @EmployeeID))
          begin
  set @Name+='已存在相同账户信息，创建账户失败！'
  raiserror(@Name,16,1) with nowait
          end
          else
          begin
          declare @userID varchar(6)
          exec sp_CreateSerialCode 'User','U',6,@userID output
          insert into [sys_User]([UserID],[UserName],[FullName],[Email],[Password],[IsValid],[CreatedUser],[CreatedTime],[ModifiedUser],[ModifiedTime] )
          select @userID,Email,Name,Email,'5A38563FFCF23CF186A23CC88B28115D',1 ,@CreatedUser,@CreatedTime,@ModifiedUser,@ModifiedTime from hr_Employee
          WHERE  EmployeeID=@EmployeeID;
          UPDATE [hr_Employee] SET UserID=@userID WHERE  EmployeeID=@EmployeeID;
          SELECT EmployeeID,c.Name+'-'+b.Name as DeptName,d.Name as JobName,a.Name,Sex,CardNo,
          CONVERT(nvarchar(20),Birthday) as Birthday,
          Nation,Marriage,Politics,Native,RegisterAddress,Health,LiveAddress,MobiPhone,Education,
          CONVERT(nvarchar(20),HireDate) as HireDate,
          CONVERT(nvarchar(20),Terminate) as Terminate,
          CONVERT(nvarchar(20),HireDate) as HireDate,a.[AutoKey],
          isnull(e.UserName,'无') as UserName,
          case e.IsValid when 0 then '停用' when 1 then '启用' else '无' end  as IsValid
          FROM [hr_Employee] a
          left join hr_Department b on a.DeptID=b.DeptID
          left join hr_Company c on b.CompanyID=c.CompanyID
          left join hr_Job d on a.JobID=d.JobID
          left join sys_User e on a.UserID=e.UserID
          WHERE [EmployeeID]=@EmployeeID;
          end
          end
          else
          begin
  set @Name+='不存在公司邮箱，创建账户失败！'
  raiserror(@Name,16,1) with nowait
          end
        </Sql>
      </Table>
      <Table Name="sys_UserLog" ConnectionName="Auth" TableName="sys_UserLog">
        <Sql Name="Add" ConnectionName="Auth" Description="Add">
          INSERT INTO [sys_UserLog]
          ([UserName],[ActionName],[Description],[Url],[ClientIP],[CreatedUser],[CreatedTime],[ModifiedUser],[ModifiedTime])
          VALUES(@UserName,@ActionName,@Description,@Url,@ClientIP,@CreatedUser,@CreatedTime,@ModifiedUser,@ModifiedTime);
          SELECT [AutoKey],[UserName],[ActionName],[Description],[Url],[ClientIP],[CreatedUser],[CreatedTime],[ModifiedUser],[ModifiedTime] FROM [sys_UserLog]
          WHERE [AutoKey]=scope_identity();
        </Sql>
        <Sql Name="Update" ConnectionName="Auth" SqlType="Execute" Description="Update">
          UPDATE [sys_UserLog]
          SET  [UserName]=@UserName,[ActionName]=@ActionName,[Description]=@Description,[Url]=@Url,[ClientIP]=@ClientIP,[ModifiedUser]=@ModifiedUser,[ModifiedTime]=@ModifiedTime WHERE [AutoKey]=@AutoKey;
        </Sql>
        <Sql Name="Delete" ConnectionName="Auth" SqlType="Execute" Description="Delete">
          DELETE FROM [sys_UserLog]
          WHERE [AutoKey]=@AutoKey;
        </Sql>
        <Sql Name="GetItem" ConnectionName="Auth" SqlType="Execute" Description="GetItem">
          SELECT [AutoKey],[UserName],[ActionName],[Description],[Url],[ClientIP],[CreatedUser],[CreatedTime],[ModifiedUser],[ModifiedTime] FROM [sys_UserLog]
          WHERE [AutoKey]=@AutoKey;
        </Sql>
        <Sql Name="GetAll" ConnectionName="Auth" SqlType="Execute" Description="GetAll">SELECT [AutoKey],[UserName],[ActionName],[Description],[Url],[ClientIP],[CreatedUser],[CreatedTime],[ModifiedUser],[ModifiedTime] FROM [sys_UserLog];</Sql>
        <Sql Name="Query" ConnectionName="Auth" Description="Query获取查询结果">
          SELECT [AutoKey],[UserName],[ActionName],[Description],[Url],[ClientIP],[CreatedUser],CONVERT(nvarchar(24),[CreatedTime],121) as [CreatedTime],[ModifiedUser],[ModifiedTime] FROM [sys_UserLog]
          where [UserName] like '%'+@UserName+'%' and [CreatedTime] between @Starttime and @Endtime order by CreatedTime desc
          OFFSET ((CAST(@Page as int)-1)*CAST(@Rows as int)) Rows FETCH NEXT CAST(@Rows as int) ROWS ONLY;
        </Sql>
        <Sql Name="QueryCount" ConnectionName="Auth" Description="查询总数">
          SELECT count(*) FROM [sys_UserLog]
          where [UserName] like '%'+@UserName+'%' and [CreatedTime] between @Starttime and @Endtime
        </Sql>
        <Sql Name="GetData" ConnectionName="Auth" Description="初始加载">
          SELECT top 50 [AutoKey],[UserName],[ActionName],[Description],[Url],[ClientIP],[CreatedUser],CONVERT(nvarchar(24),[CreatedTime],121) as [CreatedTime],[ModifiedUser],[ModifiedTime] FROM [sys_UserLog]
          where  [CreatedTime] &lt;= getdate() order by CreatedTime desc
        </Sql>
      </Table>
      <Table Name="sys_UserRole" ConnectionName="Auth" TableName="sys_UserRole">
        <Sql Name="Add" ConnectionName="Auth" Description="Add">
          INSERT INTO [sys_UserRole]
          ([UserID],[RoleID],[CreatedUser],[CreatedTime],[ModifiedUser],[ModifiedTime],[AutoKey])
          VALUES(@UserID,@RoleID,@CreatedUser,@CreatedTime,@ModifiedUser,@ModifiedTime,@AutoKey);
          SELECT [UserID],[RoleID],[CreatedUser],[CreatedTime],[ModifiedUser],[ModifiedTime],[AutoKey] FROM [sys_UserRole]
          WHERE [UserID]=@UserID AND [RoleID]=@RoleID;
        </Sql>
        <Sql Name="Update" ConnectionName="Auth" SqlType="Execute" Description="Update">
          UPDATE [sys_UserRole]
          SET  [UserID]=@UserID,[RoleID]=@RoleID,[ModifiedUser]=@ModifiedUser,[ModifiedTime]=@ModifiedTime,[AutoKey]=@AutoKey WHERE [UserID]=@UserID AND [RoleID]=@RoleID;
        </Sql>
        <Sql Name="Delete" ConnectionName="Auth" SqlType="Execute" Description="Delete">
          DELETE FROM [sys_UserRole]
          WHERE [UserID]=@UserID AND [RoleID]=@RoleID;
        </Sql>
        <Sql Name="GetItem" ConnectionName="Auth" SqlType="Execute" Description="GetItem">
          SELECT [UserID],[RoleID],[CreatedUser],[CreatedTime],[ModifiedUser],[ModifiedTime],[AutoKey] FROM [sys_UserRole]
          WHERE [UserID]=@UserID AND [RoleID]=@RoleID;
        </Sql>
        <Sql Name="GetAll" ConnectionName="Auth" SqlType="Execute" Description="GetAll">SELECT [UserID],[RoleID],[CreatedUser],[CreatedTime],[ModifiedUser],[ModifiedTime],[AutoKey] FROM [sys_UserRole];</Sql>
      </Table>
      <Table Name="sys_Code" ConnectionName="Auth" TableName="sys_Code">
        <Sql Name="GetCodes" ConnectionName="Auth" Description="GetCodes">
          SELECT [CodeID],[CodeName]
          FROM [dbo].[sys_Code]
          where ClassName=@ClassName
        </Sql>
      </Table>
      <Table Name="sys_MailServer" ConnectionName="Auth" TableName="sys_MailServer">
        <Sql Name="Query" ConnectionName="Auth" Description="检索查询">
          DECLARE @sql varchar(max);
          DECLARE @where varchar(2000);
          SET @where='';
          IF(len(@ServerName)&gt;0)
          BEGIN
          IF(LEN(@where)&gt;0)
          SET @where = @where + ' AND'
          set @where= @where+' (' + @ServerName + ')';
          END

          IF(len(@DomainName)&gt;0)
          BEGIN
          IF(LEN(@where)&gt;0)
          SET @where = @where + ' AND'
          set @where= @where+' (' + @DomainName + ')';
          END

          SET @sql='SELECT [ServerID],[ServerName],[DomainName],[ServerAddress],[ServerPort],[EnableSSL],[DefaultUser],[DefaultPassword],[Description]
          FROM [sys_MailServer]';

          IF(LEN(@where)&gt;0)
          BEGIN
          SET @sql=@sql+' WHERE' + @where;
          END
          execute(@sql);
        </Sql>
        <Sql Name="GetDetail" ConnectionName="Auth" Description="查询明细">
          SELECT [ServerName],[DomainName],[ServerAddress],[ServerPort],[EnableSSL],[DefaultUser],[Description]
          FROM [sys_MailServer]
          WHERE [ServerID]=@ServerID
        </Sql>
        <Sql Name="GetEdit" ConnectionName="Auth" Description="查询编辑">
          SELECT [ServerID],[ServerName],[DomainName],[ServerAddress],[ServerPort],[EnableSSL],[DefaultUser],[DefaultPassword],[Description]
          FROM [sys_MailServer]
          WHERE [ServerID]=@ServerID
        </Sql>
        <Sql Name="Update" ConnectionName="Auth" Description="更新">
          UPDATE [sys_MailServer]
          SET  [ServerName]=@ServerName,[DomainName]=@DomainName,[ServerAddress]=@ServerAddress,[ServerPort]=@ServerPort,[EnableSSL]=@EnableSSL,[DefaultUser]=@DefaultUser,[DefaultPassword]=@DefaultPassword,[Description]=@Description,[ModifiedUser]=@ModifiedUser,[ModifiedTime]=@ModifiedTime WHERE [ServerID]=@ServerID;
          SELECT [ServerID],[ServerName],[DomainName],[ServerAddress],[ServerPort],[EnableSSL],[DefaultUser],[DefaultPassword],[Description]
          FROM [sys_MailServer]
          WHERE [ServerID]=@ServerID
        </Sql>
        <Sql Name="Delete" ConnectionName="Auth" Description="删除">
          DECLARE @sql varchar(max);
          BEGIN TRY
          IF(CHARINDEX(',',@Keys,0)&lt;=0)
          BEGIN
          DELETE FROM [sys_MailServer]
          WHERE [ServerID]=@Keys;
          END
          ELSE
          BEGIN
          SET @sql= 'DELETE FROM [sys_MailServer] WHERE [Keys] in (''' + REPLACE(@Keys,',',''',''') + ''')';
          EXEC(@sql);
          END
          END TRY
          BEGIN CATCH
          DECLARE @error varchar(2000);
          SET @error = ERROR_MESSAGE();
          RAISERROR(@error ,11,1);
          END CATCH
        </Sql>
        <Sql Name="Add" ConnectionName="Auth" Description="新增">
          DECLARE @serverid varchar(50);
          EXEC sp_CreateSerialCode 'MS','M',6,@serverid output;
          INSERT INTO [sys_MailServer]
          ([ServerID],[ServerName],[DomainName],[ServerAddress],[ServerPort],[EnableSSL],[DefaultUser],[DefaultPassword],[Description],[CreatedUser],[CreatedTime],[ModifiedUser],[ModifiedTime])
          VALUES(@serverid,@ServerName,@DomainName,@ServerAddress,@ServerPort,@EnableSSL,@DefaultUser,@DefaultPassword,@Description,@CreatedUser,@CreatedTime,@ModifiedUser,@ModifiedTime);
          SELECT [ServerID],[ServerName],[DomainName],[ServerAddress],[ServerPort],[EnableSSL],[DefaultUser],[DefaultPassword],[Description]
          FROM [sys_MailServer]
          WHERE [AutoKey]=scope_identity()
        </Sql>
      </Table>
    </Group>
    <Group Name="业务模块">
      <Table Name="bi_CustomerType" ConnectionName="Auth" TableName="bi_CustomerType">
        <Sql Name="Add" ConnectionName="Auth" Description="Add">
          if exists(select * from [bi_CustomerType] where [CustomerType_Name]=@CustomerType_Name and [IsActive] = 1)
          begin
          RAISERROR ('已经存在相同信息，无法保存！',15, 1) WITH NOWAIT
          end
          else
          begin
          INSERT INTO [bi_CustomerType]
          ([CustomerType_ID],[CustomerType_Name],[Remark],[IsActive],[CreatedUser],[CreatedTime],[ModifiedUser],[ModifiedTime])
          VALUES(@CustomerType_ID,@CustomerType_Name,@Remark,@IsActive,@CreatedUser,@CreatedTime,@ModifiedUser,@ModifiedTime);
          SELECT [CustomerType_ID],[CustomerType_Name],[Remark],[IsActive],[CreatedUser],[CreatedTime],[ModifiedUser],[ModifiedTime],[AutoKey] FROM [bi_CustomerType]
          WHERE [AutoKey]=scope_identity();
          end;
        </Sql>
        <Sql Name="Update" ConnectionName="Auth" SqlType="Execute" Description="Update">
          if exists(select * from [bi_CustomerType] where [CustomerType_Name]=@CustomerType_Name and [CustomerType_ID]!=@CustomerType_ID and [IsActive] = 1 )
          begin
          RAISERROR ('已经存在相同信息，无法保存！',15, 1) WITH NOWAIT
          end
          else
          begin
          UPDATE [bi_CustomerType]
          SET  [CustomerType_Name]=@CustomerType_Name,[Remark]=@Remark,[ModifiedUser]=@ModifiedUser,[ModifiedTime]=@ModifiedTime WHERE [CustomerType_ID]=@CustomerType_ID;
          SELECT [CustomerType_ID],[CustomerType_Name],[Remark],[IsActive],[CreatedUser],[CreatedTime],[ModifiedUser],[ModifiedTime],[AutoKey] FROM [bi_CustomerType]
          WHERE [CustomerType_ID]=@CustomerType_ID;
          end;
        </Sql>
        <Sql Name="Delete" ConnectionName="Auth" SqlType="Execute" Description="Delete">
          declare @sql varchar(max);

          set @sql='UPDATE [bi_CustomerType]
          SET [ModifiedUser]='''+@ModifiedUser+''',[ModifiedTime]='''+@ModifiedTime+''',[IsActive]=0 WHERE [CustomerType_ID] in ('''+replace(@CustomerType_ID,',',''',''')+''') ;'
          exec(@sql);
        </Sql>
        <Sql Name="GetItem" ConnectionName="Auth" SqlType="Execute" Description="GetItem">
          SELECT [CustomerType_ID],[CustomerType_Name],[Remark],[IsActive],[CreatedUser],[CreatedTime],[ModifiedUser],[ModifiedTime],[AutoKey] FROM [bi_CustomerType]
          WHERE [CustomerType_ID]=@CustomerType_ID;
        </Sql>
        <Sql Name="Search" ConnectionName="Auth" Description="Search">
          SELECT [CustomerType_ID],[CustomerType_Name],[Remark],[IsActive],[CreatedUser],[CreatedTime],[ModifiedUser],[ModifiedTime],[AutoKey] FROM [bi_CustomerType]
          WHERE [CustomerType_Name] like '%'+@CustomerType_Name+'%' and [IsActive]  like '%'+@IsActive+'%';
        </Sql>
      </Table>
      <Table Name="bi_Payment" ConnectionName="Auth" TableName="bi_Payment">
        <Sql Name="Add" ConnectionName="Auth" Description="Add">
          if(@Parent_Payment_ID='')
          begin
          set @Parent_Payment_ID='000000'
          end
          if exists(select * from [bi_Payment] where [Payment_Name]=@Payment_Name and [Parent_Payment_ID]=@Parent_Payment_ID and [IsActive] = 1)
          begin
          RAISERROR ('已经存在相同信息，无法保存！',15, 1) WITH NOWAIT
          end
          else
          begin
          INSERT INTO [bi_Payment]
          ([Payment_ID],[Payment_Name],[Parent_Payment_ID],[Type],[Remark],[IsActive],[CreatedUser],[CreatedTime],[ModifiedUser],[ModifiedTime])
          VALUES(@Payment_ID,@Payment_Name,@Parent_Payment_ID,@Type,@Remark,@IsActive,@CreatedUser,@CreatedTime,@ModifiedUser,@ModifiedTime);
          SELECT a.[Payment_ID],a.[Payment_Name],case when (a.[Type]=0) then '收入' when  (a.[Type]=1)  then '支出' end as Type,a.[Parent_Payment_ID],isnull(b.[Payment_Name],'无') as Parent_Payment_Name,a.[Remark] FROM [bi_Payment] a left join [bi_Payment] b on a.Parent_Payment_ID=b.Payment_ID
          WHERE a.[AutoKey]=scope_identity();
          end
        </Sql>
        <Sql Name="Update" ConnectionName="Auth" SqlType="Execute" Description="Update">
          if exists(select *  from [bi_Payment] where [Payment_Name]=@Payment_Name and [Payment_ID]!=@Payment_ID and [Parent_Payment_ID]=@Parent_Payment_ID and [IsActive] = 1)
          begin
          RAISERROR ('已经存在相同信息，无法保存！',15, 1) WITH NOWAIT
          end
          else
          begin
          UPDATE [bi_Payment]
          SET [Payment_Name]=@Payment_Name,[Parent_Payment_ID]=@Parent_Payment_ID,[Type]=@Type,[Remark]=@Remark,[ModifiedUser]=@ModifiedUser,[ModifiedTime]=@ModifiedTime WHERE [Payment_ID]=@Payment_ID;
          SELECT a.[Payment_ID],a.[Payment_Name],case when (a.[Type]=0) then '收入' when  (a.[Type]=1)  then '支出' end as Type,a.[Parent_Payment_ID],isnull(b.[Payment_Name],'无') as Parent_Payment_Name,a.[Remark] FROM [bi_Payment] a left join [bi_Payment] b on a.Parent_Payment_ID=b.Payment_ID
          WHERE a.[Payment_ID]=@Payment_ID;
          end
        </Sql>
        <Sql Name="Delete" ConnectionName="Auth" SqlType="Execute" Description="Delete">
          declare @sql varchar(max);
          set @sql ='
          declare @m int
          declare @n int
          select @m= COUNT([Payment_ID]) from [dbo].[bi_Payment] where [Payment_ID] in ('''+replace(@Payment_ID,',',''',''')+''') ;
          select @n= COUNT([Payment_ID]) from [dbo].[bi_Payment] where [Payment_ID] in ('''+replace(@Payment_ID,',',''',''')+''')  and  [Payment_ID] not in (SELECT a.[Payment_ID] FROM [bi_Payment] a join [bi_Payment] b on a.Payment_ID=b.Parent_Payment_ID where b.[IsActive]=1 group by a.[Payment_ID]) ;
          IF (@m=@n)
          BEGIN
          UPDATE [bi_Payment]SET [ModifiedUser]='''+@ModifiedUser+''',[ModifiedTime]='''+@ModifiedTime+''',[IsActive]=0 WHERE [Payment_ID] in ('''+replace(@Payment_ID,',',''',''')+''') ;
          END
          ELSE
          BEGIN
          RAISERROR (''存在父类型信息，删除无法执行'' ,15, 1) WITH NOWAIT
          END';
          exec(@sql);
        </Sql>
        <Sql Name="Select" ConnectionName="Auth" Description="Select">
          SELECT a.[Payment_ID],a.[Payment_Name],a.[Type],a.[Parent_Payment_ID],isnull(b.[Payment_Name],'无') as Parent_Payment_Name,a.[Remark] FROM [bi_Payment] a left join [bi_Payment] b on a.Parent_Payment_ID=b.Payment_ID
          WHERE  a.[Payment_ID]=@Payment_ID;

        </Sql>
        <Sql Name="Search" ConnectionName="Auth" Description="Search">
          SELECT a.[Payment_ID],a.[Payment_Name],case when (a.[Type]=0) then '收入' when  (a.[Type]=1)  then '支出' end as Type,a.[Parent_Payment_ID],isnull(b.[Payment_Name],'无') as Parent_Payment_Name,a.[Remark] FROM [bi_Payment] a left join [bi_Payment] b on a.Parent_Payment_ID=b.Payment_ID
          WHERE a.[Payment_Name] like '%'+@Payment_Name+'%' and a.[Type]  like '%'+@Type+'%'  and a.[IsActive]  like '%'+@IsActive+'%'  and a. [Parent_Payment_ID] like '%'+@Parent_Payment_ID+'%' ;
        </Sql>
        <Sql Name="SType" ConnectionName="Auth" Description="SType">
          SELECT [Type],case when ([Type]=0) then '收入' when  ([Type]=1)  then '支出' end as TypeName FROM [bi_Payment] group by [Type];
        </Sql>
        <Sql Name="GetPaymentByType" SharedName="GetPaymentByType" ConnectionName="Auth" Description="GetPaymentByType">
          SELECT RTRIM(CONVERT(NVARCHAR,PaymentID)) PaymentID,PaymentName FROM [bi_Payment] WHERE [Type]=@T
        </Sql>
      </Table>
      <Table Name="bi_Unit" ConnectionName="Auth" TableName="bi_Unit">
        <Sql Name="Add" ConnectionName="Auth" Description="Add">
          declare @i int
          select @i=count(*) from [bi_Unit] where [Unit_Name]=replace(@Unit_Name,' ','') and [IsActive] = 1;
          if(@i&gt;0)
          begin
          RAISERROR ('该计量单位已经存在，信息添加失败！',15, 1) WITH NOWAIT
          end
          else
          begin
          INSERT INTO [bi_Unit]
          ([Unit_ID],[Unit_Name],[IsActive],[CreatedUser],[CreatedTime],[ModifiedUser],[ModifiedTime])
          VALUES(@Unit_ID,@Unit_Name,@IsActive,@CreatedUser,@CreatedTime,@ModifiedUser,@ModifiedTime);
          SELECT [Unit_ID],[Unit_Name],[CreatedUser],[CreatedTime],[ModifiedUser],[ModifiedTime] FROM [bi_Unit]
          WHERE [AutoKey]=scope_identity();
          end;
        </Sql>
        <Sql Name="Update" ConnectionName="Auth" SqlType="Execute" Description="Update">
          declare @i int
          select @i=count(*) from [bi_Unit] where [Unit_Name]=replace(@Unit_Name,' ','') and [IsActive] = 1;
          if(@i&gt;0)
          begin
          RAISERROR ('该计量单位已经存在，信息添加失败！',15, 1) WITH NOWAIT
          end
          else
          begin
          UPDATE [bi_Unit]
          SET  [Unit_ID]=@Unit_ID,[Unit_Name]=@Unit_Name,[ModifiedUser]=@ModifiedUser,[ModifiedTime]=@ModifiedTime WHERE [Unit_ID]=@Unit_ID;
          SELECT [Unit_ID],[Unit_Name],[CreatedUser],[CreatedTime],[ModifiedUser],[ModifiedTime] FROM [bi_Unit]
          WHERE [Unit_ID]=@Unit_ID;
          end;

        </Sql>
        <Sql Name="Delete" ConnectionName="Auth" SqlType="Execute" Description="Delete">
          declare @sql varchar(max);

          set @sql='UPDATE [bi_Unit]
          SET [ModifiedUser]='''+@ModifiedUser+''',[ModifiedTime]='''+@ModifiedTime+''',[IsActive]=0 WHERE [Unit_ID] in ('''+replace(@Unit_IDs,',',''',''')+''') ;'
          exec(@sql);
        </Sql>
        <Sql Name="GetItem" ConnectionName="Auth" SqlType="Execute" Description="GetItem">
          SELECT [Unit_ID],[Unit_Name],[IsActive],[CreatedUser],[CreatedTime],[ModifiedUser],[ModifiedTime],[AutoKey] FROM [bi_Unit]
          WHERE [Unit_ID]=@Unit_ID;
        </Sql>
        <Sql Name="GetAll" ConnectionName="Auth" SqlType="Execute" Description="GetAll">SELECT [Unit_ID],[Unit_Name],[IsActive],[CreatedUser],[CreatedTime],[ModifiedUser],[ModifiedTime],[AutoKey] FROM [bi_Unit];</Sql>
        <Sql Name="Search" ConnectionName="Auth" Description="Search">
          SELECT [Unit_ID],[Unit_Name],[CreatedUser],[CreatedTime],[ModifiedUser],[ModifiedTime],[AutoKey]
          FROM [bi_Unit]
          WHERE [Unit_Name] like '%' + @Unit_Name + '%' and [IsActive] like '%'+@IsActive+'%';
        </Sql>
      </Table>
      <Table Name="pct_ProductType" ConnectionName="Auth" TableName="pct_ProductType">
        <Sql Name="Add" ConnectionName="Auth" Description="Add">
          declare @i int
          select @i=count(*) from [pct_ProductType] where  [ProductType_Name]=replace(@ProductType_Name,' ','') and [Product_Parent_Type_ID]=@Product_Parent_Type_ID and [IsActive] = 1;
          if(@i&gt;0)
          begin
          RAISERROR ('该产品类别已经存在，信息添加失败！',15, 1) WITH NOWAIT
          end
          else
          begin
          INSERT INTO [pct_ProductType]
          ([ProductType_ID],[ProductType_Name],[Product_Parent_Type_ID],[IsActive],[CreatedUser],[CreatedTime],[ModifiedUser],[ModifiedTime])
          VALUES(@ProductType_ID,@ProductType_Name,@Product_Parent_Type_ID,@IsActive,@CreatedUser,@CreatedTime,@ModifiedUser,@ModifiedTime);
          SELECT a.* ,isnull(b.[ProductType_Name],'无') as [ParentType_Name]
          FROM [pct_ProductType] a left join  [pct_ProductType] b on a.[Product_Parent_Type_ID]=b.[ProductType_ID]
          WHERE a.[AutoKey]=scope_identity();
          end;
        </Sql>
        <Sql Name="Update" ConnectionName="Auth" SqlType="Execute" Description="Update">
          declare @i int
          select @i=count(*) from [pct_ProductType] where  [ProductType_Name]=replace(@ProductType_Name,' ','') and [ProductType_ID]!=@ProductType_ID and [Product_Parent_Type_ID]=@Product_Parent_Type_ID and [IsActive] = 1;
          if(@i&gt;0)
          begin
          RAISERROR ('该产品类别已经存在，信息添加失败！',15, 1) WITH NOWAIT
          end
          else
          begin
          UPDATE [pct_ProductType]
          SET  [ProductType_ID]=@ProductType_ID,[ProductType_Name]=@ProductType_Name,[Product_Parent_Type_ID]=@Product_Parent_Type_ID,[ModifiedUser]=@ModifiedUser,[ModifiedTime]=@ModifiedTime WHERE [ProductType_ID]=@ProductType_ID;
          SELECT a.* ,isnull(b.[ProductType_Name],'无') as [ParentType_Name]
          FROM [pct_ProductType] a left join  [pct_ProductType] b on a.[Product_Parent_Type_ID]=b.[ProductType_ID]
          WHERE a.[ProductType_ID]=@ProductType_ID;
          end;
        </Sql>
        <Sql Name="Delete" ConnectionName="Auth" SqlType="Execute" Description="Delete">
          declare @sql varchar(max);

          set @sql='UPDATE [pct_ProductType]
          SET [ModifiedUser]='''+@ModifiedUser+''',[ModifiedTime]='''+@ModifiedTime+''',[IsActive]=0 WHERE [ProductType_ID] in ('''+replace(@ProductType_IDs,',',''',''')+''') ;'
          exec(@sql);
        </Sql>
        <Sql Name="GetItem" ConnectionName="Auth" SqlType="Execute" Description="GetItem">SELECT [ProductType_ID],[ProductType_Name],[Product_Parent_Type_ID],[IsActive],[CreatedUser],[CreatedTime],[ModifiedUser],[ModifiedTime],[AutoKey] FROM [pct_ProductType] where [ProductType_ID] in (SELECT [Product_Parent_Type_ID] from [pct_ProductType] group by [Product_Parent_Type_ID]);</Sql>
        <Sql Name="GetAll" ConnectionName="Auth" Description="GetAll">
          SELECT a.* ,isnull(b.[ProductType_Name],'无') as [ProductType_Parent_Name]
          FROM [pct_ProductType] a left join  [pct_ProductType] b on a.[Product_Parent_Type_ID]=b.[ProductType_ID]
          WHERE a.[ProductType_ID]=@ProductType_ID;
        </Sql>
        <Sql Name="Search" ConnectionName="Auth" Description="Search">
          SELECT a.* ,isnull(b.[ProductType_Name],'无') as [ParentType_Name]
          FROM [pct_ProductType] a left join  [pct_ProductType] b on a.[Product_Parent_Type_ID]=b.[ProductType_ID]
          WHERE a.[ProductType_Name] like '%' + @ProductType_Name + '%'  and a.[Product_Parent_Type_ID] like '%' + @Product_Parent_Type_ID + '%'  and a.[IsActive] like '%'+@IsActive+'%';
        </Sql>
      </Table>
      <Table Name="bi_Bank_Role" ConnectionName="Auth" TableName="bi_Bank_Role" />
      <Table Name="bi_Customer" ConnectionName="Auth" TableName="bi_Customer">
        <Sql Name="GetDetail" ConnectionName="Auth" Description="查询明细">
          SELECT a.[CustomerID],a.[CustomerName],a.[CustomerJC],a.[CustomerJM]
          ,case a.[CState] when '10' then '潜在客户' when '20' then '意向客户' when '30' then '准客户' when '40' then '成单客户' else a.[CState] end as [CState]
          ,CASE a.CType WHEN '10' THEN '大客户' WHEN '20' THEN '普通客户' WHEN '30' THEN '代理商' WHEN '40' THEN '代理商客户' END CType
          ,d.[CustomerName] as [AgentID]
          ,a.[Contact],a.[ContactSex],a.[ContactMobiPhone],a.[ContactTel],a.[ContactTax],a.[ContactCardNo],a.[ContactEmail],a.[QQ],a.[Area],a.[Site],a.[ZipCode],a.[Address]
          ,a.[BusinessLicenseCode],a.[OrganizationCode],a.[TaxRegistrationNum],a.[InvoiceAddress],a.[Remark],case a.[CNature] when '20' then '企业' when '10' then '个人' end as [CNature]
          ,be.Name BName, se.Name SName
          FROM [bi_Customer] a
          left join [bi_Customer] d on a.AgentID=d.CustomerID
          LEFT JOIN bi_CustomerBi bi ON a.CustomerID=bi.CustomerID AND bi.IsActive=1
          LEFT JOIN hr_Employee be ON bi.BID=be.EmployeeID
          LEFT JOIN bi_CustomerService s ON a.CustomerID=s.CustomerID AND s.IsActive=1
          LEFT JOIN hr_Employee se ON s.EmployeeID=se.EmployeeID
          WHERE a.[CustomerID]=@CustomerID
        </Sql>
        <Sql Name="GetEmployeeByCustomerID" SharedName="GetEmployeeByCustomerID" ConnectionName="Auth" Description="获得跟踪客户的商务或客服">
          DECLARE @SQL VARCHAR(MAX)
          SET @SQL = 'SELECT e.EmployeeID,e.Name EmployeeName,c.CompanyID,c.Name CompanyName,d.DeptID,d.Name DeptName,
          IIF (e.MobiPhone = '''', e.Telephone, e.MobiPhone) Contact,
          bs.Remark,bs.AutoKey
          FROM '
          IF @t_Type='b'
          BEGIN
          SET @SQL = @SQL + 'bi_CustomerBi bs INNER JOIN hr_Employee e ON bs.BID=e.EmployeeID '
          END
          ELSE IF @t_Type='s'
          BEGIN
          SET @SQL = @SQL + 'bi_CustomerService bs INNER JOIN hr_Employee e ON bs.EmployeeID=e.EmployeeID '
          END
          SET @SQL = @SQL +
          'INNER JOIN hr_Company c ON e.CompanyID=c.CompanyID
          INNER JOIN hr_Department d ON e.DeptID=d.DeptID
          WHERE bs.IsActive=1 AND bs.[CustomerID]='''+@CustomerID+''''

          EXEC (@SQL)
        </Sql>
        <Sql Name="Add" ConnectionName="Auth" Description="新增">
          if(@CNature='20' and exists(select * from [bi_Customer] where [CustomerName]=@CustomerName and IsActive=1))
          BEGIN
          RAISERROR ('已经存在相同信息，无法保存！' ,15, 1) WITH NOWAIT
          END
          else if(@CNature='10' and exists(select * from [bi_Customer] where [CustomerName]=@CustomerName and ContactMobiPhone=@ContactMobiPhone and IsActive=1))
          BEGIN
          RAISERROR ('已经存在相同信息，无法保存！' ,15, 1) WITH NOWAIT
          END
          else
          BEGIN
declare @CustomerID  varchar(8)
declare @C varchar(8)
          set @C='K'+RIGHT(CONVERT(VARCHAR,YEAR(GETDATE())),2)
exec sp_CreateSerialCode 'Customer',@C,8,@CustomerID output
          INSERT INTO [bi_Customer]
          ([CustomerID],[CustomerName],[CustomerJC],[CustomerJM],[CState],[CType],[AgentID],[Contact],[ContactSex],[ContactMobiPhone],[ContactTel],[ContactTax],[ContactCardNo],[ContactEmail],[QQ],[Area],[Site],[ZipCode],[Address],[BusinessLicenseCode],[OrganizationCode],[TaxRegistrationNum],[InvoiceAddress],[Remark],[IsActive],[CNature],[CreatedUser],[CreatedTime],[ModifiedUser],[ModifiedTime])
          VALUES(@CustomerID,@CustomerName,@CustomerJC,@CustomerJM,@CState,@CType,@AgentID,@Contact,@ContactSex,@ContactMobiPhone,@ContactTel,@ContactTax,@ContactCardNo,@ContactEmail,@QQ,@Area,@Site,@ZipCode,@Address,@BusinessLicenseCode,@OrganizationCode,@TaxRegistrationNum,@InvoiceAddress,@Remark,1,@CNature,@CreatedUser,@CreatedTime,@ModifiedUser,@ModifiedTime);
          
          IF @BID &lt;&gt; ''
          BEGIN
          INSERT INTO [dbo].[bi_CustomerBi]([CustomerID],[CompanyID],[DeptID],[BID],[Tel],[Remark],[IsActive],[CreatedUser],[CreatedTime],[ModifiedUser],[ModifiedTime])
          VALUES(@CustomerID,@CompanyID,@DeptID,@BID,@Tel,@Remark,1,@CreatedUser,@CreatedTime,@ModifiedUser,@ModifiedTime)
          END
          END
        </Sql>
        <Sql Name="GetEdit" ConnectionName="Auth" Description="查询编辑">
          SELECT [CustomerID],[CustomerName],[CustomerJC],[CustomerJM],[CState],[CType],[AgentID],[Contact],[ContactSex],[ContactMobiPhone],[ContactTel],[ContactTax],[ContactCardNo],[ContactEmail],[QQ],[Area],[Site],[ZipCode],[Address],[BusinessLicenseCode],[OrganizationCode],[TaxRegistrationNum],[InvoiceAddress],[Remark],[CNature]
          FROM [bi_Customer]
          WHERE [CustomerID]=@CustomerID
        </Sql>
        <Sql Name="Update" ConnectionName="Auth" Description="更新">
          if(@CNature='20' and exists(select * from [bi_Customer] where [CustomerName]=@CustomerName and IsActive=1 and [CustomerID]!=@CustomerID))
          BEGIN
          RAISERROR ('已经存在相同信息，无法保存！' ,15, 1) WITH NOWAIT
          END
          else if(@CNature='10' and exists(select * from [bi_Customer] where [CustomerName]=@CustomerName and ContactMobiPhone=@ContactMobiPhone  and IsActive=1 and [CustomerID]!=@CustomerID))
          BEGIN
          RAISERROR ('已经存在相同信息，无法保存！' ,15, 1) WITH NOWAIT
          END
          else
          BEGIN
          UPDATE [bi_Customer]
          SET  [CustomerID]=@CustomerID,[CustomerName]=@CustomerName,[CustomerJC]=@CustomerJC,[CustomerJM]=@CustomerJM,[CState]=@CState,
          [CType]=@CType,[AgentID]=@AgentID,[Contact]=@Contact,[ContactSex]=@ContactSex,[ContactMobiPhone]=@ContactMobiPhone,[ContactTel]=@ContactTel,
          [ContactTax]=@ContactTax,[ContactCardNo]=@ContactCardNo,[ContactEmail]=@ContactEmail,[QQ]=@QQ,[Area]=@Area,[Site]=@Site,[ZipCode]=@ZipCode,
          [Address]=@Address,[BusinessLicenseCode]=@BusinessLicenseCode,[OrganizationCode]=@OrganizationCode,[TaxRegistrationNum]=@TaxRegistrationNum,
          [InvoiceAddress]=@InvoiceAddress,[Remark]=@Remark,[CNature]=@CNature,[ModifiedUser]=@ModifiedUser,[ModifiedTime]=@ModifiedTime WHERE [CustomerID]=@CustomerID;
          end
        </Sql>
        <Sql Name="GetAllCustomerState" SharedName="GetAllCustomerState" ConnectionName="Auth" Description="从状态表获取客户全部状态">
          SELECT  [CState] as ID
          ,[CustomerState] as Name
          FROM [bi_CustomerState]
        </Sql>
        <Sql Name="GetAllCustomerType" SharedName="GetAllCustomerType" ConnectionName="Auth" Description="从类型表获取客户全部类型">
          SELECT  [CustomerTypeID] as ID
          ,[CustomerType] as Name
          FROM [bi_CustomerType]
          WHERE IsActive=1
        </Sql>
        <Sql Name="GetAllCustomer" SharedName="GetAllCustomer" ConnectionName="Auth" Description="从客户表获取全部客户">
          SELECT  [CustomerID] as ID
          ,[CustomerName] as Name
          FROM [bi_Customer]
        </Sql>
        <Sql Name="Delete" ConnectionName="Auth" Description="删除">
          DECLARE @sql varchar(max);
          BEGIN TRY
          IF(CHARINDEX(',',@Keys,0)&lt;=0)
          BEGIN
          UPDATE [bi_Customer] SET IsActive=0
          WHERE [CustomerID]=@Keys;
          END
          ELSE
          BEGIN
          SET @sql= 'UPDATE [bi_Customer] SET IsActive=0 WHERE [CustomerID] in (''' + REPLACE(@Keys,',',''',''') + ''')';
          EXEC(@sql);
          END
          END TRY
          BEGIN CATCH
          DECLARE @error varchar(2000);
          SET @error = ERROR_MESSAGE();
          RAISERROR(@error ,11,1);
          END CATCH
        </Sql>
        <Sql Name="ReturnPublic" ConnectionName="Auth" SqlType="Execute" Description="回归公海(商务或客服)">
          DECLARE @sql nvarchar(max),@t_TableName VARCHAR(20)
          BEGIN TRY
          SET @sql= '

          SET @t_TableName=@TableName
          IF @EmployeeID &lt;&gt; ''
          BEGIN
          IF EXISTS(SELECT * FROM bi_CustomerBi WHERE BID=@EmployeeID AND IsActive=1)
          BEGIN 
          SET @t_TableName = 'bi_CustomerBi'
          END
          ELSE IF EXISTS(SELECT * FROM bi_CustomerService WHERE EmployeeID=@EmployeeID AND IsActive=1)
          BEGIN 
          SET @t_TableName = 'bi_CustomerService'
          END
          END
          
          SET @sql = @sql + ' UPDATE ['+@t_TableName+'] SET [IsActive]=0,[ModifiedUser]='''+@ModifiedUser+''',[ModifiedTime]='''+@ModifiedTime+'''
          WHERE [CustomerID] in (''' + REPLACE(@Keys,',',''',''') + ''')';
          EXEC (@sql)
          END TRY
          BEGIN CATCH
          DECLARE @error varchar(2000);
          SET @error = ERROR_MESSAGE();
          RAISERROR(@error ,11,1);
          END CATCH
        </Sql>
        <Sql Name="GetFromPublic" ConnectionName="Auth" SqlType="Execute" Description="公海领取(商务或客服)">
          DECLARE @sql nvarchar(max);
          BEGIN TRY
          SET @sql = ''
          declare @Index int, @CustomerID varchar(8),@Input VARCHAR(MAX)=@Keys+',',@Separator char(1)=','
          IF @Type = 'b' --商务
          BEGIN

          IF @CompanyID = ''
          BEGIN
          SELECT @DeptID=dbo.hr_Employee.DeptID,@CompanyID=hr_Department.CompanyID,
          @Tel=IIF (hr_Employee.MobiPhone = '', hr_Employee.Telephone, hr_Employee.MobiPhone)
          FROM dbo.hr_Company RIGHT OUTER JOIN
          dbo.hr_Department ON dbo.hr_Company.CompanyID = hr_Department.CompanyID LEFT OUTER JOIN
          dbo.hr_Employee ON dbo.hr_Employee.DeptID = hr_Department.DeptID
          WHERE dbo.hr_Employee.EmployeeID=@EmployeeID
          END

          set @Index = charindex(@Separator,@Input)

          while (@Index&gt;0)
          begin
          set @CustomerID=ltrim(rtrim(substring(@Input, 1, @Index-1)))
          if (@CustomerID&lt;&gt;'')
          begin

          IF EXISTS(SELECT * FROM bi_CustomerBi WHERE BID=@EmployeeID AND CustomerID=@CustomerID)
          BEGIN
          SET @sql = @sql + 'UPDATE [dbo].[bi_CustomerBi]
          SET [CompanyID] = '''+@CompanyID+''',[DeptID] = '''+@DeptID+''',[Tel] = '''+@Tel+''',[Remark] = '''+@Remark+''',[IsActive] = 1,[ModifiedUser] = '''+@ModifiedUser+''',[ModifiedTime] = '''+@ModifiedTime+'''
          WHERE [CustomerID] = '''+@CustomerID+''' AND BID='''+@EmployeeID+''';'
          END
          ELSE
          BEGIN
          SET @sql = @sql + 'INSERT INTO [dbo].[bi_CustomerBi]([CustomerID],[CompanyID],[DeptID],[BID],[Tel],[Remark],[IsActive],[CreatedUser],[CreatedTime],[ModifiedUser],[ModifiedTime])
          Values('''+@CustomerID+''' ,'''+@CompanyID+''','''+@DeptID+''','''+@EmployeeID+''','''+@Tel+''','''+@Remark+''',1,'''+@ModifiedUser+''','''+@ModifiedTime+''','''+@ModifiedUser+''','''+@ModifiedTime+''');'
          END

          end

          set @Input = substring(@Input, @Index+1, len(@Input))
          set @Index = charindex(@Separator, @Input)
          end

          END
          ELSE IF @Type = 's' --客服
          BEGIN

          set @Index = charindex(@Separator,@Input)

          while (@Index&gt;0)
          begin
          set @CustomerID=ltrim(rtrim(substring(@Input, 1, @Index-1)))

          if (@CustomerID&lt;&gt;'')
          begin
          IF EXISTS(SELECT * FROM bi_CustomerService WHERE EmployeeID=@EmployeeID AND CustomerID=@CustomerID)
          BEGIN
          SET @sql = @sql + 'UPDATE [dbo].[bi_CustomerService]
          SET [IsActive] = 1,[Remark] = '''+@Remark+''',[ModifiedUser] = '''+@ModifiedUser+''',[ModifiedTime] = '''+@ModifiedTime+'''
          WHERE [CustomerID] = '''+@CustomerID+''' AND BID='''+@EmployeeID+''';'
          END
          ELSE
          BEGIN
          SET @sql = @sql + 'INSERT INTO [dbo].[bi_CustomerService]([CustomerID],[EmployeeID],[Remark],[IsActive],[CreatedUser],[CreatedTime],[ModifiedUser],[ModifiedTime])
          Values('''+@CustomerID+''' ,'''+@EmployeeID+''','''+@Remark+''',1,'''+@ModifiedUser+''','''+@ModifiedTime+''','''+@ModifiedUser+''','''+@ModifiedTime+''');'
          END

          end

          set @Input = substring(@Input, @Index+1, len(@Input))
          set @Index = charindex(@Separator, @Input)
          end

          END

          EXEC (@SQL)

          END TRY
          BEGIN CATCH
          DECLARE @error varchar(2000);
          SET @error = ERROR_MESSAGE();
          RAISERROR(@error ,11,1);
          END CATCH
        </Sql>
        <Sql Name="RemoveEmployee" ConnectionName="Auth" SqlType="Execute" Description="删除跟踪客户的员工(商务或客服)">
          DECLARE @sql nvarchar(max),@TableName VARCHAR(20),@EmpIDField VARCHAR(20)
          BEGIN TRY
          SET @sql= ''

          IF @Type='b'
          BEGIN
          SET @TableName = 'bi_CustomerBi'
          SET @EmpIDField = 'BID'
          END
          ELSE IF @Type='s'
          BEGIN
          SET @TableName = 'bi_CustomerService'
          SET @EmpIDField = 'EmployeeID'
          END

          SET @sql = @sql + ' UPDATE ['+@TableName+'] SET [IsActive]=0,[ModifiedUser]='''+@ModifiedUser+''',[ModifiedTime]='''+@ModifiedTime+'''
          WHERE [CustomerID] =''' + @CustomerID + ''' AND '+@EmpIDField+'='''+@EmployeeID+'''';
          EXEC (@sql)
          END TRY
          BEGIN CATCH
          DECLARE @error varchar(2000);
          SET @error = ERROR_MESSAGE();
          RAISERROR(@error ,11,1);
          END CATCH
        </Sql>
        <Sql Name="QueryCount" ConnectionName="Auth" Description="查询总数">
          DECLARE @SQL NVARCHAR(2000),@TableName VARCHAR(20),@EmpIDField VARCHAR(20),@WhereIsPublic VARCHAR(200),@Join VARCHAR(200)

          IF @Type = 'b' --商务
          BEGIN
          SET @TableName = 'bi_CustomerBi'
          SET @EmpIDField = 'BID'
          END
          ELSE IF @Type = 's' --客服
          BEGIN
          SET @TableName = 'bi_CustomerService'
          SET @EmpIDField = 'EmployeeID'
          END

          SET @WhereIsPublic = ''
          SET @Join = ''
          IF @IsPublic &lt;&gt; ''
          BEGIN
          IF @IsPublic = '1'
          BEGIN
          SET @WhereIsPublic = 'NOT EXISTS (SELECT * FROM '+@TableName+' WHERE IsActive=1 AND CustomerID=b.CustomerID) AND '
          END
          ELSE
          BEGIN
          IF @BID &lt;&gt; ''
          BEGIN
          SET @WhereIsPublic = @TableName+'.['+@EmpIDField+'] = '''+@BID+''' AND '
          SET @Join = ' LEFT JOIN '+@TableName+' ON b.CustomerID = '+@TableName+'.CustomerID '
          END
          ELSE
          BEGIN
          SET @WhereIsPublic = 'EXISTS (SELECT * FROM '+@TableName+' WHERE IsActive=1 AND CustomerID=b.CustomerID) AND '
          END
          END
          END

          SET @SQL = '
          SELECT count(*)
          FROM [bi_Customer] b
          left join [bi_Customer] c on b.AgentID=c.CustomerID ' +
          @Join +
          'WHERE b.[CustomerName] LIKE ''%'+@CustomerName+'%'' and
          b.[CustomerJC] LIKE ''%'+@CustomerJC+'%'' and
          b.[Contact] LIKE ''%'+@Contact+'%'' and
          b.[ContactMobiPhone] LIKE ''%'+@ContactMobiPhone+'%'' and ' +
          @WhereIsPublic +
          'b.[IsActive]=1'

          EXEC(@SQL)
        </Sql>
        <Sql Name="QueryPage" ConnectionName="Auth" Description="查询页面">
          DECLARE @SQL NVARCHAR(2000),@TableName VARCHAR(20),@EmpIDField VARCHAR(20),@WhereIsPublic VARCHAR(200),@Join VARCHAR(200)

          IF @Type = 'b' --商务
          BEGIN
          SET @TableName = 'bi_CustomerBi'
          SET @EmpIDField = 'BID'
          END
          ELSE IF @Type = 's' --客服
          BEGIN
          SET @TableName = 'bi_CustomerService'
          SET @EmpIDField = 'EmployeeID'
          END

          SET @WhereIsPublic = ''
          SET @Join = ''
          IF @IsPublic &lt;&gt; ''
          BEGIN
          IF @IsPublic = '1'
          BEGIN
          SET @WhereIsPublic = 'NOT EXISTS (SELECT * FROM '+@TableName+' WHERE IsActive=1 AND CustomerID=b.CustomerID) AND '
          END
          ELSE
          BEGIN
          IF @BID &lt;&gt; ''
          BEGIN
          SET @WhereIsPublic = @TableName+'.['+@EmpIDField+'] = '''+@BID+''' AND '
          SET @Join = ' LEFT JOIN '+@TableName+' ON b.CustomerID = '+@TableName+'.CustomerID '
          END
          ELSE
          BEGIN
          SET @WhereIsPublic = 'EXISTS (SELECT * FROM '+@TableName+' WHERE IsActive=1 AND CustomerID=b.CustomerID) AND '
          END
          END
          END

          SET @SQL = '
          SELECT b.[CustomerID],b.[CustomerName],b.[CustomerJC],b.[CustomerJM],case b.[CState] when ''10'' then ''潜在客户'' when ''20'' then ''意向客户'' when ''30'' then ''准客户'' when ''40'' then ''成单客户'' end as [CState],
          b.[CType],b.[AgentID],b.[Contact],b.[ContactSex],b.[ContactMobiPhone],
          b.[ContactTel],b.[ContactTax],b.[ContactCardNo],b.[ContactEmail],b.[QQ],b.[Area],b.[Site],
          b.[ZipCode],b.[Address],b.[BusinessLicenseCode],b.[OrganizationCode],b.[TaxRegistrationNum],
          b.[InvoiceAddress],b.[Remark],case b.[CNature] when ''20'' then ''企业'' when ''10'' then ''个人'' end as [CNature],
          CASE b.CType WHEN ''10'' THEN ''大客户'' WHEN ''20'' THEN ''普通客户'' WHEN ''30'' THEN ''代理商'' WHEN ''40'' THEN ''代理商客户'' END CType,
          c.CustomerName as AgentName
          FROM [bi_Customer] b
          left join [bi_Customer] c on b.AgentID=c.CustomerID ' +
          @Join +
          'WHERE b.[CustomerName] LIKE ''%'+@CustomerName+'%'' and
          b.[CustomerJC] LIKE ''%'+@CustomerJC+'%'' and
          b.[Contact] LIKE ''%'+@Contact+'%'' and
          b.[ContactMobiPhone] LIKE ''%'+@ContactMobiPhone+'%'' and ' +
          @WhereIsPublic +
          'b.[IsActive]=1 order by b.ModifiedTime desc
          OFFSET '+CONVERT(VARCHAR,(CAST(@Page as int)-1)*CAST(@Rows as int))+' Rows FETCH NEXT '+@Rows+' ROWS ONLY;'

          EXEC (@SQL)
        </Sql>
        <Sql Name="QueryMyCustomerBusiness" ConnectionName="Auth" Description="查询所属客户(商务)(用于Combo)">
          SELECT bi_Customer.[CustomerID],[CustomerName],[Contact],CASE WHEN [ContactMobiPhone] IS NULL OR [ContactMobiPhone] = '' THEN [ContactTel] ELSE [ContactMobiPhone] END ContactMobiPhone,[ContactCardNo]
          FROM [bi_Customer] INNER JOIN bi_CustomerBi ON bi_Customer.CustomerID = bi_CustomerBi.CustomerID
          WHERE bi_CustomerBi.BID=@BID AND bi_CustomerBi.IsActive=1 AND bi_Customer.IsActive=1
        </Sql>
      </Table>
      <Table Name="bi_CustomerAccount" ConnectionName="Auth" TableName="bi_CustomerAccount" />
      <Table Name="bi_CustomerAccountDetail" ConnectionName="Auth" TableName="bi_CustomerAccountDetail" />
      <Table Name="bi_CustomerAttachment" ConnectionName="Auth" TableName="bi_CustomerAttachment">
        <Sql Name="AddUpdate" ConnectionName="Auth" Description="新增更新客户附件">
          if(LEN(@CustomerAttID)&gt;0)
          begin
          UPDATE [dbo].[bi_CustomerAttachment]
          SET [AttFileName] = @AttFileName,[AttFileUrl] = @AttFileUrl,[Remark] = @Remark,[ModifiedUser] = @ModifiedUser,[ModifiedTime] = @ModifiedTime
          WHERE CustomerAttID=@CustomerAttID
          end
          else
          begin
          exec sp_CreateSerialCode 'CusAtt','KA',8,@CustomerAttID output
          INSERT INTO [dbo].[bi_CustomerAttachment]
          ([CustomerAttID],[CustomerID],[AttFileName],[AttFileUrl],[Remark],[IsActive],[CreatedUser],[CreatedTime],[ModifiedUser],[ModifiedTime])
          VALUES(@CustomerAttID,@CustomerID,@AttFileName,@AttFileUrl,@Remark,1,@CreatedUser,@CreatedTime,@ModifiedUser,@ModifiedTime)
          end
        </Sql>
        <Sql Name="QueryByCustomer" ConnectionName="Auth" Description="根据客户检索附件">
          SELECT [CustomerAttID],[CustomerID],[AttFileName],[AttFileUrl],[Remark],[CreatedUser],[CreatedTime],[ModifiedUser],[ModifiedTime]
          FROM [bi_CustomerAttachment] where IsActive=1 and [CustomerID]=@CustomerID
        </Sql>
        <Sql Name="GetEdit" ConnectionName="Auth" Description="获取编辑">
          SELECT [CustomerAttID],[CustomerID],[AttFileName],[AttFileUrl],[Remark],[CreatedUser],[CreatedTime],[ModifiedUser],[ModifiedTime]
          FROM [bi_CustomerAttachment] where [CustomerAttID]=@CustomerAttID
        </Sql>
        <Sql Name="GetDetail" ConnectionName="Auth" Description="获取查看">
          SELECT [CustomerAttID],[CustomerID],[AttFileName],[AttFileUrl],[Remark],[CreatedUser],[CreatedTime],[ModifiedUser],[ModifiedTime]
          FROM [bi_CustomerAttachment] where [CustomerAttID]=@CustomerAttID
        </Sql>
        <Sql Name="GetByUrl" ConnectionName="Auth" Description="根据路径获取信息">
          SELECT [CustomerAttID],[CustomerID],[AttFileName],[AttFileUrl],[Remark],[CreatedUser],[CreatedTime],[ModifiedUser],[ModifiedTime]
          FROM [bi_CustomerAttachment] where [AttFileUrl] like '%'+@AttFileUrl+'%'
        </Sql>
        <Sql Name="Delete" ConnectionName="Auth" SqlType="Execute" Description="删除">update [bi_CustomerAttachment] set [IsActive]=0 where [AttFileUrl] like '%'+@AttFileUrl+'%'</Sql>
      </Table>
      <Table Name="bi_CustomerBank" ConnectionName="Auth" TableName="bi_CustomerBank">
        <Sql Name="GetBankByCustomer" ConnectionName="Auth" Description="根据客户获取账户">
          SELECT [CustomerID]
          ,[Bank]
          ,[Account]
          ,[Remark]
          ,[State]
          ,[IsActive]
          ,[CreatedUser]
          ,[CreatedTime]
          ,[ModifiedUser]
          ,[ModifiedTime]
          ,[AutoKey]
          FROM [dbo].[bi_CustomerBank] where [CustomerID]=@CustomerID and [IsActive]=1
        </Sql>
        <Sql Name="UpdateBank" ConnectionName="Auth" Description="更新账号信息">
          if(@DeleteCheck='on')
          begin
          UPDATE [bi_CustomerBank] SET [IsActive]=0,[ModifiedUser]=@ModifiedUser,[ModifiedTime]=@ModifiedTime WHERE [AutoKey]=@AutoKey;
          raiserror('操作成功！',16,1) with nowait
          end
          else
          begin
          if(len(@AutoKey)&gt;0)
          begin
          if exists(select * from [bi_CustomerBank] where [CustomerID]=@CustomerID and [Account]=@Account and [AutoKey] != @AutoKey)
          begin
          RAISERROR ('已经存在相同信息，无法保存！',15, 1) WITH NOWAIT
          end
          else
          begin
          UPDATE [bi_CustomerBank] SET [Bank]=@Bank,[Account]=@Account,[Remark]=@Remark,[State]=@State,[ModifiedUser]=@ModifiedUser,[ModifiedTime]=@ModifiedTime WHERE [AutoKey]=@AutoKey;
          raiserror('更新成功！',16,1) with nowait
          end
          end
          else
          begin
          if exists(select * from [bi_CustomerBank] where [CustomerID]=@CustomerID and [Account]=@Account)
          begin
          RAISERROR ('已经存在相同信息，无法保存！',15, 1) WITH NOWAIT
          end
          else
          begin
          INSERT INTO [bi_CustomerBank]
          ([CustomerID],[Bank],[Account],[Remark],[State],[IsActive],[CreatedUser],[CreatedTime],[ModifiedUser],[ModifiedTime])
          VALUES(@CustomerID,@Bank,@Account,@Remark,@State,@IsActive,@CreatedUser,@CreatedTime,@ModifiedUser,@ModifiedTime);
          raiserror('新增成功！',16,1) with nowait
          end
          end
          end
        </Sql>
      </Table>
      <Table Name="bi_CustomerLog" ConnectionName="Auth" TableName="bi_CustomerLog" />
      <Table Name="bi_CustomerState" ConnectionName="Auth" TableName="bi_CustomerState">
        <Sql Name="Query" ConnectionName="Auth" Description="查询客户状态">
          SELECT *FROM [bi_CustomerState]
          where [CustomerState] like '%'+@CustomerState+'%' and [Remark] like '%'+@Remark+'%' and [IsActive]=1
        </Sql>
        <Sql Name="Add" ConnectionName="Auth" Description="新增客户状态">
          if exists(select * from [bi_CustomerState] where [CustomerState]=@CustomerState and [IsActive] = 1)
          begin
          RAISERROR ('已经存在相同信息，无法保存！',15, 1) WITH NOWAIT
          end
          else
          begin
          INSERT INTO [bi_CustomerState]
          ([CustomerStateID],[CustomerState],[Remark],[IsActive],[CreatedUser],[CreatedTime],[ModifiedUser],[ModifiedTime])
          VALUES(@CustomerStateID,@CustomerState,@Remark,1,@CreatedUser,@CreatedTime,@ModifiedUser,@ModifiedTime);
          SELECT [CustomerStateID],[CustomerState],[Remark],[IsActive],[CreatedUser],[CreatedTime],[ModifiedUser],[ModifiedTime],[AutoKey] FROM [bi_CustomerState]
          WHERE [AutoKey]=scope_identity()
          end;
        </Sql>
        <Sql Name="Update" ConnectionName="Auth" Description="更新客户状态">
          if exists(select * from [bi_CustomerState] where [CustomerState]=@CustomerState and [CustomerStateID]!=@CustomerStateID and [IsActive] = 1 )
          begin
          RAISERROR ('已经存在相同信息，无法保存！',15, 1) WITH NOWAIT
          end
          else
          begin
          UPDATE [bi_CustomerState]
          SET [CustomerStateID]=@CustomerStateID,[CustomerState]=@CustomerState,[Remark]=@Remark,[ModifiedUser]=@ModifiedUser,[ModifiedTime]=@ModifiedTime WHERE [CustomerStateID]=@CustomerStateID;
          SELECT [CustomerStateID],[CustomerState],[Remark],[IsActive],[CreatedUser],[CreatedTime],[ModifiedUser],[ModifiedTime],[AutoKey] FROM [bi_CustomerState]
          WHERE [CustomerStateID]=@CustomerStateID
          end;
        </Sql>
        <Sql Name="Delete" ConnectionName="Auth" Description="删除客户状态">
          declare @sql varchar(max);

          set @sql='UPDATE [bi_CustomerState]
          SET [ModifiedUser]='''+@ModifiedUser+''',[ModifiedTime]='''+@ModifiedTime+''',[IsActive]=0 WHERE [CustomerStateID] in ('''+replace(@CustomerStateID,',',''',''')+''') ;'
          exec(@sql);
        </Sql>
        <Sql Name="GetItem" ConnectionName="Auth" Description="获取客户状态编辑/查看">
          SELECT [CustomerStateID],[CustomerState],[Remark],[IsActive],[CreatedUser],[CreatedTime],[ModifiedUser],[ModifiedTime],[AutoKey] FROM [bi_CustomerState]
          WHERE [CustomerStateID]=@CustomerStateID
        </Sql>
        <Sql Name="QueryCount" ConnectionName="Auth" Description="查询总数">
          SELECT count(*) FROM [bi_CustomerState]
          where [CustomerState] like '%'+@CustomerState+'%' and [Remark] like '%'+@Remark+'%' and [IsActive]=1
        </Sql>
        <Sql Name="QueryPage" ConnectionName="Auth" Description="查询页面">
          SELECT *FROM [bi_CustomerState]
          where [CustomerState] like '%'+@CustomerState+'%' and [Remark] like '%'+@Remark+'%' and [IsActive]=1    order by ModifiedTime desc
          OFFSET ((CAST(@Page as int)-1)*CAST(@Rows as int)) Rows FETCH NEXT CAST(@Rows as int) ROWS ONLY;
        </Sql>
      </Table>
      <Table Name="bi_Order" ConnectionName="Auth" TableName="bi_Order">
        <Sql Name="Save" ConnectionName="Auth" Description="保存">
          IF @OrderID = ''
          BEGIN
          EXEC sp_CreateSerialCode 'Order','ORD',12,@OrderID OUTPUT
          --订单
          INSERT INTO [dbo].[bi_Order]([OrderID],[ContractID],[OrderDate],[EmployeeID],[CustomerID],[ContractAmount],[ContractDate],[OrderState],[OrderStateDate],
          [Remark],[IsActive],[CreatedUser],[CreatedTime],[ModifiedUser],[ModifiedTime])
          VALUES
          (@OrderID,@ContractID,@OrderDate,@EmployeeID,@CustomerID,@ContractAmount,@ContractDate,@OrderState,@OrderStateDate,
          @Remark,1,@CreatedUser,@CreatedTime,@ModifiedUser,@ModifiedTime)
          --客户
          INSERT INTO [dbo].[bi_OrderCustomer]([OrderID],[CustomerID],[CustomerName],[CustomerJC],[CustomerJM],[BID],[Contact],[ContactMobiPhone],
          [ContactCardNo],[Area],[ZipCode],[Address],[BusinessLicenseCode],[OrganizationCode],[TaxRegistrationNum],[InvoiceAddress],[Remark],[IsActive],
          [CreatedUser],[CreatedTime],[ModifiedUser],[ModifiedTime])
          SELECT @OrderID,@CustomerID,CustomerName,[CustomerJC],[CustomerJM],[BID],@Contact,@ContactMobiPhone,@ContactCardNo,[Area],[ZipCode],[Address],
          [BusinessLicenseCode],[OrganizationCode],[TaxRegistrationNum],[InvoiceAddress],[Remark],1,@CreatedUser,@CreatedTime,@ModifiedUser,@ModifiedTime
          FROM bi_Customer WHERE [CustomerID]=@CustomerID

          --客户附件，只在insert时插入
          DECLARE CustomerAttachment CURSOR FOR
          SELECT [AttType],[AttFileName],[AttFileUrl],[Remark] FROM bi_CustomerAttachment WHERE CustomerID=@CustomerID AND IsActive=1

          DECLARE @AttType NVARCHAR(10),@AttFileName NVARCHAR(50),@AttFileUrl NVARCHAR(150),@AttRemark NVARCHAR(200),@Attachment VARCHAR(12)
          OPEN CustomerAttachment
          WHILE @@FETCH_STATUS=0
          BEGIN
          FETCH NEXT FROM CustomerAttachment INTO @AttType,@AttFileName,@AttFileUrl,@AttRemark
          EXEC sp_CreateSerialCode 'OrderAttach','OA',12,@Attachment OUTPUT

          INSERT INTO [dbo].[bi_OrderAttachment]
          ([RDID],[OrderID],[ContractID],[AttType],[AttFileName],[AttFileUrl],[Remark],[IsActive],[CreatedUser],[CreatedTime],[ModifiedUser],[ModifiedTime])
          VALUES(@Attachment,@OrderID,'','客户信息附件',@AttFileName,@AttFileUrl,@AttRemark,1,@CreatedUser,@CreatedTime,@ModifiedUser,@ModifiedTime)
          END

          CLOSE CustomerAttachment
          DEALLOCATE CustomerAttachment

          END
          ELSE
          BEGIN
          --订单
          UPDATE [dbo].[bi_Order] SET [ContractID] = @ContractID,[CustomerID] = @CustomerID,[ContractAmount] = @ContractAmount,[ContractDate] = @ContractDate,
          [Remark] = @Remark,[ModifiedUser] = @ModifiedUser,[ModifiedTime] = @ModifiedTime
          WHERE OrderID=@OrderID
          --客户
          UPDATE [dbo].[bi_OrderCustomer] SET [CustomerID] = @CustomerID,[CustomerName] = bi_Customer.CustomerName,CustomerJC=bi_Customer.CustomerJC,CustomerJM=bi_Customer.CustomerJM,
          [Contact] = @Contact,[ContactMobiPhone] = @ContactMobiPhone,[ContactCardNo] = @ContactCardNo,Area=bi_Customer.Area,ZipCode=bi_Customer.ZipCode,Address=bi_Customer.Address,
          BusinessLicenseCode=bi_Customer.BusinessLicenseCode,OrganizationCode=bi_Customer.OrganizationCode,TaxRegistrationNum=bi_Customer.TaxRegistrationNum,
          InvoiceAddress=bi_Customer.InvoiceAddress,Remark=bi_Customer.Remark,[ModifiedUser] = @ModifiedUser,[ModifiedTime] = @ModifiedTime
          FROM bi_Customer
          WHERE [OrderID]=@OrderID AND bi_Customer.CustomerID=@CustomerID
          END

          --收款流水
          IF @ItemNo &lt;&gt; ''
          BEGIN
          IF @RDID = ''
          BEGIN
          EXEC sp_CreateSerialCode 'ReciveRecord','RD',12,@RDID OUTPUT
          INSERT INTO [dbo].[bi_OrderReciveRecord]([RDID],[OrderID],[ItemNo],[ReciveAmount],[ReciveDate],[Remark],[IsActive],[CreatedUser],[CreatedTime],[ModifiedUser],[ModifiedTime])
          SELECT @RDID,@OrderID,@ItemNo,@ReciveAmount,OccurencyDate,Remark,1,@CreatedUser,@CreatedTime,@ModifiedUser,@ModifiedTime
          FROM acc_Receivables WHERE RecNum=@ItemNo
          END
          ELSE
          BEGIN
          UPDATE [dbo].[bi_OrderReciveRecord] SET [ItemNo] = @ItemNo,[ReciveAmount] = @ReciveAmount,
          [ReciveDate] = acc_Receivables.OccurencyDate,[Remark] = acc_Receivables.Remark,[ModifiedUser] = @ModifiedUser,[ModifiedTime] = @ModifiedTime
          FROM acc_Receivables
          WHERE RDID=@RDID AND RecNum=@ItemNo
          END
          END

          SELECT @RDID RDID, o.OrderID, o.ContractID, CONVERT(VARCHAR,CONVERT(DATE,o.OrderDate)) OrderDate, CONVERT(VARCHAR,CONVERT(DATE,o.ContractDate)) ContractDate,
          o.EmployeeID, dbo.bi_OrderCustomer.CustomerName, o.OrderState, o.Remark,CONVERT(DECIMAL(18,2),o.ContractAmount) ContractAmount,
          STUFF(
          (SELECT ',' + dbo.bi_Product.Product
          FROM dbo.bi_Order p_o LEFT JOIN dbo.bi_OrderProduct ON p_o.OrderID = dbo.bi_OrderProduct.OrderID
          INNER JOIN dbo.bi_Product ON dbo.bi_Product.ProductID = dbo.bi_OrderProduct.ProductID
          WHERE p_o.OrderID = o.OrderID
          FOR XML PATH('')),1,1,'') Products,
          (SELECT '|' + dbo.bi_Product.ProductTypeID
          FROM dbo.bi_Order p_o LEFT JOIN dbo.bi_OrderProduct ON p_o.OrderID = dbo.bi_OrderProduct.OrderID
          INNER JOIN dbo.bi_Product ON dbo.bi_Product.ProductID = dbo.bi_OrderProduct.ProductID
          WHERE p_o.OrderID = o.OrderID
          GROUP BY dbo.bi_Product.ProductTypeID
          FOR XML PATH('')) + '|' ProductTypeIDs
          FROM dbo.bi_Order o INNER JOIN dbo.bi_OrderCustomer ON o.OrderID = dbo.bi_OrderCustomer.OrderID
          LEFT JOIN dbo.bi_OrderProduct ON o.OrderID = dbo.bi_OrderProduct.OrderID
          WHERE o.OrderID=@OrderID
          GROUP BY o.OrderID, o.ContractID, o.OrderDate, o.ContractDate,
          o.EmployeeID, dbo.bi_OrderCustomer.CustomerName, o.OrderState, o.Remark, o.ContractAmount
        </Sql>
        <Sql Name="QueryCount" ConnectionName="Auth" Description="查询检索总数">
          DECLARE @SQL NVARCHAR(2000)
          SET @SQL = '
          SELECT COUNT(*) FROM (
          SELECT o.OrderID, o.ContractID, o.OrderDate, o.ContractDate,
          o.EmployeeID, dbo.bi_OrderCustomer.CustomerName, o.OrderState, o.Remark,
          STUFF(
          (SELECT '','' + dbo.bi_Product.Product
          FROM dbo.bi_Order p_o LEFT JOIN dbo.bi_OrderProduct ON p_o.OrderID = dbo.bi_OrderProduct.OrderID
          INNER JOIN dbo.bi_Product ON dbo.bi_Product.ProductID = dbo.bi_OrderProduct.ProductID
          WHERE p_o.OrderID = o.OrderID
          FOR XML PATH('''')),1,1,'''') Products,
          (SELECT ''|'' + dbo.bi_Product.ProductTypeID
          FROM dbo.bi_Order p_o LEFT JOIN dbo.bi_OrderProduct ON p_o.OrderID = dbo.bi_OrderProduct.OrderID
          INNER JOIN dbo.bi_Product ON dbo.bi_Product.ProductID = dbo.bi_OrderProduct.ProductID
          WHERE p_o.OrderID = o.OrderID
          GROUP BY dbo.bi_Product.ProductTypeID
          FOR XML PATH('''')) + ''|'' ProductTypeIDs
          FROM dbo.bi_Order o INNER JOIN dbo.bi_OrderCustomer ON o.OrderID = dbo.bi_OrderCustomer.OrderID
          LEFT JOIN dbo.bi_OrderProduct ON o.OrderID = dbo.bi_OrderProduct.OrderID
          WHERE EmployeeID='''+@EmployeeID+''' AND o.IsActive=1'

          IF @CustomerID &lt;&gt; ''
          BEGIN
          SET @SQL = @SQL + ' AND o.CustomerID = ''' + @CustomerID + ''''
          END

          IF @OrderStartDate &lt;&gt; '' AND @OrderEndDate &lt;&gt; ''
          BEGIN
          SET @SQL = @SQL + ' AND CONVERT(DATE,OrderDate) &gt;= ''' + @OrderStartDate + ''' AND CONVERT(DATE,OrderDate) &lt;= ''' + @OrderEndDate + ''''
          END
          ELSE IF @StartDate &lt;&gt; '' AND @EndDate = ''
          BEGIN
          SET @SQL = @SQL + ' AND CONVERT(DATE,OrderDate) &gt;= ''' + @OrderStartDate + ''''
          END
          ELSE IF @StartDate = '' AND @EndDate &lt;&gt; ''
          BEGIN
          SET @SQL = @SQL + ' AND CONVERT(DATE,OrderDate) &lt;= ''' + @OrderEndDate + ''''
          END

          IF @ContractStartDate &lt;&gt; '' AND @ContractEndDate &lt;&gt; ''
          BEGIN
          SET @SQL = @SQL + ' AND CONVERT(DATE,ContractDate) &gt;= ''' + @ContractStartDate + ''' AND CONVERT(DATE,ContractDate) &lt;= ''' + @ContractEndDate + ''''
          END
          ELSE IF @StartDate &lt;&gt; '' AND @EndDate = ''
          BEGIN
          SET @SQL = @SQL + ' AND CONVERT(DATE,ContractDate) &gt;= ''' + @ContractStartDate + ''''
          END
          ELSE IF @StartDate = '' AND @EndDate &lt;&gt; ''
          BEGIN
          SET @SQL = @SQL + ' AND CONVERT(DATE,ContractDate) &lt;= ''' + @ContractEndDate + ''''
          END

          SET @SQL = @SQL + ' GROUP BY o.OrderID, o.ContractID, o.OrderDate, o.ContractDate,
          o.EmployeeID, dbo.bi_OrderCustomer.CustomerName, o.OrderState, o.Remark) a'

          IF @Product = '' AND (@ProductTypeID &lt;&gt; 'P001' AND @ProductTypeID &lt;&gt; '')
          BEGIN
          SET @SQL = @SQL + ' WHERE ProductTypeIDs LIKE ''%|' + @ProductTypeID + '|%'''
          END

          IF @Product &lt;&gt; ''
          BEGIN
          SET @SQL = @SQL + ' WHERE Products LIKE ''%' + @Product + '%'''
          END

          EXEC (@SQL)
        </Sql>
        <Sql Name="QueryPage" ConnectionName="Auth" Description="检索分页查询">
          DECLARE @SQL NVARCHAR(2000)
          SET @SQL = '
          SELECT * FROM (
          SELECT o.OrderID, o.ContractID, CONVERT(VARCHAR,CONVERT(DATE,o.OrderDate)) OrderDate, CONVERT(VARCHAR,CONVERT(DATE,o.ContractDate)) ContractDate,
          o.EmployeeID, dbo.bi_OrderCustomer.CustomerName, o.OrderState, o.Remark,CONVERT(DECIMAL(18,2),o.ContractAmount) ContractAmount,
          STUFF(
          (SELECT '','' + dbo.bi_Product.Product
          FROM dbo.bi_Order p_o LEFT JOIN dbo.bi_OrderProduct ON p_o.OrderID = dbo.bi_OrderProduct.OrderID
          INNER JOIN dbo.bi_Product ON dbo.bi_Product.ProductID = dbo.bi_OrderProduct.ProductID
          WHERE p_o.OrderID = o.OrderID
          FOR XML PATH('''')),1,1,'''') Products,
          (SELECT ''|'' + dbo.bi_Product.ProductTypeID
          FROM dbo.bi_Order p_o LEFT JOIN dbo.bi_OrderProduct ON p_o.OrderID = dbo.bi_OrderProduct.OrderID
          INNER JOIN dbo.bi_Product ON dbo.bi_Product.ProductID = dbo.bi_OrderProduct.ProductID
          WHERE p_o.OrderID = o.OrderID
          GROUP BY dbo.bi_Product.ProductTypeID
          FOR XML PATH('''')) + ''|'' ProductTypeIDs
          FROM dbo.bi_Order o INNER JOIN dbo.bi_OrderCustomer ON o.OrderID = dbo.bi_OrderCustomer.OrderID
          LEFT JOIN dbo.bi_OrderProduct ON o.OrderID = dbo.bi_OrderProduct.OrderID
          WHERE EmployeeID='''+@EmployeeID+''' AND o.IsActive=1'

          IF @CustomerID &lt;&gt; ''
          BEGIN
          SET @SQL = @SQL + ' AND o.CustomerID = ''' + @CustomerID + ''''
          END

          IF @OrderStartDate &lt;&gt; '' AND @OrderEndDate &lt;&gt; ''
          BEGIN
          SET @SQL = @SQL + ' AND CONVERT(DATE,OrderDate) &gt;= ''' + @OrderStartDate + ''' AND CONVERT(DATE,OrderDate) &lt;= ''' + @OrderEndDate + ''''
          END
          ELSE IF @StartDate &lt;&gt; '' AND @EndDate = ''
          BEGIN
          SET @SQL = @SQL + ' AND CONVERT(DATE,OrderDate) &gt;= ''' + @OrderStartDate + ''''
          END
          ELSE IF @StartDate = '' AND @EndDate &lt;&gt; ''
          BEGIN
          SET @SQL = @SQL + ' AND CONVERT(DATE,OrderDate) &lt;= ''' + @OrderEndDate + ''''
          END

          IF @ContractStartDate &lt;&gt; '' AND @ContractEndDate &lt;&gt; ''
          BEGIN
          SET @SQL = @SQL + ' AND CONVERT(DATE,ContractDate) &gt;= ''' + @ContractStartDate + ''' AND CONVERT(DATE,ContractDate) &lt;= ''' + @ContractEndDate + ''''
          END
          ELSE IF @StartDate &lt;&gt; '' AND @EndDate = ''
          BEGIN
          SET @SQL = @SQL + ' AND CONVERT(DATE,ContractDate) &gt;= ''' + @ContractStartDate + ''''
          END
          ELSE IF @StartDate = '' AND @EndDate &lt;&gt; ''
          BEGIN
          SET @SQL = @SQL + ' AND CONVERT(DATE,ContractDate) &lt;= ''' + @ContractEndDate + ''''
          END

          SET @SQL = @SQL + ' GROUP BY o.OrderID, o.ContractID, o.OrderDate, o.ContractDate,
          o.EmployeeID, dbo.bi_OrderCustomer.CustomerName, o.OrderState, o.Remark, o.ContractAmount) a'

          IF @Product = '' AND (@ProductTypeID &lt;&gt; 'P001' AND @ProductTypeID &lt;&gt; '')
          BEGIN
          SET @SQL = @SQL + ' WHERE ProductTypeIDs LIKE ''%|' + @ProductTypeID + '|%'''
          END

          IF @Product &lt;&gt; ''
          BEGIN
          SET @SQL = @SQL + ' WHERE Products LIKE ''%' + @Product + '%'''
          END

          SET @SQL = @SQL + ' ORDER BY OrderDate DESC,OrderID DESC'

          SET @SQL = @SQL + '
          OFFSET ('+ CAST((@Page - 1) * @Rows AS varchar(10)) +') ROWS
          FETCH NEXT ' + CAST(@Rows AS varchar(10)) +' ROWS ONLY';

          EXEC (@SQL)
        </Sql>
        <Sql Name="GetItemForUpdate" ConnectionName="Auth" Description="获取订单信息">
          SELECT TOP 1 dbo.bi_Order.OrderID, dbo.bi_Order.OrderDate, dbo.bi_Order.CustomerID, dbo.bi_Order.ContractID,
          dbo.bi_Order.ContractAmount, dbo.bi_Order.ContractDate, dbo.bi_OrderReciveRecord.ItemNo,
          dbo.bi_OrderReciveRecord.RDID,dbo.bi_OrderReciveRecord.ReciveAmount, dbo.bi_Order.Remark,
          dbo.bi_OrderCustomer.Contact,dbo.bi_OrderCustomer.ContactMobiPhone, dbo.bi_OrderCustomer.ContactCardNo
          FROM  dbo.bi_Order INNER JOIN
          dbo.bi_OrderCustomer ON dbo.bi_Order.OrderID = dbo.bi_OrderCustomer.OrderID LEFT JOIN
          dbo.bi_OrderReciveRecord ON dbo.bi_Order.OrderID = dbo.bi_OrderReciveRecord.OrderID
          WHERE dbo.bi_Order.OrderID = @OrderID
          ORDER BY dbo.bi_OrderReciveRecord.CreatedTime
        </Sql>
        <Sql Name="GetItem" ConnectionName="Auth" Description="获取订单信息">
          SELECT dbo.bi_Order.OrderID, dbo.bi_Order.OrderDate, dbo.bi_OrderCustomer.CustomerName, dbo.bi_Order.ContractID,
          dbo.bi_Order.ContractAmount, dbo.bi_Order.OrderState,dbo.bi_Order.ContractDate,dbo.bi_Order.Remark,
          dbo.bi_OrderCustomer.Contact,dbo.bi_OrderCustomer.ContactMobiPhone, dbo.bi_OrderCustomer.ContactCardNo
          FROM  dbo.bi_Order INNER JOIN
          dbo.bi_OrderCustomer ON dbo.bi_Order.OrderID = dbo.bi_OrderCustomer.OrderID
          WHERE dbo.bi_Order.OrderID = @OrderID
        </Sql>
		  <Sql Name="GetCommissionOrder" ConnectionName="Auth" Description="获取已经审核通过的返佣类订单产品信息">
			  SELECT dbo.bi_Order.OrderDate, dbo.bi_Order.OrderID, dbo.bi_Customer.CustomerName, dbo.bi_Product.Product,
          dbo.bi_Order.ContractAmount Amount, dbo.bi_Order.Remark, dbo.bi_OrderProduct.ProductID
			  FROM dbo.bi_Order INNER JOIN
			  dbo.bi_OrderProduct ON dbo.bi_Order.OrderID = dbo.bi_OrderProduct.OrderID INNER JOIN
			  dbo.bi_Product ON dbo.bi_OrderProduct.ProductID = dbo.bi_Product.ProductID INNER JOIN
			  dbo.bi_ProductType ON dbo.bi_OrderProduct.ProductTypeID = dbo.bi_ProductType.ProductTypeID INNER JOIN
			  dbo.bi_Customer ON dbo.bi_Order.CustomerID = dbo.bi_Customer.CustomerID
			  WHERE (dbo.bi_Order.IsActive = 1) AND (dbo.bi_ProductType.ProductType = N'返佣类') AND (dbo.bi_Order.OrderState = N'结案')
			  AND (dbo.bi_Order.EmployeeID = @EmployeeID) AND (dbo.bi_Product.SupplierID = @SupplierID)
		  </Sql>
        <Sql Name="GetOrderForCommission" ConnectionName="Auth" Description="根据提成角色和提成类别获取可以申请提成的订单">
          DECLARE @SQL NVARCHAR(2000),@WHERE NVARCHAR(500)
          SET @WHERE = 'dbo.bi_Order.OrderState &lt;&gt; ''草稿'' AND dbo.bi_Order.IsActive=1 AND dbo.bi_Order.EmployeeID='''+@EmployeeID+''''
          IF @CommissionTypeID &lt;&gt; '' AND @CommissionRoleID &lt;&gt; ''
          BEGIN
          SET @WHERE = 'AND dbo.bi_CommissionOrder.CommissionTypeID &lt;&gt; ''' + @CommissionTypeID + '''
          AND dbo.bi_CommissionOrder.CommissionRoleID &lt;&gt; ''' + @CommissionRoleID + ''''
          END

          SET @SQL = '
          SELECT dbo.bi_Order.OrderID, dbo.bi_Order.CustomerID, dbo.bi_OrderCustomer.CustomerName, dbo.bi_Order.OrderState,
          dbo.bi_Order.ContractAmount, SUM(dbo.bi_OrderReciveRecord.ReciveAmount) AS AccountAmount
          FROM dbo.bi_Order INNER JOIN
          dbo.bi_OrderCustomer ON dbo.bi_Order.OrderID = dbo.bi_OrderCustomer.OrderID AND
          dbo.bi_Order.CustomerID = dbo.bi_OrderCustomer.CustomerID INNER JOIN
          dbo.bi_OrderReciveRecord ON dbo.bi_Order.OrderID = dbo.bi_OrderReciveRecord.OrderID LEFT OUTER JOIN
          dbo.bi_CommissionOrder ON dbo.bi_Order.OrderID = dbo.bi_CommissionOrder.OrderID' +
          @WHERE +
          'GROUP BY dbo.bi_Order.OrderID, dbo.bi_Order.CustomerID, dbo.bi_OrderCustomer.CustomerName, dbo.bi_Order.OrderState,
          dbo.bi_Order.ContractAmount'
        </Sql>
        <Sql Name="GetOrderBySpplier" ConnectionName="Auth" Description="根据供应商获得订单信息">
          SELECT  [OrderDate],a.OrderID,c.Product,b.ContractAmount,c.ProductID
          FROM [bi_Order] a join [bi_OrderProduct] b on a.OrderID=b.OrderID join bi_Product c on b.ProductID=c.ProductID where c.SupplierID=@SupplierID and a.OrderState=4
        </Sql>
        <Sql Name="GetOrderByCustomerID" ConnectionName="Auth" Description="根据客户获得订单信息">
          SELECT  [OrderDate],a.OrderID,c.Product,b.ContractAmount,c.ProductID
          FROM [bi_Order] a join [bi_OrderProduct] b on a.OrderID=b.OrderID join bi_Product c on b.ProductID=c.ProductID where a.CustomerID=@CustomerID and a.OrderState=3
        </Sql>
        <Sql Name="GetOrderByInvoice" ConnectionName="Auth" Description="GetOrderByInvoice">
          SELECT  [OrderDate],a.OrderID,a.ContractAmount,b.ReciveAmount,(select sum(InvoiceRealAmount) from acc_Invoice acc join acc_InvoiceDetail accd on acc.InvoiceID=accd.InvoiceID where accd.OrderID=a.OrderID and acc.Status=1) as InvoiceRealAmount ,OrderState,(select sum(InvoiceAmount) from acc_Invoice acc join acc_InvoiceDetail accd on acc.InvoiceID=accd.InvoiceID where accd.OrderID=a.OrderID and acc.Status=1 and InvoiceType='B') as InvoiceNoAmount,(a.ContractAmount-(select sum(InvoiceRealAmount) from acc_Invoice acc join acc_InvoiceDetail accd on acc.InvoiceID=accd.InvoiceID where accd.OrderID=a.OrderID and acc.Status=1 and InvoiceType='C' )-(select sum(InvoiceRealAmount) from acc_Invoice acc join acc_InvoiceDetail accd on acc.InvoiceID=accd.InvoiceID where accd.OrderID=a.OrderID and acc.Status=1 and InvoiceType='B' )) as InvoicePreAmount,d.CustomerName,d.TaxRegistrationNum,d.InvoiceAddress,d.ContactMobiPhone,e.BankName,e.Account
          FROM [bi_Order] a join [bi_OrderReciveRecord] b on a.OrderID=b.OrderID join bi_OrderCustomer d on a.OrderID=d.OrderID left join bi_Bank  e on e.CompanyID =d.CustomerID  where d.CustomerID=@CustomerID
        </Sql>
        <Sql Name="GetOrderConfirmByInvoice" ConnectionName="Auth" Description="GetOrderConfirmByInvoice">
          SELECT  [OrderDate],a.OrderID,a.ContractAmount,b.ReciveAmount,(select sum(InvoiceRealAmount) from acc_Invoice acc join acc_InvoiceDetail accd on acc.InvoiceID=accd.InvoiceID where accd.OrderID=a.OrderID and acc.Status=1) as InvoiceRealAmount ,OrderState,(select sum(ConfirmAmount) from acc_BusinessConfirm acc where acc.OrderID=a.OrderID) as ConfirmAmount,((select sum(ConfirmAmount) from acc_BusinessConfirm acc where acc.OrderID=a.OrderID)-(select sum(InvoiceRealAmount) from acc_Invoice acc join acc_InvoiceDetail accd on acc.InvoiceID=accd.InvoiceID where accd.OrderID=a.OrderID and acc.Status=1) ) as InvoiceNoAmount,ConfirmDate
          FROM [bi_Order] a join [bi_OrderReciveRecord] b on a.OrderID=b.OrderID join bi_OrderCustomer d on a.OrderID=d.OrderID join acc_BusinessConfirm e on e.OrderID=a.OrderID  where d.CustomerID=@CustomerID
        </Sql>
      </Table>
      <Table Name="bi_OrderAttachment" ConnectionName="Auth" TableName="bi_OrderAttachment">
        <Sql Name="AddOrderAttach" ConnectionName="Auth" Description="添加订单附件">
          INSERT INTO [dbo].[bi_OrderAttachment]
          ([RDID],[OrderID],[ContractID],[AttType],[AttFileName],[AttFileUrl],[Remark],[IsActive],[CreatedUser],[CreatedTime],[ModifiedUser],[ModifiedTime])
          VALUES(@RDID,@OrderID,'',@AttType,@AttFileName,@AttFileUrl,@Remark,1,@CreatedUser,@CreatedTime,@ModifiedUser,@ModifiedTime)

          SELECT RDID,AttFileName,AttFileUrl FROM bi_OrderAttachment
          WHERE RDID=@RDID
        </Sql>
        <Sql Name="UpdateOrderAttach" ConnectionName="Auth" Description="修改订单附件">
          DECLARE @sql varchar(max);
          SET @sql='UPDATE [bi_OrderAttachment]
          SET [AttType]='''+@AttType+''',[AttFileName]='''+@AttFileName+''''
          IF @AttFileUrl &lt;&gt; ''
          BEGIN
          SET @sql= @sql +',[AttFileUrl]='''+@AttFileUrl+''''
          END
          SET @sql= @sql +',[Remark]='''+@Remark+''',[ModifiedUser]='''+@ModifiedUser+''',[ModifiedTime]='''+@ModifiedTime+''' WHERE [RDID] = '''+@RDID+''''
          EXEC(@sql);

          SELECT RDID,AttFileName,AttFileUrl FROM bi_OrderAttachment
          WHERE RDID=@RDID
        </Sql>
        <Sql Name="DeleteOrderAttachment" ConnectionName="Auth" Description="删除订单附件">
          UPDATE [bi_OrderAttachment]
          SET [ModifiedUser]=@ModifiedUser,[ModifiedTime]=@ModifiedTime,[IsActive]=0 WHERE [RDID] = @RDID
        </Sql>
        <Sql Name="GetAttachmentByOrderID" ConnectionName="Auth" Description="获取订单的附件信息">
          SELECT RDID,AttFileName,AttFileUrl FROM bi_OrderAttachment
          WHERE OrderID=@OrderID AND IsActive=1
        </Sql>
        <Sql Name="GetItem" ConnectionName="Auth" Description="获取附件信息">
          SELECT RDID,OrderID,AttType,AttFileName,AttFileUrl,Remark FROM bi_OrderAttachment
          WHERE RDID=@RDID
        </Sql>
      </Table>
      <Table Name="bi_OrderCustomer" ConnectionName="Auth" TableName="bi_OrderCustomer">
        <Sql Name="Save" ConnectionName="Auth" Description="保存">
          UPDATE [dbo].[bi_OrderCustomer] SET [Contact] = @Contact,[ContactMobiPhone] = @ContactMobiPhone,
          [ContactCardNo] = @ContactCardNo,[ModifiedUser] = @ModifiedUser,[ModifiedTime] = @ModifiedTime
          WHERE [OrderID]=@OrderID
        </Sql>
      </Table>
      <Table Name="bi_OrderProduct" ConnectionName="Auth" TableName="bi_OrderProduct">
        <Sql Name="GetProductByOrderID" ConnectionName="Auth" Description="获取订单内包含的产品">
          SELECT op.OrdPctID, p.Product, p.UnitPrice, op.Qty, op.ContractAmount FROM bi_OrderProduct op INNER JOIN bi_Product p ON op.ProductID=p.ProductID
          WHERE op.OrderID=@OrderID AND op.IsActive=1
        </Sql>
        <Sql Name="AddOrderProduct" ConnectionName="Auth" Description="添加订单产品">
          INSERT INTO [dbo].[bi_OrderProduct]([OrdPctID],[OrderID],[TCProductID],[ProductTypeID],[ProductID],[OrderTypeID],[Qty],[Amount],[ContractAmount],
          [MinMonetary],[Number],[SiteSpace],[EmailFunID],[BeiAnTypeID],[RegeditYearID],[StartDate],[EndDate],[RecordCaiLing],[BusinessTelephone],
          [DomainName1],[DomainName2],[DomainName3],[RechargeAmount],[RechargeAccount],[SeviceYearID],[SiteOrderTypeID],[DomainOrderTypeID],
          [EmailOrderTypeID],[OtherOrderTypeID],[TemplateNo],[TemplateAmount],[SiteVersion],[Remark1],[Remark2],[Remark3],[IsActive],[CreatedUser],[CreatedTime],[ModifiedUser],[ModifiedTime])
          VALUES(@OrdPctID,@OrderID,@TCProductID,@ProductTypeID,@ProductID,@OrderTypeID,@Qty,@Amount,@ContractAmount,@MinMonetary,@Number,@SiteSpace,@EmailFunID,
          @BeiAnTypeID,@RegeditYearID,@StartDate,@EndDate,@RecordCaiLing,@BusinessTelephone,@DomainName1,@DomainName2,@DomainName3,@RechargeAmount,@RechargeAccount,
          @SeviceYearID,@SiteOrderTypeID,@DomainOrderTypeID,@EmailOrderTypeID,@OtherOrderTypeID,@TemplateNo,@TemplateAmount,@SiteVersion,@Remark1,@Remark2,@Remark3,
          1,@CreatedUser,@CreatedTime,@ModifiedUser,@ModifiedTime)

          SELECT op.OrdPctID, p.Product, p.UnitPrice, op.Qty, op.ContractAmount FROM bi_OrderProduct op INNER JOIN bi_Product p ON op.ProductID=p.ProductID
          WHERE op.OrdPctID=@OrdPctID
        </Sql>
        <Sql Name="DeleteOrderProduct" ConnectionName="Auth" Description="删除订单产品">
          DECLARE @sql varchar(max);
          SET @sql='UPDATE [bi_OrderProduct]
          SET [ModifiedUser]='''+@ModifiedUser+''',[ModifiedTime]='''+@ModifiedTime+''',[IsActive]=0 WHERE [OrdPctID] in ('''+replace(@OrdPctIDs,',',''',''')+''') ;'
          EXEC(@sql);
        </Sql>
      </Table>
      <Table Name="bi_OrderReciveRecord" ConnectionName="Auth" TableName="bi_OrderReciveRecord">
        <Sql Name="GetReciveRecordByOrderID" ConnectionName="Auth" Description="获取订单的收款流水信息">
          SELECT [RDID],[OrderID],[ItemNo],[ReciveAmount],CONVERT(VARCHAR,CONVERT(DATE,[ReciveDate])) [ReciveDate],[Remark]
          FROM [dbo].[bi_OrderReciveRecord]
          WHERE OrderID=@OrderID AND IsActive=1
        </Sql>
      </Table>
      <Table Name="bi_Product" ConnectionName="Auth" TableName="bi_Product">
        <Sql Name="Query" ConnectionName="Auth" Description="检索查询">
          select a.[ProductID] as ID,a.[ProductID],a.[ProductName],b.[ProductType],CONVERT(VARCHAR, a.[UnitPrice]) as [UnitPrice],case a.[PState] when '10'
          then '待定' when '20' then '启用' when '30' then '暂停' end as [PState],a.[Remark]
          from bi_Product a
          left join [bi_ProductType] b on a.ProductTypeID=b.ProductTypeID
          where a.ProductName like '%'+@ProductName+'%' and a.[ProductTypeID] like '%'+@ProductTypeID+'%' and a.IsActive=1
          order by a.[SortID]
        </Sql>
        <Sql Name="GetDetail" ConnectionName="Auth" Description="查询明细">
          select a.[ProductID],a.[ProductName],b.[ProductType],case a.[PState] when '10'
          then '待定' when '20' then '启动' when '30' then '暂停' end as [PState],a.[Remark],c.SupplierNAME,[CostPrice],[TaxRate]
          ,[RebateRate],[Discount],a.[SortID]
          from bi_Product a
          left join [bi_ProductType] b on a.ProductTypeID=b.ProductTypeID
          left join [bi_Supplier] c on a.SupplierID=c.SupplierID
          where a.[ProductID]=@ProductID
        </Sql>
        <Sql Name="Add" ConnectionName="Auth" Description="新增">
          if exists( select * from [bi_Product] where [ProductName]=@ProductName and [IsActive]=1)
          begin
          RAISERROR ('已经存在相同信息，无法保存！',15, 1) WITH NOWAIT
          end
          else
          begin
          INSERT INTO [bi_Product]
          ([ProductID],[ProductName],[ProductTypeID],[Unit],[SupplierID],[PState],[Remark],[SortID],[IsActive],[CreatedUser],[CreatedTime],[ModifiedUser],[ModifiedTime])
          VALUES(@ProductID,@ProductName,@ProductTypeID,@Unit,@SupplierID,@PState,@Remark,@SortID,1,@CreatedUser,@CreatedTime,@ModifiedUser,@ModifiedTime);

          INSERT INTO [bi_ProductPrice]
          ([PriceID],[ProductID],[UnitPrice],[CostPrice],[TaxRate],[RebateRate],[Discount],[StartDate],[EndDate],[Remark],[IsActive],[CreatedUser],[CreatedTime],[ModifiedUser],[ModifiedTime])
          VALUES(@PriceID,@ProductID,@UnitPrice,@CostPrice,@TaxRate,@RebateRate,@Discount,@StartDate,@EndDate,'',1,@CreatedUser,@CreatedTime,@ModifiedUser,@ModifiedTime);

          end
        </Sql>
        <Sql Name="GetEdit" SharedName="GetEdit" ConnectionName="Auth" Description="查询编辑">
          SELECT [ProductID],[ProductName],[ProductTypeID],[Unit],[SupplierID],[PState],[Remark],[SortID]
          FROM [bi_Product]
          WHERE [ProductID]=@ProductID
        </Sql>
        <Sql Name="Update" ConnectionName="Auth" Description="更新">
          if exists( select * from [bi_Product] where [ProductName]=@ProductName and [IsActive]=1 and [ProductID]!=@ProductID)
          begin
          RAISERROR ('已经存在相同信息，无法保存！',15, 1) WITH NOWAIT
          end
          else
          begin
          UPDATE [bi_Product]
          SET  [ModifiedUser]=@ModifiedUser,[ModifiedTime]=@ModifiedTime,[ProductName]=@ProductName,[ProductTypeID]=@ProductTypeID,[SupplierID]=@SupplierID,[PState]=@PState,[Remark]=@Remark,[SortID]=@SortID WHERE [ProductID]=@ProductID;
          end
        </Sql>
        <Sql Name="Delete" ConnectionName="Auth" Description="删除">
          declare @sql varchar(max);
          set @sql ='
          declare @m int
          select @m= COUNT(*) from [bi_Product] where [PState]=''20'' and [ProductID] in ('''+replace(@Keys,',',''',''')+''') ;
          if(@m=0)
          begin
          UPDATE [bi_Product]
          SET [ModifiedUser]='''+@ModifiedUser+''',[ModifiedTime]='''+@ModifiedTime+''',[IsActive]=0 WHERE [ProductID] in ('''+replace(@Keys,',',''',''')+''') ;
          end
          else
          BEGIN
          RAISERROR (''删除失败！'' ,15, 1) WITH NOWAIT
          END';
          exec(@sql);
        </Sql>
        <Sql Name="GetSupplier" SharedName="GetSupplier" ConnectionName="Auth" Description="获取供应商下拉框">select [SupplierID],[SupplierNAME] from [bi_Supplier] where [IsActive]=1</Sql>
        <Sql Name="GetProductUI" ConnectionName="Auth" Description="获取界面设定信息">
          select a.PUIISD,a.[Text],b.ItemSort,b.ItemName,b.IsRequired,b.Remark
          from [dbo].[bi_ProductUISet] a
          left join (select * from [dbo].[bi_ProductUI] where ProductID=@ProductID) b on a.PUIISD=b.PUIISD
        </Sql>
        <Sql Name="QueryCount" ConnectionName="Auth" Description="检索查询总数">
          DECLARE @sql varchar(max);
          DECLARE @where varchar(2000);
          SET @where=' M.[IsActive]=1';
          IF(len(@ProductName)&gt;0)
          BEGIN
          IF(LEN(@where)&gt;0)
          SET @where = @where + ' AND'
          set @where= @where+' (' + @ProductName + ')';
          END

          SET @sql='SELECT COUNT(*)
          FROM [bi_Product] M
          left outer join [bi_ProductType] B on M.[ProductTypeID] = B.[ProductTypeID]';

          IF(LEN(@where)&gt;0)
          BEGIN
          SET @sql=@sql+' WHERE' + @where;
          END
          execute(@sql);
        </Sql>
        <Sql Name="QueryPage" ConnectionName="Auth" Description="检索分页查询">
          DECLARE @sql varchar(max);
          DECLARE @where varchar(2000);
          SET @where=' M.[IsActive]=1';
          IF(len(@ProductName)&gt;0)
          BEGIN
          IF(LEN(@where)&gt;0)
          SET @where = @where + ' AND'
          set @where= @where+' (' + @ProductName + ')';
          END

          SET @sql='SELECT M.[ProductID] as ProductID,M.[ProductName] as ProductName,CONVERT(VARCHAR, p.[UnitPrice]) as UnitPrice,case M.[PState] when ''10''
          then ''待定'' when ''20'' then ''启用'' when ''30'' then ''暂停'' end as [PState],M.[Remark] as Remark,M.[ProductID] as ID,B.[ProductType] as ProductType
          FROM [bi_Product] M
          left outer join [bi_ProductType] B on M.[ProductTypeID] = B.[ProductTypeID]
          LEFT JOIN bi_ProductPrice p ON M.ProductID=p.ProductID
          AND p.PriceID=(SELECT TOP 1 pp.PriceID FROM bi_ProductPrice pp WHERE pp.ProductID=p.ProductID
          AND CONVERT(DATE,GETDATE()) BETWEEN pp.StartDate AND pp.EndDate AND pp.IsActive=1 ORDER BY pp.CreatedTime DESC)';

          IF(LEN(@where)&gt;0)
          BEGIN
          SET @sql=@sql+' WHERE' + @where;
          END

          IF(LEN(ISNULL(@OrderBy,''))=0)
          BEGIN
          SET @sql=@sql+' ORDER BY M.[ProductID]';
          END
          ELSE
          BEGIN
          SET @sql=@sql+' ORDER BY ' + @OrderBy +' desc';
          END

          SET @sql = @sql + '
          OFFSET ('+ CAST((@Page - 1) * @Rows AS varchar(10)) +') ROWS
          FETCH NEXT ' + CAST(@Rows AS varchar(10)) +' ROWS ONLY';

          execute(@sql);
        </Sql>
        <Sql Name="GetProductByType" SharedName="GetProductByType" ConnectionName="Auth" Description="根据类型获取产品">
          SELECT [ProductID],[ProductName],[SortID]
          FROM [dbo].[bi_Product]
          WHERE [IsActive]=1 AND [ProductTypeID]=@ProductTypeID
          UNION
          SELECT '','全部产品',-1
          ORDER BY [SortID]
        </Sql>
        <Sql Name="GetPrice" SharedName="GetPrice" ConnectionName="Auth" Description="获取产品价格信息">
          SELECT [PriceID],[ProductID],[UnitPrice],[CostPrice],[TaxRate],[RebateRate],[Discount],[StartDate],[EndDate],[Remark]
          FROM [dbo].[bi_ProductPrice]
          WHERE [IsActive]=1 AND [ProductID]=@ProductID
        </Sql>
      </Table>
      <Table Name="bi_ProductCommissionRole" ConnectionName="Auth" TableName="bi_ProductCommissionRole" />
      <Table Name="bi_ProductCommissionRule" ConnectionName="Auth" TableName="bi_ProductCommissionRule">
        <Sql Name="Query" ConnectionName="Auth" Description="检索查询">
          select a.ProductID as ID,a.ProductID,a.Product,b.ProductType,CONVERT(VARCHAR,a.UnitPrice) as UnitPrice
          from [bi_Product] a
          left join [bi_ProductType] b on a.ProductTypeID=b.ProductTypeID
          where a.IsActive=1 and a.Product like '%'+@Product+'%'
          order by a.SortID
        </Sql>
        <Sql Name="GetDetail" ConnectionName="Auth" Description="查询明细">
          SELECT [CommissionRuleID],[ProductID],[CommissionDeptID],[CommissionRoleID],[CommissionTypeID],[OrderCommission],[OCUnit],[ReceiveCommission],[RCUnit],[Remark],[IsActive]
          FROM [bi_ProductCommissionRule]
          WHERE [CommissionRuleID]=@CommissionRuleID
        </Sql>
        <Sql Name="Add" ConnectionName="Auth" Description="新增">
          if exists( select * from [bi_ProductCommissionRule] where [CommissionDeptID]=@CommissionDeptID and [IsActive]=1 and [ProductID]=@ProductID)
          begin
          RAISERROR ('已经存在相同信息，无法保存！',15, 1) WITH NOWAIT
          end
          else
          begin
          if(@OrderCommission='')set @OrderCommission=0
          if(@ReceiveCommission='')set @ReceiveCommission=0
          INSERT INTO [bi_ProductCommissionRule]
          ([CommissionRuleID],[ProductID],[CommissionDeptID],[CommissionTypeID],[OrderCommission],[OCUnit],[ReceiveCommission],[RCUnit],[Remark],[IsActive],[CreatedUser],[CreatedTime],[ModifiedUser],[ModifiedTime])
          VALUES(@CommissionRuleID,@ProductID,@CommissionDeptID,@CommissionTypeID,CONVERT(decimal(10,2),@OrderCommission),@OCUnit,CONVERT(decimal(10,2),@ReceiveCommission),@RCUnit,@Remark,@IsActive,@CreatedUser,@CreatedTime,@ModifiedUser,@ModifiedTime);
          RAISERROR ('新增成功！',15, 1) WITH NOWAIT
          end
        </Sql>
        <Sql Name="GetEdit" ConnectionName="Auth" Description="查询编辑">
          SELECT [CommissionRuleID],[ProductID],[CommissionDeptID],[CommissionRoleID],[CommissionTypeID],[OrderCommission],[OCUnit],[ReceiveCommission],[RCUnit],[Remark],[IsActive]
          FROM [bi_ProductCommissionRule]
          WHERE [CommissionRuleID]=@CommissionRuleID
        </Sql>
        <Sql Name="Update" ConnectionName="Auth" Description="更新">
          if exists( select * from [bi_ProductCommissionRule] where [CommissionDeptID]=@CommissionDeptID and [IsActive]=1 and [ProductID]=@ProductID and [CommissionRuleID]!=@CommissionRuleID)
          begin
          RAISERROR ('已经存在相同信息，无法保存！',15, 1) WITH NOWAIT
          end
          else
          begin
          UPDATE [bi_ProductCommissionRule]
          SET  [CommissionDeptID]=@CommissionDeptID,[CommissionTypeID]=@CommissionTypeID,[OrderCommission]=@OrderCommission,[OCUnit]=@OCUnit,[ReceiveCommission]=@ReceiveCommission,[RCUnit]=@RCUnit,[Remark]=@Remark,[ModifiedUser]=@ModifiedUser,[ModifiedTime]=@ModifiedTime WHERE [CommissionRuleID]=@CommissionRuleID;
          RAISERROR ('更新成功！',15, 1) WITH NOWAIT
          end
        </Sql>
        <Sql Name="Delete" ConnectionName="Auth" Description="删除">
          UPDATE [bi_ProductCommissionRule] SET IsActive=0
          WHERE [CommissionRuleID]=@Keys;
          RAISERROR ('删除成功！',15, 1) WITH NOWAIT
        </Sql>
        <Sql Name="GetData" ConnectionName="Auth" Description="获取数据">
          select a.ProductID as ID,a.ProductID,a.Product,b.ProductType,CONVERT(VARCHAR,a.UnitPrice) as UnitPrice
          from [bi_Product] a
          left join [bi_ProductType] b on a.ProductTypeID=b.ProductTypeID
          where a.IsActive=1
          order by a.SortID
        </Sql>
        <Sql Name="GetCommissionType" SharedName="GetCommissionType" ConnectionName="Auth" Description="获取提成类别">
          select [CommissionTypeID],[CommissionType]
          from [bi_ProductCommissionType]
          where IsActive=1
        </Sql>
        <Sql Name="GetCommission" ConnectionName="Auth" Description="获取提成信息">
          select a.[CommissionRuleID],b.Name as Dept,c.CommissionType,(CONVERT(VARCHAR,a.OrderCommission)+
          a.OCUnit) as OrderCommission,(CONVERT(VARCHAR,a.ReceiveCommission)+a.RCUnit) as ReceiveCommission,a.Remark,
          a.OrderCommission as OrderCommissionValue,a.OCUnit,a.ReceiveCommission as ReceiveCommissionValue,a.RCUnit,
          a.CommissionDeptID as DeptID,a.CommissionTypeID
          from [bi_ProductCommissionRule] a
          left join [hr_Department] b on a.CommissionDeptID=b.DeptID
          left join [bi_ProductCommissionType] c on a.CommissionTypeID=c.CommissionTypeID
          where a.ProductID=@ProductID and a.IsActive=1
        </Sql>
      </Table>
      <Table Name="bi_ProductCommissionType" ConnectionName="Auth" TableName="bi_ProductCommissionType">
        <Sql Name="Query" ConnectionName="Auth" Description="检索提成类别">
          SELECT *FROM [bi_ProductCommissionType]
          where [CommissionType] like '%'+@CommissionType+'%' and [Remark] like '%'+@Remark+'%' and [IsActive]=1
        </Sql>
        <Sql Name="GetDetail" ConnectionName="Auth" Description="查询提成类别明细">
          SELECT [CommissionTypeID],[CommissionType],[Remark],[IsActive]
          FROM [bi_ProductCommissionType]
          WHERE [CommissionTypeID]=@CommissionTypeID
        </Sql>
        <Sql Name="Add" ConnectionName="Auth" Description="新增提成类别">
          if exists(select * from [bi_ProductCommissionType] where [CommissionType]=@CommissionType and [IsActive] = 1)
          begin
          RAISERROR ('已经存在相同信息，无法保存！',15, 1) WITH NOWAIT
          end
          else
          begin
          INSERT INTO [bi_ProductCommissionType]
          ([CommissionTypeID],[CommissionType],[Remark],[IsActive],[CreatedUser],[CreatedTime],[ModifiedUser],[ModifiedTime])
          VALUES(@CommissionTypeID,@CommissionType,@Remark,@IsActive,@CreatedUser,@CreatedTime,@ModifiedUser,@ModifiedTime);
          SELECT [CommissionTypeID],[CommissionType],[Remark],[IsActive]
          FROM [bi_ProductCommissionType]
          WHERE [AutoKey]=scope_identity()
          end;
        </Sql>
        <Sql Name="GetEdit" ConnectionName="Auth" Description="查询提成类别编辑">
          SELECT [CommissionTypeID],[CommissionType],[Remark],[IsActive]
          FROM [bi_ProductCommissionType]
          WHERE [CommissionTypeID]=@CommissionTypeID
        </Sql>
        <Sql Name="Update" ConnectionName="Auth" Description="更新提成类别">
          if exists(select * from [bi_ProductCommissionType] where [CommissionType]=@CommissionType and [CommissionTypeID]!=@CommissionTypeID and [IsActive] = 1 )
          begin
          RAISERROR ('已经存在相同信息，无法保存！',15, 1) WITH NOWAIT
          end
          else
          begin
          UPDATE [bi_ProductCommissionType]
          SET  [CommissionTypeID]=@CommissionTypeID,[CommissionType]=@CommissionType,[Remark]=@Remark,[IsActive]=@IsActive,[ModifiedUser]=@ModifiedUser,[ModifiedTime]=@ModifiedTime WHERE [CommissionTypeID]=@CommissionTypeID;
          SELECT [CommissionTypeID],[CommissionType],[Remark],[IsActive]
          FROM [bi_ProductCommissionType]
          WHERE [CommissionTypeID]=@CommissionTypeID
          end;
        </Sql>
        <Sql Name="Delete" ConnectionName="Auth" Description="删除提成类别">
          declare @sql varchar(max);

          set @sql='
          if exists(select * from [bi_ProductCommissionType] where [CommissionTypeID] in ('''+replace(@CommissionTypeID,',',''',''')+''') and [IsActive] = 1  )
          begin
          RAISERROR (''选中行中存在处于使用状态的数据，无法删除！'',15, 1) WITH NOWAIT
          end
          else
          begin
          UPDATE [bi_ProductCommissionType] SET [ModifiedUser]='''+@ModifiedUser+''',[ModifiedTime]='''+@ModifiedTime+''',[IsActive]=0
          WHERE [CommissionTypeID] in ('''+replace(@CommissionTypeID,',',''',''')+''') ;
          end;'
          exec(@sql);
        </Sql>
        <Sql Name="QueryCount" ConnectionName="Auth" Description="查询总数">
          SELECT count(*) FROM [bi_ProductCommissionType]
          where [CommissionType] like '%'+@CommissionType+'%' and [Remark] like '%'+@Remark+'%' and [IsActive]=1
        </Sql>
        <Sql Name="QueryPage" ConnectionName="Auth" Description="查询分页">
          SELECT *FROM [bi_ProductCommissionType]
          where [CommissionType] like '%'+@CommissionType+'%' and [Remark] like '%'+@Remark+'%' and [IsActive]=1   order by [ModifiedTime] desc
          OFFSET ((CAST(@Page as int)-1)*CAST(@Rows as int)) Rows FETCH NEXT CAST(@Rows as int) ROWS ONLY;
        </Sql>
      </Table>
      <Table Name="bi_ProductDetail" ConnectionName="Auth" TableName="bi_ProductDetail">
        <Sql Name="GetProductDetail" ConnectionName="Auth" Description="获取某产品下的套餐信息">
          select [SubProductID],c.[SupplierNAME],a.[Product],a.[UnitPrice],b.[Price],a.[Remark]
          from [bi_ProductDetail] b
          left join [bi_Product]  a on a.ProductID=b.ProductID
          left join [bi_Supplier] c on a.SupplierID=c.SupplierID
          where b.IsActive=1 b.ProductID=@ProductID
        </Sql>
        <Sql Name="GetProduct" SharedName="GetProduct" ConnectionName="Auth" Description="获取产品下拉框">select [ProductID],[Product] from [bi_Product] where [IsActive]=1 and [State]='active' and [SupplierID]=@SupplierID and [ProductTypeID]!='P024'</Sql>
        <Sql Name="AddProduct" ConnectionName="Auth" Description="新增产品套餐">
          if exists( select * from [bi_Product] where [Product]=@Product and [IsActive]=1)
          begin
          RAISERROR ('已经存在相同信息，无法保存！',15, 1) WITH NOWAIT
          end
          else
          begin
          INSERT INTO [bi_Product]
          ([ProductID],[Product],[ProductTypeID],[UnitPrice],[SupplierID],[State],[Remark],[SortID],[IsActive],[CreatedUser],[CreatedTime],[ModifiedUser],[ModifiedTime])
          VALUES(@ProductID,@Product,@ProductTypeID,@UnitPrice,@SupplierID,@State,@Remark,@SortID,@IsActive,@CreatedUser,@CreatedTime,@ModifiedUser,@ModifiedTime);
          select a.[ProductID] as ID,a.[ProductID],a.[Product],b.[ProductType],CONVERT(VARCHAR, a.[UnitPrice]) as [UnitPrice],case a.[State] when 'undeter'
          then '待定' when 'active' then '启用' when 'pause' then '暂停' end as [State],a.[Remark]
          FROM [bi_Product] a
          left join [bi_ProductType] b on a.ProductTypeID=b.ProductTypeID
          WHERE a.[AutoKey]=scope_identity()
          end
        </Sql>
        <Sql Name="AddProductDetail" ConnectionName="Auth" Description="新建子产品">
          if exists( select * from [bi_ProductDetail] where [ProductID]=@ProductID and [IsActive]=1 and [SubProductID]=@SubProductID)
          begin
          RAISERROR ('已经存在相同信息，无法保存！',15, 1) WITH NOWAIT
          end
          else
          begin
          INSERT INTO [bi_ProductDetail]([ProductID],[SubProductID],[UnitPrice],[Unit],[Qty],[Price],[IsActive],[CreatedUser],[CreatedTime],[ModifiedUser] ,[ModifiedTime])
          VALUES(@ProductID,@SubProductID,@UnitPrice,@Unit,@Qty,@Price,@IsActive,@CreatedUser,@CreatedTime,@ModifiedUser,@ModifiedTime);
          update [dbo].[bi_Product] set [UnitPrice]=(select sum([Price]) from [dbo].[bi_ProductDetail] where [ProductID]=@ProductID) where [ProductID]=@ProductID;
          RAISERROR ('新增成功！',15, 1) WITH NOWAIT
          end
          select a.AutoKey,a.SubProductID,b.Product,b.UnitPrice,a.Price,b.Remark,c.SupplierNAME
          from [bi_ProductDetail] a
          left join [bi_Product] b on a.SubProductID=b.ProductID
          left join [bi_Supplier] c on c.SupplierID=b.SupplierID
          where a.SubProductID=@SubProductID
        </Sql>
        <Sql Name="GetSubProduct" ConnectionName="Auth" Description="获取字产品信息">
          select a.AutoKey,a.SubProductID,b.Product,CONVERT(VARCHAR,b.UnitPrice) as UnitPrice,CONVERT(VARCHAR, a.[Price]) as [Price],b.Remark,c.SupplierNAME,c.SupplierID,a.Unit,CONVERT(VARCHAR, a.UnitPrice) as SubUnitPrice,a.Qty
          from [bi_ProductDetail] a
          left join [bi_Product] b on a.SubProductID=b.ProductID
          left join [bi_Supplier] c on c.SupplierID=b.SupplierID
          where a.ProductID=@ProductID and a.[IsActive]=1
        </Sql>
        <Sql Name="UpdateProduct" ConnectionName="Auth" Description="更新产品套餐">
          if exists( select * from [bi_Product] where [Product]=@Product and [IsActive]=1 and [ProductID]!=@ProductID)
          begin
          RAISERROR ('已经存在相同信息，无法保存！',15, 1) WITH NOWAIT
          end
          else
          begin
          UPDATE [bi_Product]
          SET  [ModifiedUser]=@ModifiedUser,[ModifiedTime]=@ModifiedTime,[Product]=@Product,[UnitPrice]=@UnitPrice,[SupplierID]=@SupplierID,[State]=@State,[Remark]=@Remark,[SortID]=@SortID WHERE [ProductID]=@ProductID;
          select a.[ProductID] as ID,a.[ProductID],a.[Product],b.[ProductType],CONVERT(VARCHAR, a.[UnitPrice]) as [UnitPrice],case a.[State] when 'undeter'
          then '待定' when 'active' then '启用' when 'pause' then '暂停' end as [State],a.[Remark]
          FROM [bi_Product] a
          left join [bi_ProductType] b on a.ProductTypeID=b.ProductTypeID
          WHERE a.[ProductID]=@ProductID
          end
          --select a.AutoKey,a.SubProductID,b.Product,b.UnitPrice,a.Price,b.Remark,c.SupplierNAME
          --from [bi_ProductDetail] a
          --left join [bi_Product] b on a.SubProductID=b.ProductID
          --left join [bi_Supplier] c on c.SupplierID=b.SupplierID
          --where a.SubProductID=@SubProductID
        </Sql>
        <Sql Name="DeleteSubProduct" ConnectionName="Auth" Description="删除子产品信息">
          DELETE from [bi_ProductDetail] WHERE [AutoKey]=@AutoKey;
          update [dbo].[bi_Product] set [UnitPrice]=(select sum([Price]) from [dbo].[bi_ProductDetail] where [ProductID]=@ProductID and [IsActive]=1) where [ProductID]=@ProductID;
          RAISERROR ('删除成功！',15, 1) WITH NOWAIT
        </Sql>
        <Sql Name="UpdateSubProduct" ConnectionName="Auth" Description="更新子产品信息">
          if exists( select * from [bi_ProductDetail] where [ProductID]=@ProductID and [IsActive]=1 and [SubProductID]=@SubProductID and AutoKey!=@AutoKey)
          begin
          RAISERROR ('已经存在相同信息，无法保存！',15, 1) WITH NOWAIT
          end
          else
          begin
          UPDATE [bi_ProductDetail] SET [ProductID] =@ProductID,[SubProductID] =@SubProductID,[UnitPrice] = @UnitPrice,[Unit] = @Unit ,[Qty] =@Qty,[Price] = @Price,[ModifiedUser] =@ModifiedUser,[ModifiedTime] =@ModifiedTime
          WHERE [AutoKey]=@AutoKey;
          update [dbo].[bi_Product] set [UnitPrice]=(select sum([Price]) from [dbo].[bi_ProductDetail] where [ProductID]=@ProductID) where [ProductID]=@ProductID;
          RAISERROR ('更新成功！',15, 1) WITH NOWAIT
          end
        </Sql>
        <Sql Name="GetItemProduct" ConnectionName="Auth" Description="获取产品信息">
          select a.[ProductID],a.[Product],a.ProductTypeID,b.[ProductType],CONVERT(VARCHAR, a.[UnitPrice]) as [UnitPrice],a.[State],a.[Remark],a.SupplierID,c.SupplierNAME,a.SortID,case a.[State] when 'undeter'
          then '待定' when 'active' then '启用' when 'pause' then '暂停' end as [State]
          FROM [bi_Product] a
          left join [bi_ProductType] b on a.ProductTypeID=b.ProductTypeID
          left join [bi_Supplier] c on a.SupplierID=c.SupplierID
          WHERE a.[ProductID]=@ProductID
        </Sql>
      </Table>
      <Table Name="bi_ProductType" ConnectionName="Auth" TableName="bi_ProductType">
        <Sql Name="Query" ConnectionName="Auth" Description="查询产品类型">
          SELECT *FROM [bi_ProductType]
          where [ProductType] like '%'+@ProductType+'%' and [ParentID] like '%'+@ParentID+'%' and [Remark] like '%'+@Remark+'%' and [IsActive]=1 and ParentID!='0000' and [ProductTypeID]!='P024'
        </Sql>
        <Sql Name="Add" ConnectionName="Auth" Description="新增产品类型">
          if exists(select * from [bi_ProductType] where [ProductType]=@ProductType and [IsActive] = 1)
          begin
          RAISERROR ('已经存在相同信息，无法保存！',15, 1) WITH NOWAIT
          end
          else
          begin
          INSERT INTO [bi_ProductType]
          ([ProductTypeID],[ProductType],[ParentID],[SortID],[Remark],[IsActive],[CreatedUser],[CreatedTime],[ModifiedUser],[ModifiedTime])
          VALUES(@ProductTypeID,@ProductType,@ParentID,@SortID,@Remark,@IsActive,@CreatedUser,@CreatedTime,@ModifiedUser,@ModifiedTime);
          SELECT [ProductTypeID],[ProductType],[ParentID],[SortID],[Remark],[IsActive],[CreatedUser],[CreatedTime],[ModifiedUser],[ModifiedTime],[AutoKey] FROM [bi_ProductType]
          WHERE [AutoKey]=scope_identity() and ParentID!='0000' and [ProductTypeID]!='P024'
          end;
        </Sql>
        <Sql Name="Update" ConnectionName="Auth" Description="更新产品类型">
          if exists(select * from [bi_ProductType] where [ProductType]=@ProductType and [ProductTypeID]!=@ProductTypeID and [IsActive] = 1 )
          begin
          RAISERROR ('已经存在相同信息，无法保存！',15, 1) WITH NOWAIT
          end
          else
          begin
          UPDATE [bi_ProductType]
          SET [ProductTypeID]=@ProductTypeID,[ProductType]=@ProductType,[ParentID]=@ParentID,[SortID]=@SortID,[Remark]=@Remark,[IsActive]=@IsActive,[ModifiedUser]=@ModifiedUser,[ModifiedTime]=@ModifiedTime WHERE [ProductTypeID]=@ProductTypeID;
          SELECT [ProductTypeID],[ProductType],[ParentID],[SortID],[Remark],[IsActive],[CreatedUser],[CreatedTime],[ModifiedUser],[ModifiedTime],[AutoKey] FROM [bi_ProductType]
          WHERE [ProductTypeID]=@ProductTypeID and ParentID!='0000' and [ProductTypeID]!='P024'
          end;
        </Sql>
        <Sql Name="Delete" ConnectionName="Auth" Description="删除产品类型">
          declare @sql varchar(max);

          set @sql='
          if exists(select * from [bi_ProductType] where [ParentID] in ('''+replace(@ProductTypeID,',',''',''')+''') and [IsActive] = 1 )
          begin
          RAISERROR (''选中行中存在上级类别，无法删除！'',15, 1) WITH NOWAIT
          end
          else if exists(select * from [bi_Product] where [ProductTypeID] in ('''+replace(@ProductTypeID,',',''',''')+''') and [IsActive] = 1 )
          begin
          RAISERROR (''选中行中存在处于使用状态的数据，无法删除！'',15, 1) WITH NOWAIT
          end
          else
          begin
          UPDATE [bi_ProductType] SET [ModifiedUser]='''+@ModifiedUser+''',[ModifiedTime]='''+@ModifiedTime+''',[IsActive]=0
          WHERE [ProductTypeID] in ('''+replace(@ProductTypeID,',',''',''')+''') ;
          end;'
          exec(@sql);
        </Sql>
        <Sql Name="GetItem" ConnectionName="Auth" Description="获取产品类型编辑/查看">
          SELECT [ProductTypeID],[ProductType],[ParentID],[SortID],[Remark],[IsActive],[CreatedUser],[CreatedTime],[ModifiedUser],[ModifiedTime],[AutoKey] FROM [bi_ProductType]
          WHERE [ProductTypeID]=@ProductTypeID
        </Sql>
        <Sql Name="GetDetail" ConnectionName="Auth" Description="查询明细">
          SELECT a.[ProductTypeID],a.[ProductType],a.[ParentID],b.[ProductType] as PProductype, a.[SortID],a.[Remark],a.[IsActive]
          FROM [bi_ProductType]a left join [bi_ProductType]b on a.[ParentID]=b.[ProductTypeID]
          WHERE a.[ProductTypeID]=@ProductTypeID
        </Sql>
        <Sql Name="GetEdit" ConnectionName="Auth" Description="查询编辑">
          SELECT [ProductTypeID],[ProductType],[ParentID],[SortID],[Remark],[IsActive]
          FROM [bi_ProductType]
          WHERE [ProductTypeID]=@ProductTypeID
        </Sql>
        <Sql Name="GetParentID" SharedName="GetProductTypeParentID" ConnectionName="Auth" Description="获取上级类别">select ProductTypeID,ProductType,ParentID from bi_ProductType where IsActive=1 union select '0000','无',''</Sql>
        <Sql Name="QueryCount" ConnectionName="Auth" Description="查询总数">
          SELECT count(*) FROM [bi_ProductType]
          where [ProductType] like '%'+@ProductType+'%' and [ParentID] like '%'+@ParentID+'%' and [Remark] like '%'+@Remark+'%' and [IsActive]=1 and ParentID!='0000' and [ProductTypeID]!='P024'
        </Sql>
        <Sql Name="QueryPage" ConnectionName="Auth" Description="查询分页">
          SELECT *FROM [bi_ProductType]
          where [ProductType] like '%'+@ProductType+'%' and [ParentID] like '%'+@ParentID+'%' and [Remark] like '%'+@Remark+'%' and [IsActive]=1 and ParentID!='0000' and [ProductTypeID]!='P024'    order by [ModifiedTime] desc
          OFFSET ((CAST(@Page as int)-1)*CAST(@Rows as int)) Rows FETCH NEXT CAST(@Rows as int) ROWS ONLY;
        </Sql>
      </Table>
      <Table Name="bi_ProductUI" ConnectionName="Auth" TableName="bi_ProductUI">
        <Sql Name="Add" ConnectionName="Auth" Description="新增下单产品界面设定">
          BEGIN TRY
          BEGIN TRAN deleteui
          delete from [bi_ProductUI] where [ProductID]=@ProductID
          insert into [dbo].[bi_ProductUI] ([PUIISD],[ProductID],[ItemCol],[ItemSort],[ItemName],[IsRequired],[Remark],[IsActive] ,[CreatedUser],[CreatedTime] ,[ModifiedUser] ,[ModifiedTime])
          select
          PUIISD.Value PUIISD
          ,@ProductID
          ,ItemCol.Value ItemCol
          ,ItemSort.Value ItemSort
          ,ItemName.Value ItemName
          ,IsRequired.Value IsRequired
          ,Remark.Value Remark
          ,1
          ,@CreatedUser
          ,@CreatedTime
          ,@ModifiedUser
          ,@ModifiedTime
          from [fSplitString](@PUIISD,',',0) PUIISD
          left join [fSplitString](@ItemCol,',',0)  ItemCol on PUIISD.Id=ItemCol.Id
          left join [fSplitString](@ItemSort,',',0) ItemSort on PUIISD.Id=ItemSort.Id
          left join [fSplitString](@ItemName,',',0) ItemName on PUIISD.Id=ItemName.Id
          left join [fSplitString](@IsRequired,',',0) IsRequired on PUIISD.Id=IsRequired.Id
          left join [fSplitString](@Remark,',',0) Remark on PUIISD.Id=Remark.Id

          COMMIT TRAN deleteui
          --SELECT
          END TRY
          BEGIN CATCH
          ROLLBACK TRAN deleteui
          DECLARE @ERROR NVARCHAR(MAX)
          SELECT @ERROR=ERROR_MESSAGE()
          RAISERROR (@ERROR ,15, 1) WITH NOWAIT
          END CATCH

        </Sql>
        <Sql Name="QueryProductUI" ConnectionName="Auth" Description="查询产品界面（下单）">
          SELECT ItemName,IsRequired,Field,FieldType,Html FROM
          bi_ProductUI INNER JOIN bi_ProductUISet ON bi_ProductUI.PUIISD=bi_ProductUISet.PUIISD
          WHERE bi_ProductUI.ProductID=@ProductID AND IsActive=1
          ORDER BY ItemSort
        </Sql>
      </Table>
      <Table Name="bi_Supplier" ConnectionName="Auth" TableName="bi_Supplier">
        <Sql Name="Add" ConnectionName="Auth" Description="供应商新增">
          if exists(select * from bi_Supplier where SupplierNAME=@SupplierNAME and [IsActive]=1)
          begin
          RAISERROR ('已经存在相同信息，无法保存！',15, 1) WITH NOWAIT
          end
          else
          begin
          declare @SupplierID  varchar(8)
          declare @C varchar(8)
          set @C='S'+RIGHT(CONVERT(VARCHAR,YEAR(GETDATE())),2)
          exec sp_CreateSerialCode 'Supplier',@C,8,@SupplierID output
          INSERT INTO [bi_Supplier]
          ([SupplierID],[SupplierNAME],[SupplierJC],[SupplierJM],[Contact],[ContactTel],[Site],[Email],[ZipCode],[Address],[Remark],[IsActive],[CreatedUser],[CreatedTime],[ModifiedUser],[ModifiedTime])
          VALUES(@SupplierID,@SupplierNAME,@SupplierJC,@SupplierJM,@Contact,@ContactTel,@Site,@Email,@ZipCode,@Address,@Remark,@IsActive,@CreatedUser,@CreatedTime,@ModifiedUser,@ModifiedTime);
          SELECT *
          FROM [bi_Supplier]
          WHERE [AutoKey]=scope_identity();
          end
        </Sql>
        <Sql Name="Search" ConnectionName="Auth" Description="检索供应商">
          select [SupplierID],[SupplierNAME],[SupplierJC],[Contact],[ContactTel],[Email],[ZipCode],[Address],[Remark]
          from bi_Supplier
          where SupplierNAME like '%'+@SupplierNAME +'%' and SupplierJC like '%'+@SupplierJC+'%' and [IsActive]=1
        </Sql>
        <Sql Name="GetItem" ConnectionName="Auth" Description="获取当前供应商">select * from bi_Supplier where [SupplierID]=@SupplierID</Sql>
        <Sql Name="Update" ConnectionName="Auth" Description="更新当前供应商信息">
          if exists(select * from bi_Supplier where SupplierNAME=@SupplierNAME and [IsActive]=1 and [SupplierID]!=@SupplierID)
          begin
          RAISERROR ('已经存在相同信息，无法保存！',15, 1) WITH NOWAIT
          end
          else
          begin
          UPDATE [bi_Supplier] set
          [SupplierNAME]=@SupplierNAME,[SupplierJC]=@SupplierJC,[SupplierJM]=@SupplierJM,[Contact]=@Contact,[ContactTel]=@ContactTel,[Site]=@Site,[Email]=@Email,[ZipCode]=@ZipCode,[Address]=@Address,[Remark]=@Remark,[ModifiedUser]=@ModifiedUser,[ModifiedTime]=@ModifiedTime
          where [SupplierID]=@SupplierID;
          SELECT *
          FROM [bi_Supplier]
          WHERE [SupplierID]=@SupplierID;
          end
        </Sql>
        <Sql Name="QueryCount" ConnectionName="Auth" Description="查询总数">
          select count(*)
          from bi_Supplier
          where SupplierNAME like '%'+@SupplierNAME +'%' and SupplierJC like '%'+@SupplierJC+'%' and [IsActive]=1
        </Sql>
        <Sql Name="QueryPage" ConnectionName="Auth" Description="查询分页">
          select [SupplierID],[SupplierNAME],[SupplierJC],[Contact],[ContactTel],[Email],[ZipCode],[Address],[Remark]
          from bi_Supplier
          where SupplierNAME like '%'+@SupplierNAME +'%' and SupplierJC like '%'+@SupplierJC+'%' and [IsActive]=1
          order by ModifiedTime desc
          OFFSET ((CAST(@Page as int)-1)*CAST(@Rows as int)) Rows FETCH NEXT CAST(@Rows as int) ROWS ONLY;
        </Sql>
        <Sql Name="GetSupplier" SharedName="GetSupplier" ConnectionName="Auth" Description="获得所有供应商信息">
          select [SupplierID],[SupplierNAME] from bi_Supplier where [IsActive]=1
        </Sql>
      </Table>
      <Table Name="bi_SupplierBank" ConnectionName="Auth" TableName="bi_SupplierBank">
        <Sql Name="GetBank" ConnectionName="Auth" Description="获取当前供应商的银行账号">
          select [SupplierID],[Bank],[Account],[Remark],CASE [SState] WHEN '10' THEN '待定' WHEN '20' THEN '启用' WHEN '30' THEN '暂停' END SState,[AutoKey] from [bi_SupplierBank] where [SupplierID]=@SupplierID and [IsActive]=1
        </Sql>
        <Sql Name="AddBank" ConnectionName="Auth" Description="新增供应商银行账号的操作">
          if exists(select * from [bi_SupplierBank] where [Account]=@Account and [IsActive]=1)
          begin
          RAISERROR ('已经存在相同信息，无法保存！',15, 1) WITH NOWAIT
          end
          else
          begin
          if exists(select * from [bi_SupplierBank] where [Account]=@Account and [IsActive]!=1)
          begin
          update [bi_SupplierBank] set [IsActive]=1 where [Account]=@Account;
          raiserror('新增成功！',16,1) with nowait
          end
          else
          begin
          insert into [bi_SupplierBank]([SupplierID],[Bank],[Account],[SState],[Remark],[IsActive],[CreatedUser],[CreatedTime],[ModifiedUser],[ModifiedTime])
          values(@SupplierID,@Bank,@Account,@SState,@Remark,@IsActive,@CreatedUser,@CreatedTime,@ModifiedUser,@ModifiedTime);
          raiserror('新增成功！',16,1) with nowait
          end
          end
        </Sql>
        <Sql Name="UpdateBank" ConnectionName="Auth" Description="更新供应商银行账号">
          if exists(select * from [bi_SupplierBank] where [AutoKey]=@AutoKey and [IsActive]=1 and [SupplierID]!=@SupplierID)
          begin
          RAISERROR ('已经存在相同信息，无法保存！',15, 1) WITH NOWAIT
          end
          else
          begin
          update [bi_SupplierBank] set [Bank]=@Bank,[Account]=@Account,[SState]=@SState,[Remark]=@Remark,[ModifiedUser]=@ModifiedUser,[ModifiedTime]=@ModifiedTime where [AutoKey]=@AutoKey;
          raiserror('更新成功！',16,1) with nowait
          end
        </Sql>
        <Sql Name="DeleteBank" ConnectionName="Auth" Description="逻辑删除供应商银行账号">
          update [bi_SupplierBank] set [IsActive]=0 where [Account]=@Account;
          raiserror('删除成功！',16,1) with nowait
        </Sql>
        <Sql Name="GetBankList" ConnectionName="Auth" Description="获取当前供应商的银行列表（Combobox用）">
          select SupplierID,[Bank] from [bi_SupplierBank] where [SupplierID]=@SupplierID and [IsActive]=1 AND SState='20' GROUP BY SupplierID,Bank
        </Sql>
        <Sql Name="GetBankAccountList" ConnectionName="Auth" Description="获取当前供应商的银行账号列表（Combobox用）">
          select [Account] from [bi_SupplierBank] where [SupplierID]=@SupplierID AND Bank=@Bank and [IsActive]=1 AND SState='20'
        </Sql>
      </Table>
      <Table Name="bi_CustomerRule" ConnectionName="Auth" TableName="bi_CustomerRule">
        <Sql Name="Update" ConnectionName="Auth" SqlType="Execute" Description="Update">
          if exists(select * from [bi_CustomerRule] where
          CompanyID=@CompanyID)
          begin
          update [bi_CustomerRule] set CustomerLimit=@CustomerLimit,ModifiedUser=@ModifiedUser,ModifiedTime=@ModifiedTime where CompanyID=@CompanyID
          end
          else
          begin
          INSERT INTO [bi_CustomerRule]([CompanyID],[CustomerLimit],[CreatedUser],[CreatedTime],[ModifiedUser],[ModifiedTime])
          VALUES(@CompanyID,@CustomerLimit,@CreatedUser,@CreatedTime,@ModifiedUser,@ModifiedTime)
          end
        </Sql>
        <Sql Name="GetEdit" ConnectionName="Auth" Description="GetEdit">
          declare @CustomerLimit int
          select  @CustomerLimit=CustomerLimit from bi_CustomerRule where CompanyID=@CompanyID
          select @CompanyID as CompanyID, @CustomerLimit as CustomerLimit
        </Sql>
        <Sql Name="GetResidueByCmpAndUser" ConnectionName="Auth" Description="由公司和登录者获取新增客户剩余数">
          declare @i int
          set @i=10
          select top 1 @i=CustomerLimit from bi_CustomerRule where CompanyID in (@CompanyID,'') order by CompanyID desc
          select @i-count(*) as Residue from bi_Customer INNER JOIN bi_CustomerBi ON bi_Customer.CustomerID = bi_CustomerBi.CustomerID
          where bi_Customer.IsActive=1 AND bi_CustomerBi.IsActive=1 AND bi_CustomerBi.BID=@BID
        </Sql>
      </Table>
      <Table Name="bi_ReOrder" ConnectionName="Auth" TableName="bi_ReOrder">
		  <Sql Name="GetReOrderProducts" ConnectionName="Auth" Description="根据商务ID和客户ID获取已经审核通过的退单产品信息">
			  SELECT dbo.bi_ReOrder.OrderID, dbo.bi_ProductType.ProductType, dbo.bi_Product.Product, dbo.bi_ReOrderProduct.Amount,
			  dbo.bi_ReOrder.Remark, dbo.bi_ReOrderProduct.AutoKey, dbo.bi_ReOrderProduct.ProductID
			  FROM dbo.bi_ReOrder INNER JOIN
			  dbo.bi_ReOrderProduct ON dbo.bi_ReOrder.ReOrderID = dbo.bi_ReOrderProduct.ReOrderID INNER JOIN
			  dbo.bi_Product ON dbo.bi_ReOrderProduct.ProductID = dbo.bi_Product.ProductID INNER JOIN
			  dbo.bi_ProductType ON dbo.bi_Product.ProductTypeID = dbo.bi_ProductType.ProductTypeID
			  WHERE (dbo.bi_ReOrderProduct.BID = @BID) AND (dbo.bi_ReOrder.OrderState = N'结案') AND (dbo.bi_ReOrder.IsActive = 1)
          AND (dbo.bi_ReOrder.CustomerID = @CustomerID)
		  </Sql>
      </Table>
      <Table Name="bi_CommissionForm" ConnectionName="Auth" TableName="bi_CommissionForm">
        <Sql Name="QueryCount" ConnectionName="Auth" Description="查询总数">
          DECLARE @SQL NVARCHAR(2000)

          SET @SQL =
          'SELECT COUNT(*)
          FROM dbo.bi_CommissionForm LEFT JOIN
          dbo.fl_MappingForm ON dbo.bi_CommissionForm.CSID = dbo.fl_MappingForm.FormNo
          INNER JOIN hr_Employee ON bi_CommissionForm.[ApplyEmployeeID]=hr_Employee.EmployeeID
          WHERE dbo.bi_CommissionForm.IsActive=1 AND hr_Employee.UserID='''+@UserID+''' AND ISNULL(dbo.fl_MappingForm.Table_Name,N''fl_CommissionForm'') = N''fl_CommissionForm'''

          IF @CommissionYM &lt;&gt; ''
          BEGIN
          SET @SQL = @SQL + ' AND dbo.bi_CommissionForm.CommissionYM =''' + @CommissionYM + ''''
          END

          IF @Approve &lt;&gt; '' AND @Approve &lt;&gt; '-2'
          BEGIN
          IF @Approve = '-1'
          BEGIN
          SET @SQL = @SQL + ' AND dbo.fl_MappingForm.Approved IS NULL'
          END
          ELSE
          BEGIN
          SET @SQL = @SQL + ' AND dbo.fl_MappingForm.Approved=' + @Approve
          END
          END

          EXEC(@SQL)
        </Sql>
        <Sql Name="QueryPage" ConnectionName="Auth" Description="查询分页">
          DECLARE @SQL NVARCHAR(2000)

          SET @SQL =
          'SELECT dbo.bi_CommissionForm.CSID, CONVERT(VARCHAR,CONVERT(DATE, dbo.bi_CommissionForm.ApplicationDate)) ApplicationDate,
          CONVERT(VARCHAR, CONVERT(DECIMAL(18,2),dbo.bi_CommissionForm.TotalAmount)) TotalAmount,dbo.bi_CommissionForm.CommissionType,dbo.bi_CommissionForm.CommissionYM
          CASE dbo.fl_MappingForm.Approved
          WHEN 1 THEN ''申请中''
          WHEN 2 THEN ''已核准''
          WHEN 0 THEN ''已驳回''
          ELSE ''草稿''
          END Approved,ISNULL(dbo.fl_MappingForm.Approved,-1) ApproveStatus
          FROM dbo.bi_CommissionForm LEFT JOIN
          dbo.fl_MappingForm ON dbo.bi_CommissionForm.CSID = dbo.fl_MappingForm.FormNo
          INNER JOIN hr_Employee ON bi_CommissionForm.[ApplyEmployeeID]=hr_Employee.EmployeeID
          WHERE dbo.bi_CommissionForm.IsActive=1 AND hr_Employee.UserID='''+@UserID+''' AND ISNULL(dbo.fl_MappingForm.Table_Name,N''fl_CommissionForm'') = N''fl_CommissionForm'''

          IF @CommissionYM &lt;&gt; ''
          BEGIN
          SET @SQL = @SQL + ' AND dbo.bi_CommissionForm.CommissionYM =''' + @CommissionYM + ''''
          END

          IF @Approve &lt;&gt; '' AND @Approve &lt;&gt; '-2'
          BEGIN
          IF @Approve = '-1'
          BEGIN
          SET @SQL = @SQL + ' AND dbo.fl_MappingForm.Approved IS NULL'
          END
          ELSE
          BEGIN
          SET @SQL = @SQL + ' AND dbo.fl_MappingForm.Approved=' + @Approve
          END
          END

          SET @SQL = @SQL + ' ORDER BY ExpenditureDate DESC'

          SET @SQL = @SQL + '
          OFFSET ('+ CAST((@Page - 1) * @Rows AS varchar(10)) +') ROWS

          FETCH NEXT ' + CAST(@Rows AS varchar(10)) +' ROWS ONLY';

          EXEC(@SQL)
        </Sql>
        <Sql Name="Add" ConnectionName="Auth" Description="Add">
          BEGIN TRY
          BEGIN TRAN Commission

          INSERT INTO [dbo].[bi_CommissionForm]([CSID],[EmployeeID],[CompanyID],[DeptID],[JobID],[CommissionType],[ApplicationDate],[CommissionYM],[TotalAmount],[Reason],[Amount],[Remark],[IsActive],[CreatedUser],[CreatedTime],[ModifiedUser],[ModifiedTime])
          VALUES(@CSID,@EmployeeID,@CompanyID,@DeptID,@JobID,@CommissionType,ApplicationDate,@CommissionYM,@TotalAmount,@Reason,0,'',1,@CreatedUser,@CreatedTime,@ModifiedUser,@ModifiedTime)

          DECLARE @SN INT,@Total INT,@IsOrder BIT,@CustomerID VARCHAR(8),@OrderID VARCHAR(12),@OrderState NVARCHAR(20),@ContractAmount MONEY,
          @AccountAmount MONEY,@CommissionTypeID VARCHAR(4),@CommissionRoleID VARCHAR(4),@CommissionScale DECIMAL(18,2),@CommissionAmount MONEY
          SET @SN = 1
          SET @Total = LEN(@OrderID_Set)-LEN(REPLACE(@OrderID_Set,'|','')) - 1

          WHILE @SN &lt;= @Total
          BEGIN
          SELECT @IsOrder=SUBSTRING(@IsOrder_Set,
          CHARINDEX('|'+CONVERT(VARCHAR,@SN)+',',@IsOrder_Set)+3,
          CHARINDEX('|',@IsOrder_Set,CHARINDEX('|'+CONVERT(VARCHAR,@SN)+',',@IsOrder_Set)+3)-(CHARINDEX('|'+CONVERT(VARCHAR,@SN)+',',@IsOrder_Set)+3))
          SELECT @CustomerID=SUBSTRING(@CustomerID_Set,
          CHARINDEX('|'+CONVERT(VARCHAR,@SN)+',',@CustomerID_Set)+3,
          CHARINDEX('|',@CustomerID_Set,CHARINDEX('|'+CONVERT(VARCHAR,@SN)+',',@CustomerID_Set)+3)-(CHARINDEX('|'+CONVERT(VARCHAR,@SN)+',',@CustomerID_Set)+3))
          SELECT @OrderID=SUBSTRING(@OrderID_Set,
          CHARINDEX('|'+CONVERT(VARCHAR,@SN)+',',@OrderID_Set)+3,
          CHARINDEX('|',@OrderID_Set,CHARINDEX('|'+CONVERT(VARCHAR,@SN)+',',@OrderID_Set)+3)-(CHARINDEX('|'+CONVERT(VARCHAR,@SN)+',',@OrderID_Set)+3))
          SELECT @OrderState=SUBSTRING(@OrderState_Set,
          CHARINDEX('|'+CONVERT(VARCHAR,@SN)+',',@OrderState_Set)+3,
          CHARINDEX('|',@OrderState_Set,CHARINDEX('|'+CONVERT(VARCHAR,@SN)+',',@OrderState_Set)+3)-(CHARINDEX('|'+CONVERT(VARCHAR,@SN)+',',@OrderState_Set)+3))
          SELECT @ContractAmount=CONVERT(MONEY,SUBSTRING(@ContractAmount_Set,
          CHARINDEX('|'+CONVERT(VARCHAR,@SN)+',',@ContractAmount_Set)+3,
          CHARINDEX('|',@ContractAmount_Set,CHARINDEX('|'+CONVERT(VARCHAR,@SN)+',',@ContractAmount_Set)+3)-(CHARINDEX('|'+CONVERT(VARCHAR,@SN)+',',@ContractAmount_Set)+3)))
          SELECT @AccountAmount=CONVERT(MONEY,SUBSTRING(@AccountAmount_Set,
          CHARINDEX('|'+CONVERT(VARCHAR,@SN)+',',@AccountAmount_Set)+3,
          CHARINDEX('|',@AccountAmount_Set,CHARINDEX('|'+CONVERT(VARCHAR,@SN)+',',@AccountAmount_Set)+3)-(CHARINDEX('|'+CONVERT(VARCHAR,@SN)+',',@AccountAmount_Set)+3)))
          SELECT @CommissionTypeID=SUBSTRING(@CommissionTypeID_Set,
          CHARINDEX('|'+CONVERT(VARCHAR,@SN)+',',@CommissionTypeID_Set)+3,
          CHARINDEX('|',@CommissionTypeID_Set,CHARINDEX('|'+CONVERT(VARCHAR,@SN)+',',@CommissionTypeID_Set)+3)-(CHARINDEX('|'+CONVERT(VARCHAR,@SN)+',',@CommissionTypeID_Set)+3))
          SELECT @CommissionRoleID=SUBSTRING(@CommissionRoleID_Set,
          CHARINDEX('|'+CONVERT(VARCHAR,@SN)+',',@CommissionRoleID_Set)+3,
          CHARINDEX('|',@CommissionRoleID_Set,CHARINDEX('|'+CONVERT(VARCHAR,@SN)+',',@CommissionRoleID_Set)+3)-(CHARINDEX('|'+CONVERT(VARCHAR,@SN)+',',@CommissionRoleID_Set)+3))
          SELECT @CommissionScale=CONVERT(DECIMAL(18,2),SUBSTRING(@CommissionScale_Set,
          CHARINDEX('|'+CONVERT(VARCHAR,@SN)+',',@CommissionScale_Set)+3,
          CHARINDEX('|',@CommissionScale_Set,CHARINDEX('|'+CONVERT(VARCHAR,@SN)+',',@CommissionScale_Set)+3)-(CHARINDEX('|'+CONVERT(VARCHAR,@SN)+',',@CommissionScale_Set)+3)))
          SELECT @CommissionAmount=CONVERT(MONEY,SUBSTRING(@CommissionAmount_Set,
          CHARINDEX('|'+CONVERT(VARCHAR,@SN)+',',@CommissionAmount_Set)+3,
          CHARINDEX('|',@CommissionAmount_Set,CHARINDEX('|'+CONVERT(VARCHAR,@SN)+',',@CommissionAmount_Set)+3)-(CHARINDEX('|'+CONVERT(VARCHAR,@SN)+',',@CommissionAmount_Set)+3)))

          INSERT INTO [dbo].[bi_CommissionOrder]([CSID],[IsOrder],[CustomerID],[OrderID],[OrderState],[ContractAmount],[AccountAmount],[CommissionTypeID],[CommissionRoleID],[CommissionScale],[Amount],[Remark],[IsActive],[CreatedUser],[CreatedTime],[ModifiedUser],[ModifiedTime])
          VALUES(@CSID,@IsOrder,@CustomerID,@OrderID,@OrderState,@ContractAmount,@AccountAmount,@CommissionTypeID,@CommissionRoleID,@CommissionScale,@CommissionAmount,@Remark,1,@CreatedUser,@CreatedTime,@ModifiedUser,@ModifiedTime)

          SET @SN = @SN + 1
          END

          COMMIT TRAN Commission
          END TRY
          BEGIN CATCH
          ROLLBACK TRAN Commission
          DECLARE @ERROR NVARCHAR(MAX)
          SELECT @ERROR=ERROR_MESSAGE()
          RAISERROR (@ERROR ,15, 1) WITH NOWAIT
          END CATCH
        </Sql>
        <Sql Name="Update" ConnectionName="Auth" Description="Update">
          BEGIN TRY
          BEGIN TRAN Commission

          UPDATE [dbo].[bi_CommissionForm]
          SET [CommissionType] = @CommissionType,[CommissionYM] = @CommissionYM,[TotalAmount] = @TotalAmount,[Reason] = @Reason,[ModifiedUser] = @ModifiedUser,[ModifiedTime] = @ModifiedTime
          WHERE [CSID] = @CSID

          DELETE FROM bi_CommissionOrder WHERE [CSID] = @CSID

          DECLARE @SN INT,@Total INT,@IsOrder BIT,@CustomerID VARCHAR(8),@OrderID VARCHAR(12),@OrderState NVARCHAR(20),@ContractAmount MONEY,
          @AccountAmount MONEY,@CommissionTypeID VARCHAR(4),@CommissionRoleID VARCHAR(4),@CommissionScale DECIMAL(18,2),@CommissionAmount MONEY
          SET @SN = 1
          SET @Total = LEN(@OrderID_Set)-LEN(REPLACE(@OrderID_Set,'|','')) - 1

          WHILE @SN &lt;= @Total
          BEGIN
          SELECT @IsOrder=SUBSTRING(@IsOrder_Set,
          CHARINDEX('|'+CONVERT(VARCHAR,@SN)+',',@IsOrder_Set)+3,
          CHARINDEX('|',@IsOrder_Set,CHARINDEX('|'+CONVERT(VARCHAR,@SN)+',',@IsOrder_Set)+3)-(CHARINDEX('|'+CONVERT(VARCHAR,@SN)+',',@IsOrder_Set)+3))
          SELECT @CustomerID=SUBSTRING(@CustomerID_Set,
          CHARINDEX('|'+CONVERT(VARCHAR,@SN)+',',@CustomerID_Set)+3,
          CHARINDEX('|',@CustomerID_Set,CHARINDEX('|'+CONVERT(VARCHAR,@SN)+',',@CustomerID_Set)+3)-(CHARINDEX('|'+CONVERT(VARCHAR,@SN)+',',@CustomerID_Set)+3))
          SELECT @OrderID=SUBSTRING(@OrderID_Set,
          CHARINDEX('|'+CONVERT(VARCHAR,@SN)+',',@OrderID_Set)+3,
          CHARINDEX('|',@OrderID_Set,CHARINDEX('|'+CONVERT(VARCHAR,@SN)+',',@OrderID_Set)+3)-(CHARINDEX('|'+CONVERT(VARCHAR,@SN)+',',@OrderID_Set)+3))
          SELECT @OrderState=SUBSTRING(@OrderState_Set,
          CHARINDEX('|'+CONVERT(VARCHAR,@SN)+',',@OrderState_Set)+3,
          CHARINDEX('|',@OrderState_Set,CHARINDEX('|'+CONVERT(VARCHAR,@SN)+',',@OrderState_Set)+3)-(CHARINDEX('|'+CONVERT(VARCHAR,@SN)+',',@OrderState_Set)+3))
          SELECT @ContractAmount=CONVERT(MONEY,SUBSTRING(@ContractAmount_Set,
          CHARINDEX('|'+CONVERT(VARCHAR,@SN)+',',@ContractAmount_Set)+3,
          CHARINDEX('|',@ContractAmount_Set,CHARINDEX('|'+CONVERT(VARCHAR,@SN)+',',@ContractAmount_Set)+3)-(CHARINDEX('|'+CONVERT(VARCHAR,@SN)+',',@ContractAmount_Set)+3)))
          SELECT @AccountAmount=CONVERT(MONEY,SUBSTRING(@AccountAmount_Set,
          CHARINDEX('|'+CONVERT(VARCHAR,@SN)+',',@AccountAmount_Set)+3,
          CHARINDEX('|',@AccountAmount_Set,CHARINDEX('|'+CONVERT(VARCHAR,@SN)+',',@AccountAmount_Set)+3)-(CHARINDEX('|'+CONVERT(VARCHAR,@SN)+',',@AccountAmount_Set)+3)))
          SELECT @CommissionTypeID=SUBSTRING(@CommissionTypeID_Set,
          CHARINDEX('|'+CONVERT(VARCHAR,@SN)+',',@CommissionTypeID_Set)+3,
          CHARINDEX('|',@CommissionTypeID_Set,CHARINDEX('|'+CONVERT(VARCHAR,@SN)+',',@CommissionTypeID_Set)+3)-(CHARINDEX('|'+CONVERT(VARCHAR,@SN)+',',@CommissionTypeID_Set)+3))
          SELECT @CommissionRoleID=SUBSTRING(@CommissionRoleID_Set,
          CHARINDEX('|'+CONVERT(VARCHAR,@SN)+',',@CommissionRoleID_Set)+3,
          CHARINDEX('|',@CommissionRoleID_Set,CHARINDEX('|'+CONVERT(VARCHAR,@SN)+',',@CommissionRoleID_Set)+3)-(CHARINDEX('|'+CONVERT(VARCHAR,@SN)+',',@CommissionRoleID_Set)+3))
          SELECT @CommissionScale=CONVERT(DECIMAL(18,2),SUBSTRING(@CommissionScale_Set,
          CHARINDEX('|'+CONVERT(VARCHAR,@SN)+',',@CommissionScale_Set)+3,
          CHARINDEX('|',@CommissionScale_Set,CHARINDEX('|'+CONVERT(VARCHAR,@SN)+',',@CommissionScale_Set)+3)-(CHARINDEX('|'+CONVERT(VARCHAR,@SN)+',',@CommissionScale_Set)+3)))
          SELECT @CommissionAmount=CONVERT(MONEY,SUBSTRING(@CommissionAmount_Set,
          CHARINDEX('|'+CONVERT(VARCHAR,@SN)+',',@CommissionAmount_Set)+3,
          CHARINDEX('|',@CommissionAmount_Set,CHARINDEX('|'+CONVERT(VARCHAR,@SN)+',',@CommissionAmount_Set)+3)-(CHARINDEX('|'+CONVERT(VARCHAR,@SN)+',',@CommissionAmount_Set)+3)))

          INSERT INTO [dbo].[bi_CommissionOrder]([CSID],[IsOrder],[CustomerID],[OrderID],[OrderState],[ContractAmount],[AccountAmount],[CommissionTypeID],[CommissionRoleID],[CommissionScale],[Amount],[Remark],[IsActive],[CreatedUser],[CreatedTime],[ModifiedUser],[ModifiedTime])
          VALUES(@CSID,@IsOrder,@CustomerID,@OrderID,@OrderState,@ContractAmount,@AccountAmount,@CommissionTypeID,@CommissionRoleID,@CommissionScale,@CommissionAmount,@Remark,1,@CreatedUser,@CreatedTime,@ModifiedUser,@ModifiedTime)

          SET @SN = @SN + 1
          END

          COMMIT TRAN Commission
          END TRY
          BEGIN CATCH
          ROLLBACK TRAN Commission
          DECLARE @ERROR NVARCHAR(MAX)
          SELECT @ERROR=ERROR_MESSAGE()
          RAISERROR (@ERROR ,15, 1) WITH NOWAIT
          END CATCH

        </Sql>
        <Sql Name="GetItem" ConnectionName="Auth" Description="GetItem">
          SELECT[CSID],dbo.bi_CommissionForm.[EmployeeID],dbo.hr_Employee.Name EmployeeName,dbo.bi_CommissionForm.[CompanyID],
          dbo.bi_CommissionForm.[DeptID],dbo.bi_CommissionForm.[JobID],[CommissionType],[ApplicationDate],[CommissionYM],[TotalAmount],[Reason]
          FROM dbo.bi_CommissionForm INNER JOIN
          dbo.hr_Employee ON dbo.bi_CommissionForm.EmployeeID = dbo.hr_Employee.EmployeeID INNER JOIN
          WHERE dbo.bi_CommissionForm.CSID = @CSID
        </Sql>
        <Sql Name="Delete" ConnectionName="Auth" SqlType="Execute" Description="Delete">
          DECLARE @sql varchar(max);
          SET @sql='UPDATE [bi_CommissionForm]
          SET [ModifiedUser]='''+@ModifiedUser+''',[ModifiedTime]='''+@ModifiedTime+''',[IsActive]=0 WHERE [CSID] in ('''+replace(@CSIDs,',',''',''')+''') ;'
          EXEC(@sql);
        </Sql>
      </Table>
    </Group>
    <Group Name="人事管理">
      <Table Name="hr_Employee" ConnectionName="Auth" TableName="hr_Employee">
        <Sql Name="Add" ConnectionName="Auth" Description="Add">
          if exists(select * from hr_Employee where [CardNo]=@CardNo and IsActive=1)
          begin
          RAISERROR ('已经存在相同身份证号，无法保存！',15, 1) WITH NOWAIT
          end
          else if  exists(select * from hr_Employee where  [CardID]=@CardID and IsActive=1)
          begin
          raiserror('已经存在相同卡号，无法保存！',16,1) with nowait
          end
          else if  exists(select * from hr_Employee where [ImoID]=@ImoID and IsActive=1)
          begin
          raiserror('已经存在相同IMO，无法保存！',16,1) with nowait
          end
          else if  exists(select * from hr_Employee where  [Email]=@Email and IsActive=1)
          begin
          raiserror('已经存在相同公司邮箱，无法保存！',16,1) with nowait
          end
          else if (@CreateSysUser='on'and exists(select * from sys_User where [Email]=@Email and IsValid=1))
          begin
          raiserror('已经存在相同系统账户，无法保存！',16,1) with nowait
          end
          else if(DATEDIFF(DAY,GETDATE(),CONVERT(DATE,@Birthday))&gt;0)
          begin
          raiserror('出生日期不能晚于当前日期！',16,1) with nowait
          end
          else if(DATEDIFF(DAY,convert(date,@ConventionStartDate,20),convert(date,@ConventionEndDate,20))&lt;0)
          begin
          raiserror('实习合同终止日期必须大于实习合同起始日期！',16,1) with nowait
          end
          else if(DATEDIFF(DAY,convert(date,@ContractStartDate,20),convert(date,@ContractEndDate,20))&lt;0)
          begin
          raiserror('正式合同终止日期必须大于正式合同起始日期！',16,1) with nowait
          end
          else
          begin

          begin tran
          if(@CreateSysUser='on')
          begin
          declare @userID varchar(6)
          exec sp_CreateSerialCode 'User','U',6,@userID output
          insert into [sys_User]([UserID],[UserName],[FullName],[Email],[Password],[IsValid],[CreatedUser],[CreatedTime],[ModifiedUser],[ModifiedTime] )
          values(@userID,@Email,@Name,@Email,'5A38563FFCF23CF186A23CC88B28115D',1,@CreatedUser,@CreatedTime,@ModifiedUser,@ModifiedTime)
          end
          declare @attendance bit
          if(@IsAttendance='on')
          begin
          set  @attendance=1
          end
          else
          begin
          set  @attendance=0
          end
          INSERT INTO [hr_Employee]
          ([EmployeeID],CompanyID,[DeptID],[JobID],[UserID],[Name],[Sex],[CardNo],[Birthday],[Nation],[Marriage],[Politics],[Native],[RegisterAddress],[Health],[Weight],[Height],
          [LiveAddress],[Telephone],[Mobiphone],[Education],[HireDate],[Email],[Pemail],[CardID],[ImoID],[ExtNum],[EduName],[Major],[FirstWorkDate],
          [EduEndDate],[Convention],[ConventionStartDate],[ConventionEndDate],[ContractOfSale],[ContractStartDate],[ContractEndDate],
          [EnName],[State],[JobState],[IsActive],[IsAttendance],[PhotoPath],[CreatedUser],[CreatedTime],[ModifiedUser],[ModifiedTime])
          VALUES(@EmployeeID,(select CompanyID from hr_Department where DeptID=@DeptID),@DeptID,@JobID,@UserID,@Name,@Sex,@CardNo,@Birthday,@Nation,@Marriage,@Politics,@Native,@RegisterAddress,@Health,@Weight,@Height,
          @LiveAddress,@Telephone,@Mobiphone,@Education,@HireDate,@Email,@Pemail,@CardID,@ImoID,@ExtNum,@EduName,@Major,@FirstWorkDate,
          @EduEndDate,@Convention,@ConventionStartDate,@ConventionEndDate,@ContractOfSale,@ContractStartDate,@ContractEndDate,
          @EnName,@State,@JobState,@IsActive,@attendance,@PhotoPath,@CreatedUser,@CreatedTime,@ModifiedUser,@ModifiedTime);
          if @@error&lt;&gt;0 --判断如果两条语句有任何一条出现错误
          begin
          rollback tran --开始执行事务的回滚，恢复的转账开始之前状态
          end
          else   --如何两条都执行成功
          begin
          commit tran 执行这个事务的操作
          end
          SELECT EmployeeID,c.Name+'-'+b.Name as DeptName,d.Name as JobName,a.Name,Sex,CardNo,
          CONVERT(nvarchar(20),Birthday) as Birthday,
          Nation,Marriage,Politics,Native,RegisterAddress,Health,LiveAddress,MobiPhone,Education,
          CONVERT(nvarchar(20),HireDate) as HireDate,
          CONVERT(nvarchar(20),Terminate) as Terminate,
          CONVERT(nvarchar(20),HireDate) as HireDate,a.[AutoKey],
          isnull(e.UserName,'无') as UserName,
          case e.IsValid when 0 then '停用' when 1 then '启用' else '无' end  as IsValid
          FROM [hr_Employee] a
          left join hr_Department b on a.DeptID=b.DeptID
          left join hr_Company c on b.CompanyID=c.CompanyID
          left join hr_Job d on a.JobID=d.JobID
          left join sys_User e on a.UserID=e.UserID
          WHERE a.[AutoKey]=scope_identity();
          end
        </Sql>
        <Sql Name="Query" ConnectionName="Auth" Description="Query">
          SELECT EmployeeID,c.Name+'-'+b.Name as DeptName,d.Name as JobName,a.Name,Sex,CardNo,
          CONVERT(nvarchar(20),Birthday) as Birthday,
          Nation,Marriage,Politics,Native,RegisterAddress,Health,LiveAddress,MobiPhone,Education,
          CONVERT(nvarchar(20),HireDate) as HireDate,
          CONVERT(nvarchar(20),Terminate) as Terminate,
          CONVERT(nvarchar(20),HireDate) as HireDate,a.[AutoKey],
          isnull(e.UserName,'无') as UserName,
          case e.IsValid when 0 then '停用' when 1 then '启用' else '无' end  as IsValid
          FROM
          (SELECT e2.* FROM [hr_Employee] e2 join fun_sys_GetUserDepartments(@UserID) g2 on e2.DeptID=g2.DeptID) a
          left join hr_Department b on a.DeptID=b.DeptID
          left join hr_Company c on b.CompanyID=c.CompanyID
          left join hr_Job d on a.JobID=d.JobID
          left join sys_User e on a.UserID=e.UserID
          WHERE (a.Name like '%'+@Key+'%' or CardNo like '%'+@Key+'%' or Telephone like '%'+@Key+'%') and (a.DeptID like '%'+@DeptID+'%' or c.CompanyID like '%'+@DeptID+'%') and a.JobID like '%'+@JobID+'%' and a.CompanyID like '%'+@CompanyID+'%'
        </Sql>
        <Sql Name="Delete" ConnectionName="Auth" Description="Delete">
          declare @sql varchar(max);
          set @sql ='
          declare @n bit
          set @n=0
          select TOP 1 @n=1 from [dbo].[hr_Employee]
          where [EmployeeID] in ('''+replace(@EmployeeIDs,',',''',''')+''')   AND [JobState]='''+'在职'+'''
          IF @n=0
          BEGIN
          UPDATE [hr_Employee]
          SET [ModifiedUser]='''+@ModifiedUser+''',[ModifiedTime]='''+@ModifiedTime+''',[IsActive]=0 WHERE [EmployeeID] in ('''+replace(@EmployeeIDs,',',''',''')+''') ;
          END
          ELSE
          BEGIN
          RAISERROR ('''+'员工在职状态，无法删除'+''' ,15, 1) WITH NOWAIT
          END';
          exec(@sql);
        </Sql>
        <Sql Name="GetItem" ConnectionName="Auth" Description="GetItem">
          select a.[EmployeeID]
          ,a.[CompanyID]
          ,a.[DeptID]
          ,a.[JobID]
          ,a.[UserID]
          ,a.[Name]
          ,a.[Sex]
          ,a.[CardNo]
          ,replace(convert(date,a.Birthday,20),'1900-01-01','') as Birthday
          ,a.[Nation]
          ,a.[Marriage]
          ,a.[Politics]
          ,a.[Country]
          ,a.[NativeProvince]
          ,a.[NativeCounty]
          ,a.[Native]
          ,a.[RegisterAddress]
          ,a.[Health]
          ,a.[LiveAddress]
          ,a.[MobiPhone]
          ,a.[Telephone]
          ,a.[EmergencyContact]
          ,a.[EmergencyContactTel]
          ,a.[Education]
          ,a.[InsuranceNo]
          ,replace(convert(date,a.HireDate,20),'1900-01-01','') as HireDate
          ,replace(convert(date,a.RegularDate,20),'1900-01-01','') as RegularDate
          ,replace(convert(date,a.Terminate,20),'1900-01-01','') as Terminate
          ,a.[Email]
          ,a.[Pemail]
          ,a.[ZpFrom]
          ,a.[CardID]
          ,a.[ImoID]
          ,a.[ExtNum]
          ,a.[EduName]
          ,a.[Major]
          ,replace(convert(date,a.EduEndDate,20),'1900-01-01','') as EduEndDate
          ,a.[Convention]
          ,a.[SocialSecurity]
          ,a.[ContractOfSale]
          ,replace(convert(date,a.ConventionStartDate,20),'1900-01-01','') as ConventionStartDate
          ,replace(convert(date,a.ConventionEndDate,20),'1900-01-01','') as ConventionEndDate
          ,replace(convert(date,a.ContractStartDate,20),'1900-01-01','') as ContractStartDate
          ,replace(convert(date,a.ContractEndDate,20),'1900-01-01','') as ContractEndDate
          ,a.[EnName]
          ,a.[State]
          ,a.[JobState]
          ,a.[IsActive]
          ,a.[IsAttendance]
          ,a.[PhotoPath]
          ,a.[Height]
          ,a.[Weight]
          ,replace(convert(date,a.FirstWorkDate,20),'1900-01-01','') as FirstWorkDate
          ,Isnull(d.JC,c.Name)+'-'+b.Name as DeptName
          ,c.Name as JobName
          ,d.Name as CompanyName
          from hr_Employee a
          left join hr_Department b on a.DeptID=b.DeptID
          left join hr_Job c on a.JobID=c.JobID
          left join hr_Company d on b.CompanyID=d.CompanyID
          where EmployeeID=@EmployeeID
        </Sql>
        <Sql Name="Update" ConnectionName="Auth" Description="更新">

          if exists(select * from hr_Employee where [CardNo]=@CardNo and IsActive=1 and [EmployeeID]!=@EmployeeID)
          begin
          RAISERROR ('已经存在相同身份证号，无法保存！',15, 1) WITH NOWAIT
          end
          else if  exists(select * from hr_Employee where  [CardID]=@CardID and IsActive=1 and [EmployeeID]!=@EmployeeID)
          begin
          raiserror('已经存在相同卡号，无法保存！',16,1) with nowait
          end
          else if  exists(select * from hr_Employee where [ImoID]=@ImoID and IsActive=1 and [EmployeeID]!=@EmployeeID)
          begin
          raiserror('已经存在相同IMO，无法保存！',16,1) with nowait
          end
          else if  exists(select * from hr_Employee where  [Email]=@Email and IsActive=1 and [EmployeeID]!=@EmployeeID)
          begin
          raiserror('已经存在相同公司邮箱，无法保存！',16,1) with nowait
          end
          else if(DATEDIFF(DAY,GETDATE(),CONVERT(DATE,@Birthday))&gt;0)
          begin
          raiserror('出生日期不能晚于当前日期！',16,1) with nowait
          end
          else if(DATEDIFF(DAY,convert(date,@ConventionStartDate,20),convert(date,@ConventionEndDate,20))&lt;0)
          begin
          raiserror('实习合同终止日期必须大于实习合同起始日期！',16,1) with nowait
          end
          else if(DATEDIFF(DAY,convert(date,@ContractStartDate,20),convert(date,@ContractEndDate,20))&lt;0)
          begin
          raiserror('正式合同终止日期必须大于正式合同起始日期！',16,1) with nowait
          end
          else
          begin
          UPDATE [dbo].[hr_Employee]
          SET [JobID] = @JobID ,[Name] = @Name ,[Sex] = @Sex ,[CardNo] = @CardNo ,[Birthday] = @Birthday ,
          [Nation] = @Nation ,[Marriage] = @Marriage ,[Politics] = @Politics  ,[Native] = @Native ,
          [RegisterAddress] = @RegisterAddress ,[Health] = @Health ,[Weight] = @Weight,[Height] = @Height,[LiveAddress] = @LiveAddress,[Telephone] = @Telephone ,
          [Mobiphone] = @Mobiphone,[Education] = @Education ,[HireDate] = @HireDate ,[Email] = @Email ,[Pemail] = @Pemail ,[CardID] = @CardID  ,[ImoID] = @ImoID ,
          [ExtNum] = @ExtNum ,[EduName] = @EduName  ,[Major] = @Major  ,[FirstWorkDate] =@FirstWorkDate, [IsAttendance]=@IsAttendance,
          [EduEndDate] = @EduEndDate ,[Convention] = @Convention ,[ConventionStartDate] = @ConventionStartDate,[ConventionEndDate] = @ConventionEndDate ,
          [ContractOfSale] = @ContractOfSale ,[ContractStartDate] = @ContractStartDate  ,[ContractEndDate] = @ContractEndDate  ,[EnName] = @EnName ,[State] = @State ,
          [PhotoPath] = @PhotoPath,[ModifiedUser] = @ModifiedUser ,[ModifiedTime] = @ModifiedTime  WHERE [EmployeeID]=@EmployeeID;

          SELECT EmployeeID,c.Name+'-'+b.Name as DeptName,d.Name as JobName,a.Name,Sex,CardNo,
          CONVERT(nvarchar(20),Birthday) as Birthday,
          Nation,Marriage,Politics,Native,RegisterAddress,Health,LiveAddress,MobiPhone,Education,
          CONVERT(nvarchar(20),HireDate) as HireDate,
          CONVERT(nvarchar(20),Terminate) as Terminate,
          CONVERT(nvarchar(20),HireDate) as HireDate,a.[AutoKey],
          isnull(e.UserName,'无') as UserName,
          case e.IsValid when 0 then '停用' when 1 then '启用' else '无' end  as IsValid
          FROM [hr_Employee] a
          left join hr_Department b on a.DeptID=b.DeptID
          left join hr_Company c on b.CompanyID=c.CompanyID
          left join hr_Job d on a.JobID=d.JobID
          left join sys_User e on a.UserID=e.UserID
          WHERE [EmployeeID]=@EmployeeID;
          end
        </Sql>
        <Sql Name="GetUserAndDept" ConnectionName="Auth" Description="GetUserAndDept">
          SELECT d.[DeptID]
          ,d.[Name] as DeptName,e.UserID,e.Name as UserName
          FROM [dbo].hr_Employee e inner join [dbo].[hr_Department] d on d.DeptID=e.DeptID
          where d.DeptID= (select d.DeptID from [dbo].[hr_Employee]
          where [UserID]=@UserID and e.UserID=@UserID)
        </Sql>
        <Sql Name="GetManager" SharedName="GetManager" ConnectionName="Auth" Description="GetManager">
          SELECT distinct b.Name,b.DeptID as ID,case when b.ParentID='' then b.CompanyID else b.ParentID end as PID,b.SortID FROM [dbo].hr_Employee a
          left join [dbo].hr_Department b on a.DeptID=b.DeptID where b.CompanyID=@CompanyID  and b.IsActive=1 union
          SELECT Name,EmployeeID,DeptID,'' FROM [dbo].hr_Employee where IsActive=1  union
          SELECT JC,CompanyID,'000000','' from [hr_Company] where [CompanyID]=@CompanyID union
          SELECT ' 无','','000000',0 order by b.SortID
        </Sql>
        <Sql Name="GetEmployees" ConnectionName="Auth" Description="GetEmployees">
          select [Name] as text,[CardID] as id from [hr_Employee]
        </Sql>
        <Sql Name="GetEmployessByDeptID" ConnectionName="Auth" Description="GetEmployessByDeptID">
          select [Name] as text,[CardID] as id from [hr_Employee]
          where DeptID=@DeptID
        </Sql>
        <Sql Name="GetEmployeeEducation" ConnectionName="Auth" Description="获取教育经历">
          SELECT [EduID],[EmployeeID],[EduDegree],[EduName], CONVERT(nvarchar(20),[StartDate]) as [StartDate],CONVERT(nvarchar(20),[EndDate]) as [EndDate],[Major],[Certificate],[EduType] FROM [hr_EmployeeEducation]  WHERE EmployeeID = @EmployeeID
        </Sql>
        <Sql Name="UpdateEducation" ConnectionName="Auth" Description="更新教育经历">
          if(@DeleteCheck='on')
          begin
          DELETE FROM [hr_EmployeeEducation] WHERE EduID=@EduID
          raiserror('删除成功！',16,1) with nowait
          end
          else
          begin
          if(len(@EduID)&gt;0)
          begin
          if exists(select * from [hr_EmployeeEducation] where [EmployeeID]=@EmployeeID and [EduName]=@EduName and [Major] = @Major and [EduID] != @EduID)
          begin
          RAISERROR ('已经存在相同信息，无法保存！',15, 1) WITH NOWAIT
          end
          else
          begin
          if(CONVERT(nvarchar(20),CONVERT(datetime,@StartDate),23)&gt;CONVERT(nvarchar(20),CONVERT(datetime,@EndDate),23))
          begin
          raiserror('结束日期时间不能早于起始日期',16,1) with nowait
          end
          else
          begin
          UPDATE [hr_EmployeeEducation] SET [EduDegree]=@EduDegree,[EduName]=@EduName,[StartDate]=@StartDate,[EndDate]=@EndDate,[Major]=@Major,[Certificate]=@Certificate,[EduType]=@EduType,[ModifiedUser]=@ModifiedUser,[ModifiedTime]=@ModifiedTime WHERE [EduID]=@EduID;
          raiserror('更新成功！',16,1) with nowait
          end
          end
          end
          else
          begin
          if exists(select * from [hr_EmployeeEducation] where [EmployeeID] = @EmployeeID and [EduName]=@EduName and [Major]=@Major)
          begin
          RAISERROR ('已经存在相同信息，无法保存！',15, 1) WITH NOWAIT
          end
          else
          begin
          if(CONVERT(nvarchar(20),CONVERT(datetime,@StartDate),23)&gt;CONVERT(nvarchar(20),CONVERT(datetime,@EndDate),23))
          begin
          raiserror('结束日期时间不能早于起始日期',16,1) with nowait
          end
          else
          begin
          exec sp_CreateSerialCode 'EmpEduID','E',6,@EduID output
          INSERT INTO [hr_EmployeeEducation]
          ([EduID],[EmployeeID],[EduDegree],[EduName],[StartDate],[EndDate],[Major],[Certificate],[EduType],[CreatedUser],[CreatedTime],[ModifiedUser],[ModifiedTime])
          VALUES(@EduID,@EmployeeID,@EduDegree,@EduName,@StartDate,@EndDate,@Major,@Certificate,@EduType,@CreatedUser,@CreatedTime,@ModifiedUser,@ModifiedTime);
          raiserror('新增成功！',16,1) with nowait
          end
          end
          end
          end
        </Sql>
        <Sql Name="GetEmployeeJob" ConnectionName="Auth" Description="获取工作经历">
          SELECT [EjbID],[EmployeeID],[CompanyName],[DepartmentName],[Position], CONVERT(nvarchar(20),[StartDate])as [StartDate],CONVERT(nvarchar(20),[EndDate]) as [EndDate],[ManagerName],[ManagerPhone],[LeaveReson]  FROM [hr_EmployeeJob] WHERE [EmployeeID]= @EmployeeID
        </Sql>
        <Sql Name="UpdateJob" ConnectionName="Auth" Description="更新工作经历">
          if(@DeleteCheck='on')
          begin
          DELETE FROM [hr_EmployeeJob] WHERE [EjbID]=@EjbID
          raiserror('删除成功！',16,1) with nowait
          end
          else
          begin
          if(len(@EjbID)&gt;0)
          begin
          if exists(select * from [hr_EmployeeJob] where [EmployeeID]=@EmployeeID and [CompanyName]=@CompanyName and [DepartmentName] = @DepartmentName  and [Position] = @Position and [EjbID] != @EjbID)
          begin
          RAISERROR ('已经存在相同信息，无法保存！',15, 1) WITH NOWAIT
          end
          else
          begin
          if(CONVERT(nvarchar(20),CONVERT(datetime,@StartDate),23)&gt;CONVERT(nvarchar(20),CONVERT(datetime,@EndDate),23))
          begin
          raiserror('结束日期时间不能早于起始日期',16,1) with nowait
          end
          else
          begin
          UPDATE [hr_EmployeeJob] SET [CompanyName]=@CompanyName,[DepartmentName]=@DepartmentName,[Position]=@Position,[StartDate]=@StartDate,[EndDate]=@EndDate,[ManagerName]=@ManagerName,[ManagerPhone]=@ManagerPhone,[LeaveReson]=@LeaveReson,[ModifiedUser]=@ModifiedUser,[ModifiedTime]=@ModifiedTime WHERE [EjbID]=@EjbID;
          raiserror('更新成功！',16,1) with nowait
          end
          end
          end
          else
          begin
          if exists(select * from [hr_EmployeeJob] where [EmployeeID]=@EmployeeID and [CompanyName]=@CompanyName and [DepartmentName] = @DepartmentName  and [Position] = @Position)
          begin
          RAISERROR ('已经存在相同信息，无法保存！',15, 1) WITH NOWAIT
          end
          else
          begin
          if(CONVERT(nvarchar(20),CONVERT(datetime,@StartDate),23)&gt;CONVERT(nvarchar(20),CONVERT(datetime,@EndDate),23))
          begin
          raiserror('结束日期时间不能早于起始日期',16,1) with nowait
          end
          else
          begin
          exec sp_CreateSerialCode 'EmpJobID','E',6,@EjbID output
          INSERT INTO [hr_EmployeeJob]
          ([EjbID],[EmployeeID],[CompanyName],[DepartmentName],[Position],[StartDate],[EndDate],[ManagerName],[ManagerPhone],[LeaveReson],[CreatedUser],[CreatedTime],[ModifiedUser],[ModifiedTime])
          VALUES(@EjbID,@EmployeeID,@CompanyName,@DepartmentName,@Position,@StartDate,@EndDate,@ManagerName,@ManagerPhone,@LeaveReson,@CreatedUser,@CreatedTime,@ModifiedUser,@ModifiedTime);
          raiserror('新增成功！',16,1) with nowait
          end
          end
          end
          end
        </Sql>
        <Sql Name="GetEmployeeSkill" ConnectionName="Auth" Description="获取职业技能">
          SELECT [Esid],[EmployeeID],[SkillUnit],[SkillName],CONVERT(nvarchar(20),[StartDate])as [StartDate],CONVERT(nvarchar(20),[EndDate])as [EndDate],[Certificate],[CreatedUser],[CreatedTime],[ModifiedUser],[ModifiedTime],[AutoKey] FROM [hr_EmployeeSkill]
          WHERE [EmployeeID]=@EmployeeID;
        </Sql>
        <Sql Name="UpdateSkill" ConnectionName="Auth" Description="更新职业技能">
          if(@DeleteCheck='on')
          begin
          DELETE FROM [hr_EmployeeSkill] WHERE Esid=@Esid
          raiserror('删除成功！',16,1) with nowait
          end
          else
          begin
          if(len(@Esid)&gt;0)
          begin
          if exists(select * from [hr_EmployeeSkill] where [EmployeeID]=@EmployeeID and [SkillUnit]=@SkillUnit and [SkillName] = @SkillName and [Certificate]=@Certificate and [Esid] != @Esid)
          begin
          RAISERROR ('已经存在相同信息，无法保存！',15, 1) WITH NOWAIT
          end
          else
          begin
          if(CONVERT(nvarchar(20),CONVERT(datetime,@StartDate),23)&gt;CONVERT(nvarchar(20),CONVERT(datetime,@EndDate),23))
          begin
          raiserror('结束日期时间不能早于起始日期',16,1) with nowait
          end
          else
          begin
          UPDATE [hr_EmployeeSkill] SET [SkillUnit]=@SkillUnit,[SkillName]=@SkillName,[StartDate]=@StartDate,[EndDate]=@EndDate,[Certificate]=@Certificate,[ModifiedUser]=@ModifiedUser,[ModifiedTime]=@ModifiedTime WHERE [Esid]=@Esid;
          raiserror('更新成功！',16,1) with nowait
          end
          end
          end
          else
          begin
          if exists(select * from [hr_EmployeeSkill] where [EmployeeID]=@EmployeeID and [SkillUnit]=@SkillUnit and [SkillName] = @SkillName and [Certificate]=@Certificate)
          begin
          RAISERROR ('已经存在相同信息，无法保存！',15, 1) WITH NOWAIT
          end
          else
          begin
          if(CONVERT(nvarchar(20),CONVERT(datetime,@StartDate),23)&gt;CONVERT(nvarchar(20),CONVERT(datetime,@EndDate),23))
          begin
          raiserror('结束日期时间不能早于起始日期',16,1) with nowait
          end
          else
          begin
          exec sp_CreateSerialCode 'Es','E',6,@Esid output  INSERT INTO [hr_EmployeeSkill]
          ([Esid],[EmployeeID],[SkillUnit],[SkillName],[StartDate],[EndDate],[Certificate],[CreatedUser],[CreatedTime],[ModifiedUser],[ModifiedTime])
          VALUES(@Esid,@EmployeeID,@SkillUnit,@SkillName,@StartDate,@EndDate,@Certificate,@CreatedUser,@CreatedTime,@ModifiedUser,@ModifiedTime);
          raiserror('新增成功！',16,1) with nowait
          end
          end
          end
          end
        </Sql>
        <Sql Name="GetEmployeeFamilie" ConnectionName="Auth" Description="获取社会关系">
          SELECT [FamID],[EmployeeID],[Title],[Name],[Age],[WordUnit],case when ([IsDie]=0) then '殆' when  ([IsDie]=1)  then '存' end as [IsDie],[MobiPhone],case when ([IsMaster]=0) then '否' when  ([IsMaster]=1)  then '是' end as [IsMaster],[CreatedUser],[CreatedTime],[ModifiedUser],[ModifiedTime],[AutoKey] FROM [hr_EmployeeFamilie]
          WHERE [EmployeeID]=@EmployeeID;
        </Sql>
        <Sql Name="UpdateFamielie" ConnectionName="Auth" Description="更新社会关系">
          if(@DeleteCheck='on')
          begin
          DELETE FROM [hr_EmployeeFamilie] WHERE FamID=@FamID
          raiserror('删除成功！',16,1) with nowait
          end
          else
          begin
          if(@IsMaster='on')
          begin
          set @IsMaster=1
          end
          else
          begin
          set @IsMaster=0
          end
          if(len(@FamID)&gt;0)
          begin
          if exists(select * from [hr_EmployeeFamilie] where [EmployeeID]=@EmployeeID and [Title]=@Title and [Name] = @Name and [FamID] != @FamID)
          begin
          RAISERROR ('已经存在相同信息，无法保存！',15, 1) WITH NOWAIT
          end
          else
          begin
          UPDATE [hr_EmployeeFamilie]  SET  [FamID]=@FamID,[EmployeeID]=@EmployeeID,[Title]=@Title,[Name]=@Name,[Age]=@Age,[WordUnit]=@WordUnit,[IsDie]=@IsDie,[MobiPhone]=@MobiPhone,[IsMaster]=@IsMaster,[ModifiedUser]=@ModifiedUser,[ModifiedTime]=@ModifiedTime WHERE [FamID]=@FamID;
          raiserror('更新成功！',16,1) with nowait
          end
          end
          else
          begin
          if exists(select * from [hr_EmployeeFamilie]  where [EmployeeID]=@EmployeeID and [Title]=@Title and [Name] = @Name and [FamID] != @FamID)
          begin
          RAISERROR ('已经存在相同信息，无法保存！',15, 1) WITH NOWAIT
          end
          else
          begin
          exec sp_CreateSerialCode 'Fam','F',6,@FamID output   INSERT INTO [hr_EmployeeFamilie]
          ([FamID],[EmployeeID],[Title],[Name],[Age],[WordUnit],[IsDie],[MobiPhone],[IsMaster],[CreatedUser],[CreatedTime],[ModifiedUser],[ModifiedTime])
          VALUES(@FamID,@EmployeeID,@Title,@Name,@Age,@WordUnit,@IsDie,@MobiPhone,@IsMaster,@CreatedUser,@CreatedTime,@ModifiedUser,@ModifiedTime);
          raiserror('新增成功！',16,1) with nowait
          end
          end
          end
        </Sql>
        <Sql Name="GetEmployeeOther" ConnectionName="Auth" Description="获取其他">
          SELECT [Eoid],[EmployeeID],[RecruitingSources],case when ([IsEmploy]=0) then '否' when  ([IsEmploy]=1)  then '是' end as [IsEmploy],[EmployWorkUnit]  ,CONVERT(varchar(20),WorkDateBeg, 23)[WorkDateBeg],CONVERT(varchar(20),WorkDateEnd, 23)[WorkDateEnd],case when ([IsSponsor]=0) then '否' when  ([IsSponsor]=1)  then '是' end as [IsSponsor],[Sponsor],[Relation],[WorkUnit],[MedicalHistory],case when ([IsCrime]=0) then '否' when  ([IsCrime]=1)  then '是' end as [IsCrime],CONVERT(varchar(20),CrimeDateBeg, 23)[CrimeDateBeg],CONVERT(varchar(20),CrimeDateEnd, 23)[CrimeDateEnd],[CrimeReason]
          FROM [hr_EmployeeOther]
          WHERE [EmployeeID]=@EmployeeID
        </Sql>
        <Sql Name="UpdateOther" ConnectionName="Auth" Description="更新其他">
          if(@DeleteCheck='on')
          begin
          DELETE FROM [hr_EmployeeOther] WHERE Eoid=@Eoid
          raiserror('删除成功！',16,1) with nowait
          end
          else
          begin
          if(len(@Eoid)&gt;0)
          begin
          if exists(select * from [hr_EmployeeOther] where [EmployeeID]=@EmployeeID and [Eoid] != @Eoid)
          begin
          RAISERROR ('已经存在相同信息，无法保存！',15, 1) WITH NOWAIT
          end
          else
          begin
          UPDATE [hr_EmployeeOther]
          SET [RecruitingSources]=@RecruitingSources,[IsEmploy]=@IsEmploy,[EmployWorkUnit]=@EmployWorkUnit,[WorkDateBeg]=@WorkDateBeg,[WorkDateEnd]=@WorkDateEnd,[IsSponsor]=@IsSponsor,[Sponsor]=@Sponsor,[Relation]=@Relation,[WorkUnit]=@WorkUnit,[MedicalHistory]=@MedicalHistory,[IsCrime]=@IsCrime,[CrimeDateBeg]=@CrimeDateBeg,[CrimeDateEnd]=@CrimeDateEnd,[CrimeReason]=@CrimeReason,[ModifiedUser]=@ModifiedUser,[ModifiedTime]=@ModifiedTime WHERE [Eoid]=@Eoid;
          raiserror('更新成功！',16,1) with nowait
          end
          end
          else
          begin
          if exists(select * from [hr_EmployeeOther]  where [EmployeeID]=@EmployeeID)
          begin
          RAISERROR ('已经存在相同信息，无法保存！',15, 1) WITH NOWAIT
          end
          else
          begin
          exec sp_CreateSerialCode 'Eoid','E',6,@Eoid output
          INSERT INTO [hr_EmployeeOther]
          ([Eoid],[EmployeeID],[RecruitingSources],[IsEmploy],[EmployWorkUnit],[WorkDateBeg],[WorkDateEnd],[IsSponsor],[Sponsor],[Relation],[WorkUnit],[MedicalHistory],[IsCrime],[CrimeDateBeg],[CrimeDateEnd],[CrimeReason],[CreatedUser],[CreatedTime],[ModifiedUser],[ModifiedTime])
          VALUES(@Eoid,@EmployeeID,@RecruitingSources,@IsEmploy,@EmployWorkUnit,@WorkDateBeg,@WorkDateEnd,@IsSponsor,@Sponsor,@Relation,@WorkUnit,@MedicalHistory,@IsCrime,@CrimeDateBeg,@CrimeDateEnd,@CrimeReason,@CreatedUser,@CreatedTime,@ModifiedUser,@ModifiedTime);
          raiserror('新增成功！',16,1) with nowait
          end
          end
          end
        </Sql>
        <Sql Name="GetEmployeeByUserID" ConnectionName="Auth" Description="根据用户ID获取员工信息">
          declare @EID varchar(6)
          select @EID=EmployeeID from [hr_Employee] where UserID=@UserID
          SELECT a.*,b.Name as DeptName,c.Name as JobName from hr_Employee a
          FROM [hr_Employee] a
          left join hr_Department b on a.DeptID=b.DeptID
          left join hr_Job c on a.JobID=c.JobID
          WHERE EmployeeID=@EID;
        </Sql>
        <Sql Name="GetEditEmployeeByUserID" ConnectionName="Auth" Description="根据用户ID获取员工编辑信息">
          select a.*,b.Name as DeptName,c.Name as JobName from hr_Employee a
          left join hr_Department b on a.DeptID=b.DeptID
          left join hr_Job c on a.JobID=c.JobID
          where EmployeeID=@EmployeeID
        </Sql>
        <Sql Name="UpdateEmployeeByUserID" ConnectionName="Auth" Description="根据用户ID更新员工信息">
          declare @i int
          select @i=count(*) from hr_Employee where Name =@Name and IsActive=1 and DeptID=@DeptID and JobID=@JobID;
          if(@i&gt;0)
          begin
          RAISERROR ('添加员工的信息已存在',15, 1) WITH NOWAIT
          end
          else
          begin
          UPDATE [dbo].[hr_Employee]
          SET [DeptID] = @DeptID ,[JobID] = @JobID  ,[Name] = @Name ,[Sex] = @Sex ,[CardNo] = @CardNo ,[Birthday] = @Birthday ,[Nation] = @Nation ,[Marriage] = @Marriage ,[Politics] = @Politics  ,[Country] = @Country ,[NativeProvince] = @NativeProvince ,[NativeCounty] = @NativeCounty ,[RegisterAddress] = @RegisterAddress ,[Health] = @Health ,[LiveAddress] = @LiveAddress,[Telephone] = @Telephone ,[EmergencyContact] = @EmergencyContact  ,[EmergencyContactTel] = @EmergencyContactTel ,[Education] = @Education ,[InsuranceNo] = @InsuranceNo ,[HireDate] = @HireDate ,[RegularDate] = @RegularDate ,[Terminate] = @Terminate ,[Email] = @Email ,[CardID] = @CardID  ,[ImoID] = @ImoID ,[ExtNum] = @ExtNum ,[EduName] = @EduName  ,[Major] = @Major  ,[EduEndDate] = @EduEndDate ,[Convention] = @Convention ,[SocialSecurity] = @SocialSecurity ,[ContractOfSale] = @ContractOfSale ,[ConventionEndDate] = @ConventionEndDate  ,[ContractEndDate] = @ContractEndDate  ,[EnName] = @EnName ,[State] = @State ,[JobState] = @JobState ,[PhotoPath] = @PhotoPath,[CreatedUser] = @CreatedUser ,[CreatedTime] = @CreatedTime  ,[ModifiedUser] = @ModifiedUser ,[ModifiedTime] = @ModifiedTime  WHERE [EmployeeID]=@EmployeeID;
          SELECT b.Name as DeptName,c.Name as JobName,a.Name,Sex,CardNo,CONVERT(nvarchar(20),Birthday) as Birthday,Nation,Marriage,Politics,NativeProvince,RegisterAddress,Health,LiveAddress,Telephone,Education,InsuranceNo,CONVERT(nvarchar(20),HireDate) as HireDate,CONVERT(nvarchar(20),Terminate) as Terminate,CONVERT(nvarchar(20),HireDate) as HireDate,a.[AutoKey]
          FROM [hr_Employee] a
          left join hr_Department b on a.DeptID=b.DeptID
          left join hr_Job c on a.JobID=c.JobID
          where [EmployeeID]=@EmployeeID;
          end
        </Sql>
        <Sql Name="GetSameDept" SharedName="GetSameDeptEmp" ConnectionName="Auth" Description="获取相同部门">
          SELECT a.[EmployeeID] as [ID],a.[Name]
          FROM [hr_Employee] a join [hr_Employee] b
          on a.DeptID=b.DeptID where a.UserID!=b.UserID
          and b.UserID=@UserID
        </Sql>
        <Sql Name="GetEmpByDeptAndJob" SharedName="GetEmpByDeptAndJob" ConnectionName="Auth" Description="根据部门、职位取员工">
          select EmployeeID as ID,Name from hr_Employee where DeptID  like '%'+@DeptID+'%'  and JobID like '%'+@JobID+'%' and IsActive=1 order by Name
        </Sql>
        <Sql Name="GetMyInfo" ConnectionName="Auth" Description="获取个人基本信息">
          select a.[EmployeeID]
          ,a.[CompanyID]
          ,a.[DeptID]
          ,a.[JobID]
          ,a.[UserID]
          ,a.[Name]
          ,a.[Sex]
          ,a.[CardNo]
          ,replace(convert(date,a.Birthday,20),'1900-01-01','') as Birthday
          ,a.[Nation]
          ,a.[Marriage]
          ,a.[Politics]
          ,a.[Country]
          ,a.[NativeProvince]
          ,a.[NativeCounty]
          ,a.[Native]
          ,a.[RegisterAddress]
          ,a.[Health]
          ,a.[LiveAddress]
          ,a.[MobiPhone]
          ,a.[Telephone]
          ,a.[EmergencyContact]
          ,a.[EmergencyContactTel]
          ,a.[Education]
          ,a.[InsuranceNo]
          ,replace(convert(date,a.HireDate,20),'1900-01-01','') as HireDate
          ,replace(convert(date,a.RegularDate,20),'1900-01-01','') as RegularDate
          ,replace(convert(date,a.Terminate,20),'1900-01-01','') as Terminate
          ,a.[Email]
          ,a.[Pemail]
          ,a.[ZpFrom]
          ,a.[CardID]
          ,a.[ImoID]
          ,a.[ExtNum]
          ,a.[EduName]
          ,a.[Major]
          ,replace(convert(date,a.EduEndDate,20),'1900-01-01','') as EduEndDate
          ,a.[Convention]
          ,a.[SocialSecurity]
          ,a.[ContractOfSale]
          ,replace(convert(date,a.ConventionStartDate,20),'1900-01-01','') as ConventionStartDate
          ,replace(convert(date,a.ConventionEndDate,20),'1900-01-01','') as ConventionEndDate
          ,replace(convert(date,a.ContractStartDate,20),'1900-01-01','') as ContractStartDate
          ,replace(convert(date,a.ContractEndDate,20),'1900-01-01','') as ContractEndDate
          ,a.[EnName]
          ,a.[State]
          ,a.[JobState]
          ,a.[IsActive]
          ,a.[IsAttendance]
          ,a.[PhotoPath]
          ,a.[Height]
          ,a.[Weight]
          ,replace(convert(date,a.FirstWorkDate,20),'1900-01-01','') as FirstWorkDate
          ,b.Name as DeptName
          ,c.Name as JobName
          ,d.Name as CompanyName
          from hr_Employee a
          left join hr_Department b on a.DeptID=b.DeptID
          left join hr_Job c on a.JobID=c.JobID
          left join hr_Company d on b.CompanyID=d.CompanyID
          WHERE EmployeeID=(select EmployeeID from [hr_Employee] where UserID=@UserID)
        </Sql>
        <Sql Name="UpdateMyInfo" ConnectionName="Auth" Description="更新个人基本信息">
          UPDATE [hr_Employee]
          SET  [EnName]=@EnName,[Politics]=@Politics,[Marriage]=@Marriage,[Height]=@Height,[Weight]=@Weight,[LiveAddress]=@LiveAddress,[Education]=@Education,[EduName]=@EduName,[Major]=@Major,[MobiPhone]=@MobiPhone,[Pemail]=@Pemail,[Telephone]=@Telephone,[ExtNum]=@ExtNum,[ModifiedUser] = @ModifiedUser ,[ModifiedTime] = @ModifiedTime,[PhotoPath] = @PhotoPath WHERE [EmployeeID]=@EmployeeID;
        </Sql>
        <Sql Name="GetEmpByCmp" SharedName="GetEmpByCmp" ConnectionName="Auth" Description="根据公司获取员工">
          select EmployeeID as ID,Name from hr_Employee where CompanyID=@CompanyID order by Name
        </Sql>
        <Sql Name="GetEmpTreeByCmp" SharedName="GetEmpTreeByCmp" ConnectionName="Auth" Description="根据公司获取员工部门树">
select  Name,DeptID as ID,ParentID as PID  from fun_sys_GetUserDepartments(@UserID)
union select e.Name,e.EmployeeID,e.DeptID from hr_Employee e join fun_sys_GetUserDepartments(@UserID)d on e.DeptID=d.DeptID where e.IsActive=1
union select Name,CompanyID,'000000' from hr_Company where CompanyID like '%'+@CompanyID+'%' order by PID
        </Sql>
		  <Sql Name="GetAllEmpTree" SharedName="GetAllEmpTree" ConnectionName="Auth" Description="获取所有员工公司部门树（无权限限制）">
			  select Name,DeptID as ID,IIF(isnull(ParentID,'')='',CompanyID,ParentID) as PID  from  hr_Department where IsActive=1
			  union select Name,EmployeeID,DeptID from hr_Employee where IsActive=1
			  union select JC,CompanyID,'000000' from hr_Company where IsActive=1
		  </Sql>
        <Sql Name="GetEmpWithoutUserByCmp" SharedName="GetEmpWithoutUserByCmp" ConnectionName="Auth" Description="根据公司获取没有系统账号的员工">
          select a.Name,a.EmployeeID as ID,a.DeptID as PID from hr_Employee a left join sys_User b on a.UserID=b.UserID where b.UserName is null and a.IsActive=1 union select a.Name,a.DeptID,a.ParentID from hr_Department a where CompanyID like '%'+@CompanyID+'%' and a.IsActive=1 order by Name
        </Sql>
        <Sql Name="GetSameDeptWithoutMe" SharedName="GetSameDeptWithoutMe" ConnectionName="Auth" Description="获取同部门的其他员工（不包含自己）">
          select EmployeeID as ID,Name from [hr_Employee] where DeptID=@DeptID  AND EmployeeID &lt;&gt; @EmployeeID
        </Sql>
        <Sql Name="GetEmailByEmp" ConnectionName="Auth" Description="获取员工公司邮箱">select a.EmployeeID,a.Name,a.Email,b.UserName,case b.IsValid when 1 then '1' when 0 then '0' end as IsValid  from hr_Employee a left join sys_User b on  a.UserID=b.UserID  where  a.EmployeeID=@EmployeeID</Sql>
        <Sql Name="QueryCount" ConnectionName="Auth" Description="查询总数">
          SELECT count(*) FROM (SELECT e2.* FROM [hr_Employee] e2 join fun_sys_GetUserDepartments(@UserID)g2 on e2.DeptID=g2.DeptID)a
          left join hr_Department b on a.DeptID=b.DeptID
          left join hr_Company c on b.CompanyID=c.CompanyID
          left join hr_Job d on a.JobID=d.JobID
          left join sys_User e on a.UserID=e.UserID
          WHERE (a.Name like '%'+@Key+'%' or CardNo like '%'+@Key+'%' or Telephone like '%'+@Key+'%') and (a.DeptID like '%'+@DeptID+'%' or c.CompanyID like '%'+@DeptID+'%') and a.JobID like '%'+@JobID+'%'
        </Sql>
        <Sql Name="QueryPage" ConnectionName="Auth" Description="查询分页">
          SELECT EmployeeID,c.Name+'-'+b.Name as DeptName,d.Name as JobName,a.Name,Sex,CardNo,
          CONVERT(nvarchar(20),Birthday) as Birthday,
          Nation,Marriage,Politics,Native,RegisterAddress,Health,LiveAddress,MobiPhone,Education,
          CONVERT(nvarchar(20),HireDate) as HireDate,
          CONVERT(nvarchar(20),Terminate) as Terminate,
          CONVERT(nvarchar(20),HireDate) as HireDate,a.[AutoKey],
          isnull(e.UserName,'无') as UserName,
          case e.IsValid when 0 then '停用' when 1 then '启用' else '无' end  as IsValid
          FROM (SELECT e2.* FROM [hr_Employee] e2 join fun_sys_GetUserDepartments(@UserID) d1 on e2.DeptID=d1.DeptID)a
          left join hr_Department b on a.DeptID=b.DeptID
          left join hr_Company c on b.CompanyID=c.CompanyID
          left join hr_Job d on a.JobID=d.JobID
          left join sys_User e on a.UserID=e.UserID
          WHERE (a.Name like '%'+@Key+'%' or CardNo like '%'+@Key+'%' or Telephone like '%'+@Key+'%') and (a.DeptID like '%'+@DeptID+'%' or c.CompanyID like '%'+@DeptID+'%') and a.JobID like '%'+@JobID+'%'
          order by a.ModifiedTime desc
          OFFSET ((CAST(@Page as int)-1)*CAST(@Rows as int)) Rows FETCH NEXT CAST(@Rows as int) ROWS ONLY;
        </Sql>
        <Sql Name="GetEmpByCmpOrDept" SharedName="GetEmpByCmpOrDept" ConnectionName="Auth" Description="根据公司、部门取员工">
          select  e.EmployeeID as ID,e.Name from hr_Employee e join fun_sys_GetUserDepartments(@UserID)d on e.DeptID=d.DeptID    
          where (e.DeptID  like '%'+@ID+'%'  or e.CompanyID like '%'+@ID+'%' or d.ParentID  like '%'+@ID+'%') and e.IsActive=1 order by e.Name
        </Sql>
        <Sql Name="GetAllEmployeeByUser" SharedName="GetAllEmployeeByUser" ConnectionName="Auth" Description="根据用户权限获取公司部门员工树">
          select  Name,DeptID as ID,ParentID as PID  from fun_sys_GetUserDepartments(@UserID)
          union
          select e.Name,e.EmployeeID,E.DeptID from hr_Employee e join fun_sys_GetUserDepartments(@UserID)d on e.DeptID=d.DeptID 
        </Sql>
        <Sql Name="SocialSecurityReport" ConnectionName="Auth" Description="社保增补报表">
          select*from(select '转正'as SType,a.DoTime as STime, a.EmployeeID,e.SocialSecurity,a.DeptID,a.CompanyID,e.Name as EmployeeName,d.Name as DeptName,c.Name as CompanyName
          from [hr_Employee] e
          left join  [hr_ConversionForm] a on a.EmployeeID=e.EmployeeID
          left join [hr_Department]d on a.DeptID=d.DeptID
          left join [hr_Company]c on a.CompanyID=c.CompanyID where DoTime is not null
          union
          select '离职' as SType,a.DimissionDate as STime,a.EmployeeID,e.SocialSecurity,a.DeptID,a.CompanyID,e.Name as EmployeeName,d.Name as DeptName ,c.Name as CompanyName
          from [hr_Employee] e
          left join [hr_DimissionForm] a on a.EmployeeID=e.EmployeeID
          left join [hr_Department]d on a.DeptID=d.DeptID
          left join [hr_Company]c on a.CompanyID=c.CompanyID where DimissionDate is not null)A
          where SType like '%'+@SType+'%' and CompanyID =@CompanyID and convert(varchar(7),STime,126)=@YearMonth
        </Sql>
        <Sql Name="EmployeeMessage" ConnectionName="Auth" Description="人事消息通知">
          select a.EmployeeID,c.Name as CompanyName,d.Name as DeptName,a.Name as EmployeeName,a.State,convert(varchar(20),a.HireDate) as HireDate,convert(varchar(20),a.Birthday)as Birthday,convert(varchar(20),a.ContractStartDate)as ContractStartDate,convert(varchar(20),a.ContractEndDate)as ContractEndDate from
          (SELECT e2.* FROM [hr_Employee] e2 join fun_sys_GetUserDepartments(@UserID) g2 on e2.DeptID=g2.DeptID) a
          left join hr_Company c on a.CompanyID=c.CompanyID
          left join hr_Department d on a.DeptID=d.DeptID
          where a.CompanyID like '%'+@CompanyID+'%' and a.DeptID like '%'+@DeptID+'%'
          and (Month(a.Birthday)=Month(convert(datetime,@YearMonth+'-01'))
          or convert(varchar(7),a.ContractEndDate,126)=@YearMonth)
          order by a.Birthday,a.ContractEndDate desc
          OFFSET ((CAST(@Page as int)-1)*CAST(@Rows as int)) Rows FETCH NEXT CAST(@Rows as int) ROWS ONLY;
        </Sql>
        <Sql Name="QueryCountEM" ConnectionName="Auth" Description="人事消息通知总数">
          select count(*) from
          (SELECT e2.* FROM [hr_Employee] e2 join fun_sys_GetUserDepartments(@UserID) g2 on e2.DeptID=g2.DeptID)a
          left join hr_Company c on a.CompanyID=c.CompanyID
          left join hr_Department d on a.DeptID=d.DeptID
          where a.CompanyID like '%'+@CompanyID+'%' and a.DeptID like '%'+@DeptID+'%'
          and (Month(a.Birthday)=Month(convert(datetime,@YearMonth+'-01'))
          or convert(varchar(7),a.ContractEndDate,126)=@YearMonth)
        </Sql>
        <Sql Name="EmployeeMessageDetail" ConnectionName="Auth" Description="人事消息通知详情页">
          select c.Name as CompanyName,d.Name as DeptName,a.Name as EmployeeName,a.State,convert(varchar(20),a.HireDate) as HireDate,convert(varchar(20),a.Birthday)as Birthday,convert(varchar(20),a.ContractStartDate)as ContractStartDate,convert(varchar(20),a.ContractEndDate)as ContractEndDate from
          [hr_Employee]a
          left join hr_Company c on a.CompanyID=c.CompanyID
          left join hr_Department d on a.DeptID=d.DeptID
          where a.EmployeeID=@EmployeeID
        </Sql>
        <Sql Name="EmployeeMessageGetData" ConnectionName="Auth" Description="人事消息通知预加载">
          select a.EmployeeID,c.Name as CompanyName,d.Name as DeptName,a.Name as EmployeeName,a.State,convert(varchar(20),a.HireDate) as HireDate,convert(varchar(20),a.Birthday)as Birthday,convert(varchar(20),a.ContractStartDate)as ContractStartDate,convert(varchar(20),a.ContractEndDate)as ContractEndDate from
          (SELECT e2.* FROM [hr_Employee] e2 join fun_sys_GetUserDepartments(@UserID) g2 on e2.DeptID=g2.DeptID)a
          left join hr_Company c on a.CompanyID=c.CompanyID
          left join hr_Department d on a.DeptID=d.DeptID
          where  (Month(a.Birthday)=Month(getdate())
          or convert(varchar(7),a.ContractEndDate,126)=convert(varchar(7), getdate(), 126))
          order by a.Birthday,a.ContractEndDate desc
        </Sql>
        <Sql Name="QueryCountEMGetData" ConnectionName="Auth" Description="人事消息通知预加载总数">
          select count(*) from
          (SELECT e2.* FROM [hr_Employee] e2 join fun_sys_GetUserDepartments(@UserID) g2 on e2.DeptID=g2.DeptID) a
          left join hr_Company c on a.CompanyID=c.CompanyID
          left join hr_Department d on a.DeptID=d.DeptID
          where  (Month(a.Birthday)=Month(getdate())
          or convert(varchar(7),a.ContractEndDate,126)=convert(varchar(7), getdate(), 126))
        </Sql>
        <Sql Name="GetEmployeeByDepartment" SharedName="GetEmployeeByDepartment" ConnectionName="Auth" Description="获取部门员工">
          SELECT EmployeeID,Name,IIF(hr_Employee.MobiPhone = '', hr_Employee.Telephone, hr_Employee.MobiPhone) Contact
          FROM dbo.hr_Employee
          WHERE DeptID=@DeptID
        </Sql>
        <Sql Name="GetOtherInfo" ConnectionName="Auth" Description="获取 员工的其他信息">select a.EmployeeID,a.Name,b.Name as CompanyName,c.Name as DeptName,d.Name as JobName,e.* from [dbo].[hr_Employee] a 
left join [dbo].[hr_Company] b on a.CompanyID=b.CompanyID
left join [dbo].[hr_Department] c on a.DeptID=c.DeptID
left join [dbo].[hr_Job] d on a.JobID=d.JobID
left join [dbo].[hr_EmployeeOther] e on a.EmployeeID=e.EmployeeID
where a.[EmployeeID]=@EmployeeID</Sql>
      </Table>
      <Table Name="hr_DimissionForm" ConnectionName="Auth" TableName="hr_DimissionForm">
        <Sql Name="Transact" ConnectionName="Auth" Description="办理">
          if(DATEDIFF(DAY,CONVERT(date,@StopSalaryDate),@ApplicationDate)&gt;0)
          begin
          raiserror('离职日期不能早于申请日期',15,1)
          end
          else if(DATEDIFF(DAY,GETDATE(),CONVERT(date,@StopSalaryDate))&gt;0)
          begin
          raiserror('离职日期不能晚于当前日期',15,1)
          end
          else
          begin
          UPDATE [hr_DimissionForm] SET [DimissionType]=@DimissionType, [StopSalaryDate]=@StopSalaryDate,[ModifiedUser]=@ModifiedUser,[ModifiedTime]=@ModifiedTime WHERE [DFID]=@DFID;
          UPDATE [hr_Employee] set State='离职',JobState='离职',Terminate=@StopSalaryDate
          where EmployeeID in (select EmployeeID FROM [hr_DimissionForm] WHERE [DFID]=@DFID)
          UPDATE [sys_User] set IsValid=0 where UserID in (select UserID FROM [hr_Employee] e join [hr_DimissionForm] d on e.EmployeeID=d.EmployeeID WHERE [DFID]=@DFID)
          SELECT [DFID],aa.[EmployeeID],aa.[DeptID],CONVERT(varchar(20), aa.[HireDate]) as [HireDate],aa.[JobID],a.[Telephone] as [Tel],CONVERT(varchar(20),[ApplicationDate]) as [ApplicationDate],
          CONVERT(varchar(20),[DimissionDate]) as [DimissionDate],[DimissionType],CONVERT(varchar(20),[StopSalaryDate]) as [StopSalaryDate],[Reason],
          a.Sex,CONVERT(varchar(20),a.Birthday) as Birthday,a.Nation,a.CardID,a.Marriage,
          a.Name as Ename,b.Name as Pname,d.Name+'-'+c.Name as Dname
          FROM [hr_DimissionForm] aa left join hr_Employee a on aa.EmployeeID=a.EmployeeID
          left   join [hr_Job] b on a.JobID=b.JobID
          left   join [hr_Department] c on a.DeptID=c.DeptID
          left   join [hr_Company]  d on c.CompanyID=d.CompanyID
          WHERE [DFID]=@DFID;
          end

        </Sql>
        <Sql Name="Query" ConnectionName="Auth" Description="查询">
          declare @sql varchar(max)
          set @sql='
          SELECT [DFID],aa.[EmployeeID],aa.[DeptID],CONVERT(varchar(20), aa.[HireDate]) as [HireDate],aa.[JobID],a.[Telephone] as [Tel],
          CONVERT(varchar(20),[ApplicationDate]) as [ApplicationDate],
          CONVERT(varchar(20),[DimissionDate]) as [DimissionDate],[DimissionType],
          CONVERT(varchar(20),[StopSalaryDate]) as [StopSalaryDate],[Reason],a.Sex,
          CONVERT(varchar(20),a.Birthday) as Birthday,a.Nation,a.CardID,a.Marriage,a.Name as Ename,b.Name as Pname,d.Name+'+'''-'''+'+c.Name as Dname,
          case when StopSalaryDate is null then ''未办理'' else ''已办理'' end as State
          FROM [hr_DimissionForm] aa join
          (SELECT e2.* FROM [hr_Employee] e2 join fun_sys_GetUserDepartments('''+@UserID+''') d1 on e2.DeptID=d1.DeptID) a on aa.EmployeeID=a.EmployeeID
          left join [hr_Job] b on a.JobID=b.JobID
          left join [hr_Department] c on a.DeptID=c.DeptID
          left join [hr_Company] d on c.CompanyID=d.CompanyID
          left join fl_MappingForm f on  f.Table_Name= ''fl_DimissionForm'' and aa.DFID=f.FormNo
          WHERE a.Name like '''+'%'+@EmployeeID+'%'+'''
          and a.JobID like  '''+'%'+@JobID+'%'+'''
          and a.DeptID  like  '''+'%'+@DeptID+'%'+'''
          and  c.CompanyID like  '''+'%'+@CompanyID+'%'+'''
          and aa.IsActive=1
          and f.Approved=2';
          if(@State='已办理')
          begin
          set @sql=@sql+ 'and aa.[StopSalaryDate] is not null';
          end
          else if(@State='未办理')
          begin
          set @sql=@sql+ 'and aa.[StopSalaryDate] is null';
          end
          set @sql=@sql+' order by DimissionDate'
          exec (@sql)
        </Sql>
        <Sql Name="GetDetail" ConnectionName="Auth" Description="查询明细">
          SELECT [DFID],a.MobiPhone,CONVERT(varchar(20), aa.[HireDate]) as [HireDate],CONVERT(varchar(20),[ApplicationDate]) as [ApplicationDate],CONVERT(varchar(20),[DimissionDate]) as [DimissionDate],[DimissionType],CONVERT(varchar(20),[StopSalaryDate]) as [StopSalaryDate],[Reason],a.Name as Ename,b.Name as Pname,d.Name+'-'+c.Name as Dname
          FROM [hr_DimissionForm] aa left join hr_Employee a on aa.EmployeeID=a.EmployeeID
          left   join [hr_Job] b on a.JobID=b.JobID
          left   join [hr_Department] c on a.DeptID=c.DeptID
          left   join [hr_Company]  d on c.CompanyID=d.CompanyID
          WHERE aa.[DFID]=@DFID
        </Sql>
        <Sql Name="GetEdit" ConnectionName="Auth" Description="查询编辑">
          SELECT [DFID],a.MobiPhone,CONVERT(varchar(20), aa.[HireDate]) as [HireDate],CONVERT(varchar(20),[ApplicationDate]) as [ApplicationDate],CONVERT(varchar(20),[DimissionDate]) as [DimissionDate],[DimissionType],CONVERT(varchar(20),[StopSalaryDate]) as [StopSalaryDate],[Reason],a.Name as Ename,b.Name as Pname,d.Name+'-'+c.Name as Dname
          FROM [hr_DimissionForm] aa left join hr_Employee a on aa.EmployeeID=a.EmployeeID
          left join [hr_Job] b on a.JobID=b.JobID
          left join [hr_Department] c on a.DeptID=c.DeptID
          left join [hr_Company]  d on c.CompanyID=d.CompanyID
          WHERE aa.[DFID]=@DFID
        </Sql>
        <Sql Name="GetDate" ConnectionName="Auth" Description="初始加载">
          SELECT [DFID],aa.[EmployeeID],aa.[DeptID],CONVERT(varchar(20), aa.[HireDate]) as [HireDate],aa.[JobID],a.[Telephone] as [Tel],
          CONVERT(varchar(20),[ApplicationDate]) as [ApplicationDate],
          CONVERT(varchar(20),[DimissionDate]) as [DimissionDate],[DimissionType],
          CONVERT(varchar(20),[StopSalaryDate]) as [StopSalaryDate],[Reason],a.Sex,
          CONVERT(varchar(20),a.Birthday) as Birthday,a.Nation,a.CardID,a.Marriage,a.Name as Ename,b.Name as Pname,d.Name+'-'+c.Name as Dname,
          case when StopSalaryDate is null then '未办理' else '已办理' end as State
          FROM [hr_DimissionForm] aa join
          (SELECT e2.* FROM [hr_Employee] e2 join fun_sys_GetUserDepartments(@UserID) d1 on e2.DeptID=d1.DeptID)a on aa.EmployeeID=a.EmployeeID
          left join [hr_Job] b on a.JobID=b.JobID
          left join [hr_Department] c on a.DeptID=c.DeptID
          left join [hr_Company] d on c.CompanyID=d.CompanyID
          left join fl_MappingForm f on  f.Table_Name= 'fl_DimissionForm' and aa.DFID=f.FormNo
          WHERE aa.IsActive=1
          and f.Approved=2
          and aa.[StopSalaryDate] is null
          order by DimissionDate

        </Sql>
        <Sql Name="Add" ConnectionName="Auth" Description="添加离职表单">
          IF(exists(select * from [dbo].[hr_DimissionForm] where EmployeeID=@EmployeeID and IsActive != 0))
          begin
          RAISERROR('当前用户表单已存在记录,不能保存',15,1) WITH NOWAIT
          END
          ELSE
          BEGIN
          INSERT INTO [hr_DimissionForm]
          ([DFID],[EmployeeID],[CompanyID],[DeptID],[HireDate],[JobID],[Tel],[ApplicationDate],[DimissionDate],[DimissionType],[Reason],[AssociateContent],[AssociateEmployeeID],[IsActive],[CreatedUser],[CreatedTime],[ModifiedUser],[ModifiedTime])
          VALUES(@DFID,@EmployeeID,@CompanyID,@DeptID,@HireDate,@JobID,@Tel,@ApplicationDate,@DimissionDate,@DimissionType,@Reason,@AssociateContent,@AssociateEmployeeID,@IsActive,@CreatedUser,@CreatedTime,@ModifiedUser,@ModifiedTime);

          SELECT f.DFID,e.Name,f.IsActive,convert(varchar(100),f.HireDate) as HireDate,convert(varchar(100),f.ApplicationDate) as ApplicationDate,convert(varchar(100),f.[DimissionDate]) as [DimissionDate],f.DimissionType,f.Reason,e.MobiPhone,d.Name as DeptName, j.Name as JobName,
          case when m.Approved=0 then 0 when m.Approved=1 then 1 when m.Approved=2 then 2 else -1 end as Approved FROM [hr_DimissionForm] f
          inner join hr_Department d on f.DeptID = d.DeptID
          inner join hr_Job j on f.JobID=j.JobID
          inner join hr_Employee e on e.EmployeeID = f.EmployeeID
          left join fl_MappingForm m on f.DFID=m.FormNo
          where f.[AutoKey]=scope_identity() and e.DeptID=d.DeptID and e.JobID=j.JobID and f.EmployeeID=e.EmployeeID
          END
        </Sql>
        <Sql Name="Update" ConnectionName="Auth" SqlType="Execute" Description="更新离职表单">
          IF(exists(select * from [dbo].[fl_MappingForm] where FormNo=@DFID and [Approved] != 0))
          begin
          RAISERROR('当前表单非草稿,不能保存',15,1) WITH NOWAIT
          END
          ELSE
          BEGIN
          UPDATE [hr_DimissionForm]
          SET  [DFID]=@DFID,[EmployeeID]=@EmployeeID,[DeptID]=@DeptID,[HireDate]=@HireDate,[JobID]=@JobID,[Tel]=@Tel,[ApplicationDate]=@ApplicationDate,[DimissionDate]=@DimissionDate,[DimissionType]=@DimissionType,[Reason]=@Reason,[IsActive]=@IsActive,[ModifiedUser]=@ModifiedUser,[ModifiedTime]=@ModifiedTime,[AssociateEmployeeID]=@AssociateEmployeeID,[AssociateContent]=@AssociateContent
          WHERE  [DFID]=@DFID;
          SELECT f.DFID,f.IsActive, case when m.Approved=0 then 0 when m.Approved=1 then 1 when m.Approved=2 then 2 else -1 end as Approved,e.EmployeeID,e.Name,convert(varchar(100),f.HireDate) as HireDate,convert(varchar(100),f.ApplicationDate) as ApplicationDate,convert(varchar(100),f.[DimissionDate]) as [DimissionDate],f.DimissionType,f.Reason,e.Telephone,d.Name as DeptName, j.Name as JobName,d.DeptID,j.JobID,f.AssociateEmployeeID,f.AssociateContent FROM [hr_DimissionForm] f
          inner join hr_Department d on f.DeptID = d.DeptID
          inner join hr_Job j on f.JobID=j.JobID
          inner join hr_Employee e on e.EmployeeID = f.EmployeeID
          left join fl_MappingForm m on m.FormNo= f.DFID
          where f.[DFID]=@DFID and f.DeptID=d.DeptID and f.JobID=j.JobID and f.EmployeeID=e.EmployeeID
          END
        </Sql>
        <Sql Name="Delete" ConnectionName="Auth" SqlType="Execute" Description="删除离职表单">
          IF(exists(select * from [dbo].[fl_MappingForm] where FormNo=@DFID and [Approved] != 0))
          begin
          RAISERROR('当前表单非草稿,不能删除',15,1) WITH NOWAIT
          END
          ELSE
          BEGIN
          DELETE FROM [hr_DimissionForm]
          WHERE [DFID]=@DFID
          END
        </Sql>
        <Sql Name="GetItem" ConnectionName="Auth" SqlType="Execute" Description="获取选中记录">
          SELECT [DFID],[EmployeeID],[DeptID],[HireDate],[JobID],[Tel],[ApplicationDate],[DimissionDate],[DimissionType],[Reason],[IsActive],[CreatedUser],[CreatedTime],[ModifiedUser],[ModifiedTime],[AutoKey] FROM [hr_DimissionForm]
          WHERE [DFID]=@DFID;
        </Sql>
        <Sql Name="GetAll" ConnectionName="Auth" SqlType="Execute" Description="获取所有记录">
          SELECT [DFID],[EmployeeID],[DeptID],[HireDate],[JobID],[Tel],[ApplicationDate],[DimissionDate],[DimissionType],[Reason],[IsActive],[CreatedUser],[CreatedTime],[ModifiedUser],[ModifiedTime],[AutoKey] FROM [hr_DimissionForm];
        </Sql>
        <Sql Name="QueryByAddition" ConnectionName="Auth" Description="自助检索查询">
          DECLARE @sql varchar(max);
          DECLARE @where varchar(2000);
          SET @where='';
          IF(len(@DeptID)&gt;0)
          BEGIN
          IF(LEN(@where)&gt;0)
          SET @where = @where + ' AND'
          set @where= ' f.DeptID=''' +@DeptID+'''';
          END

          IF(len(@ApplicationDate)&gt;0)
          BEGIN
          IF(LEN(@where)&gt;0)
          SET @where = @where + ' AND'
          set @where= @where+' f.ApplicationDate=''' + @ApplicationDate+'''';
          END

          IF(len(@DimissionDate)&gt;0)
          BEGIN
          IF(LEN(@where)&gt;0)
          SET @where = @where + ' AND'
          set @where= @where+' f.DimissionDate=''' + @DimissionDate+'''';
          END

          SET @sql='SELECT f.[DFID],f.IsActive, e.Name,convert(varchar(100),f.HireDate) as HireDate,convert(varchar(100),f.ApplicationDate) as ApplicationDate,convert(varchar(100),f.[DimissionDate]) as [DimissionDate],f.DimissionType,f.Reason,e.Telephone,d.Name as DeptName, j.Name as JobName,m.[Approved] FROM [hr_DimissionForm] f
          inner join hr_Department d on f.DeptID = d.DeptID
          inner join hr_Job j on f.JobID=j.JobID
          inner join hr_Employee e on e.EmployeeID = f.EmployeeID
          left join fl_MappingForm m on m.FormNo= f.DFID';

          IF(LEN(@where)&gt;0)
          BEGIN
          SET @sql=@sql+' WHERE ' + @where;
          END
          execute(@sql);
        </Sql>
        <Sql Name="GetDetailByUser" ConnectionName="Auth" Description="自助查询明细">
          SELECT f.DFID,e.MobiPhone,e.EmployeeID,e.Name,convert(varchar(100),f.HireDate) as HireDate,convert(varchar(100),f.ApplicationDate) as ApplicationDate,convert(varchar(100),f.[DimissionDate]) as [DimissionDate],f.DimissionType,f.Reason,e.Telephone,d.Name as DeptName, j.Name as JobName,d.DeptID,j.JobID,ee.Name as AssociateEmployeeID,f.AssociateContent FROM [hr_DimissionForm] f
          left join hr_Department d on f.DeptID = d.DeptID
          left join hr_Job j on f.JobID=j.JobID
          left join hr_Employee e on e.EmployeeID = f.EmployeeID
          left join hr_Employee ee on f.AssociateEmployeeID = ee.EmployeeID
          where f.[DFID]=@DFID and f.DeptID=d.DeptID and f.JobID=j.JobID and f.EmployeeID=e.EmployeeID and f.AssociateEmployeeID=ee.EmployeeID

        </Sql>
        <Sql Name="GetEditByUser" ConnectionName="Auth" Description="自助查询编辑">
          SELECT f.DFID,e.MobiPhone,e.EmployeeID,e.Name,convert(varchar(100),f.HireDate) as HireDate,convert(varchar(100),f.ApplicationDate) as ApplicationDate,convert(varchar(100),f.[DimissionDate]) as [DimissionDate],f.DimissionType,f.Reason,e.Telephone,d.Name as DeptName, j.Name as JobName,d.DeptID,j.JobID,f.AssociateEmployeeID,f.AssociateContent FROM [hr_DimissionForm] f
          left join hr_Department d on f.DeptID = d.DeptID
          left join hr_Job j on f.JobID=j.JobID
          left join hr_Employee e on e.EmployeeID = f.EmployeeID
          where f.[DFID]=@DFID and f.DeptID=d.DeptID and f.JobID=j.JobID and f.EmployeeID=e.EmployeeID

        </Sql>
        <Sql Name="QueryByID" ConnectionName="Auth" Description="签核记录查看明细">
          SELECT f.DFID,f.IsActive,m.Approved,e.EmployeeID,e.Name,h.Name as AssociateEmployeeID,convert(varchar(100),f.HireDate) as HireDate,convert(varchar(100),f.ApplicationDate) as ApplicationDate,convert(varchar(100),f.[DimissionDate]) as [DimissionDate],f.DimissionType,f.Reason,e.Telephone,d.Name as DeptName, j.Name as JobName,d.DeptID,j.JobID,f.AssociateContent FROM [hr_DimissionForm] f
          inner join hr_Department d on f.DeptID = d.DeptID
          inner join hr_Job j on f.JobID=j.JobID
          inner join hr_Employee e on e.EmployeeID = f.EmployeeID
          inner join hr_Employee h on f.AssociateEmployeeID=h.EmployeeID
          left join fl_MappingForm m on m.FormNo= f.DFID
          where f.[DFID]=@DFID and f.DeptID=d.DeptID and f.JobID=j.JobID and f.EmployeeID=e.EmployeeID
        </Sql>
        <Sql Name="SendCheck" ConnectionName="Auth" Description="送签">
          BEGIN TRANSACTION
          DECLARE @errorSun INT
          SET @errorSun=0
          INSERT INTO [fl_DimissionForm]
          ([DFID],[Version],[EmployeeID],[DeptID],[HireDate],[JobID],[Tel],[ApplicationDate],[DimissionDate],[DimissionType],[Reason],[IsActive],[IsHandover],[IsCustomerSafe],[IsDocOrTelInfo],[IsErpOrMail],[Approver],[ApproveDate],[CreatedUser],[CreatedTime],[ModifiedUser],[ModifiedTime])
          select [DFID],1,[EmployeeID],[DeptID],[HireDate],[JobID],[Tel],[ApplicationDate],[DimissionDate],[DimissionType],[Reason],[IsActive],null as IsHandover,null as IsCustomerSafe,null as IsDocOrTelInfo,null as IsErpOrMail,null as Approver,null as ApproveDate,[CreatedUser], [CreatedTime],[ModifiedUser],[ModifiedTime] from [hr_DimissionForm]
          where [DFID]=@DFID;
          SET @errorSun=@errorSun+@@ERROR
          INSERT INTO [fl_MappingForm]
          ([Table_Name],[FormNo],[Approved],[Template_Url],[Attachment],[CreatedUser],[CreatedTime],[ModifiedUser],[ModifiedTime])
          VALUES(@Table_Name,@DFID,@Approved,@Template_Url,@Attachment,@CreatedUser,@CreatedTime,@ModifiedUser,@ModifiedTime);
          SET @errorSun=@errorSun+@@ERROR
          IF @errorSun !=0
          BEGIN
          ROLLBACK TRANSACTION
          END
          ELSE
          BEGIN
          COMMIT TRANSACTION
          END

          SELECT f.DFID,f.IsActive,m.Approved,e.EmployeeID,e.Name,convert(varchar(100),f.HireDate) as HireDate,convert(varchar(100),f.ApplicationDate) as ApplicationDate,convert(varchar(100),f.[DimissionDate]) as [DimissionDate],f.DimissionType,f.Reason,e.Telephone,d.Name as DeptName, j.Name as JobName,d.DeptID,j.JobID FROM [hr_DimissionForm] f
          inner join hr_Department d on f.DeptID = d.DeptID
          inner join hr_Job j on f.JobID=j.JobID
          inner join hr_Employee e on e.EmployeeID = f.EmployeeID
          left join fl_MappingForm m on m.FormNo= f.DFID
          where f.[DFID]=@DFID and f.DeptID=d.DeptID and f.JobID=j.JobID and f.EmployeeID=e.EmployeeID
        </Sql>
        <Sql Name="GetLogByID" ConnectionName="Auth" Description="获取签核记录">
          select CONVERT(varchar(20),[Confirm_time],120)+' '+CONVERT(varchar(20),e.[Name])+' '+'签核' as LogText
          FROM [dbo].[fl_ApproveLog] a
          inner join hr_Employee e on a.CreatedUser = e.UserID
          where FormNo=@DFID
        </Sql>
        <Sql Name="GetEmployeeInfo" ConnectionName="Auth" Description="获取当前用户信息">
          SELECT e.Name,e.EmployeeID,e.CompanyID,convert(varchar(100),e.HireDate) as HireDate,e.MobiPhone,d.Name as DeptName,d.DeptID, j.Name as JobName,j.JobID FROM [hr_Employee] e
          left join hr_Department d on e.DeptID = d.DeptID
          left join hr_Job j on e.JobID=j.JobID
          where UserID=@UserID and e.DeptID=d.DeptID and e.JobID=j.JobID
        </Sql>
        <Sql Name="GetCurrentUserForm" ConnectionName="Auth" Description="获取当前用户表单">
					SELECT f.[DFID],f.IsActive, e.Name,convert(varchar(100),f.HireDate) as HireDate,convert(varchar(100),f.ApplicationDate) as ApplicationDate,convert(varchar(100),f.[DimissionDate]) as [DimissionDate],f.DimissionType,f.Reason,e.MobiPhone,d.Name as DeptName, j.Name as JobName, case m.Approved when 0 then '已驳回' when 1 then '申请中' when 2 then '已核准' else '草稿' end as Approved FROM [hr_DimissionForm] f
          inner join hr_Department d on f.DeptID = d.DeptID
          inner join hr_Job j on f.JobID=j.JobID
          inner join hr_Employee e on e.EmployeeID = f.EmployeeID
          left join fl_MappingForm m on m.FormNo= f.DFID
          where f.EmployeeID = @EmployeeID
        </Sql>
        <Sql Name="QueryCount" ConnectionName="Auth" Description="查询总数">
          declare @sql varchar(max)
          set @sql='
          SELECT count([DFID]) FROM [hr_DimissionForm] aa join
          (SELECT e2.* FROM [hr_Employee] e2 join fun_sys_GetUserDepartments('''+@UserID+''') d1 on e2.DeptID=d1.DeptID)a on aa.EmployeeID=a.EmployeeID
          left join [hr_Job] b on a.JobID=b.JobID
          left join [hr_Department] c on a.DeptID=c.DeptID
          left join [hr_Company] d on c.CompanyID=d.CompanyID
          left join fl_MappingForm f on  f.Table_Name= ''fl_DimissionForm'' and aa.DFID=f.FormNo
          WHERE a.Name like '''+'%'+@EmployeeID+'%'+'''
          and a.JobID like  '''+'%'+@JobID+'%'+'''
          and a.DeptID  like  '''+'%'+@DeptID+'%'+'''
          and  c.CompanyID like  '''+'%'+@CompanyID+'%'+'''
          and aa.IsActive=1
          and f.Approved=2';
          if(@State='已办理')
          begin
          set @sql=@sql+ 'and aa.[StopSalaryDate] is not null';
          end
          else if(@State='未办理')
          begin
          set @sql=@sql+ 'and aa.[StopSalaryDate] is null';
          end
          exec (@sql)
        </Sql>
        <Sql Name="QueryPage" ConnectionName="Auth" Description="查询分页">
          declare @sql varchar(max)
          set @sql='
          SELECT aa.[DFID],aa.[EmployeeID],aa.[DeptID],CONVERT(varchar(20), aa.[HireDate]) as [HireDate],aa.[JobID],a.[MobiPhone] as [Tel],
          CONVERT(varchar(20),aa.[ApplicationDate]) as [ApplicationDate],
          CONVERT(varchar(20),aa.[DimissionDate]) as [DimissionDate],aa.[DimissionType],
          CONVERT(varchar(20),aa.[StopSalaryDate]) as [StopSalaryDate],aa.[Reason],a.Sex,
          CONVERT(varchar(20),a.Birthday) as Birthday,a.Nation,a.CardID,a.Marriage,a.Name as Ename,b.Name as Pname,d.Name+'+'''-'''+'+c.Name as Dname,
          case when StopSalaryDate is null then ''未办理'' else ''已办理'' end as State
          FROM [hr_DimissionForm] aa join
          (SELECT e2.* FROM [hr_Employee] e2 join fun_sys_GetUserDepartments('''+@UserID+''') d1 on e2.DeptID=d1.DeptID) a on aa.EmployeeID=a.EmployeeID
          left join [hr_Job] b on a.JobID=b.JobID
          left join [hr_Department] c on a.DeptID=c.DeptID
          left join [hr_Company] d on c.CompanyID=d.CompanyID
          left join fl_MappingForm f on  f.Table_Name= ''fl_DimissionForm'' and aa.DFID=f.FormNo
          WHERE a.Name like '''+'%'+@EmployeeID+'%'+'''
          and a.JobID like  '''+'%'+@JobID+'%'+'''
          and a.DeptID  like  '''+'%'+@DeptID+'%'+'''
          and  c.CompanyID like  '''+'%'+@CompanyID+'%'+'''
          and aa.IsActive=1
          and f.Approved=2';
          if(@State='已办理')
          begin
          set @sql=@sql+ 'and aa.[StopSalaryDate] is not null';
          end
          else if(@State='未办理')
          begin
          set @sql=@sql+ 'and aa.[StopSalaryDate] is null';
          end
          set @sql=@sql+' order by aa.ModifiedTime desc'

          SET @sql = @sql + '
          OFFSET ('+ CAST((@Page - 1) * @Rows AS varchar(10)) +') ROWS

          FETCH NEXT ' + CAST(@Rows AS varchar(10)) +' ROWS ONLY';
          exec (@sql)
        </Sql>
        <Sql Name="DimissionReport" ConnectionName="Auth" Description="离职报表">
          select a.DeptID,
          a.Accession,
          a.AccessionDimission,
          a.Onjob,
          a.Name as DeptName,
          a.CompanyName,
          isnull(b.DimissionCount,0) as DimissionCount,
          isnull(cast(cast(b.DimissionCount as dec(18,2))/cast(a.Onjob as dec(18,2))as dec(18,4)),0) as DimissionPercent
          from(select e.DeptID,e.CompanyID,
          count(e.EmployeeID)as Onjob,
          sum(case when e.HireDate  between @StartDate and @EndDate then 1 else 0 end)as Accession,
          sum(case when e.HireDate between @StartDate and @EndDate and e.JobState='离职' then 1 else 0 end)as AccessionDimission,
          d.Name,
          c.Name as CompanyName
          from [hr_Employee]e left join [hr_Department]d on e.DeptID=d.DeptID
          left join [hr_Company]c on e.CompanyID=c.CompanyID where e.JobState&lt;&gt;'离职' group by e.DeptID,d.Name,c.Name,e.CompanyID) a
          full join
          (select DeptID,
          sum(case when DimissionDate between @StartDate and @EndDate then 1 else 0 end)as DimissionCount
          from hr_DimissionForm group by DeptID) b on a.DeptID=b.DeptID
          where a.CompanyID=@CompanyID
        </Sql>
      </Table>
      <Table Name="hr_ConversionForm" ConnectionName="Auth" TableName="hr_ConversionForm">
        <Sql Name="Update" ConnectionName="Auth" SqlType="Execute" Description="办理转正">
          UPDATE [hr_ConversionForm]
          SET [DoTime]=@RegularDate WHERE [CFID]=@CFID;

          UPDATE [hr_Employee]
          SET [RegularDate]=@RegularDate,[ContractStartDate]=@ContractStartDate,[ContractEndDate]=@ContractEndDate,[State]='在职',[SocialSecurity]=@SocialSecurity  where EmployeeID in (select EmployeeID FROM [hr_ConversionForm] WHERE [CFID]=@CFID);

          SELECT aa.[CFID],aa.[EmployeeID],aa.[DeptID],CONVERT(varchar(20),aa.[HireDate]) as [HireDate],aa.[JobID],CONVERT(varchar(20),aa.[ApplicationDate]) as [ApplicationDate],aa.[EduName],aa.[Education],aa.[StartDate],aa.[EndDate],aa.[SXMonths],aa.[Summary],aa.[IsActive],aa.[CreatedUser],aa.[CreatedTime],aa.[ModifiedUser],aa.[ModifiedTime],a.[ContractStartDate],a.[ContractEndDate],a.[Sex],a.[CardNo],CONVERT(varchar(20),a.[Birthday]) as [Birthday],a.[Nation],a.[Marriage],a.[LiveAddress],a.[Telephone],a.[SocialSecurity],a.[RegularDate],case when aa.[DoTime] is null then '未办理' else '已办理' end as State,a.Name as Ename,b.Name as Jname,c.Name as Dname,d.Name as Cname FROM [hr_ConversionForm] aa left join hr_Employee a on aa.EmployeeID=a.EmployeeID
          left join [hr_Job] b on a.JobID=b.JobID
          left join [hr_Department] c on a.DeptID=c.DeptID
          left join [hr_Company]  d on c.CompanyID=d.CompanyID
          left join fl_MappingForm f on aa.CFID=f.FormNo and Table_Name='fl_ConversionForm'
        </Sql>
        <Sql Name="Query" ConnectionName="Auth" Description="检索查询未办理的转正信息">
          declare @sql varchar(max)
          set @sql='
          SELECT aa.[CFID],aa.[EmployeeID],aa.[DeptID],CONVERT(varchar(20),aa.[HireDate]) as [HireDate],aa.[JobID],CONVERT(varchar(20),aa.[ApplicationDate]) as [ApplicationDate],aa.[EduName],aa.[Education],aa.[StartDate],aa.[EndDate],aa.[SXMonths],aa.[Summary],aa.[IsActive],aa.[CreatedUser],aa.[CreatedTime],aa.[ModifiedUser],aa.[ModifiedTime],a.[Sex],a.[CardNo],CONVERT(varchar(20),a.[Birthday]) as [Birthday],case when aa.[DoTime] is null then ''未办理'' else ''已办理'' end as State,a.[Nation],a.[Marriage],a.[LiveAddress],a.[Telephone],a.[SocialSecurity],a.[RegularDate],a.Name as Ename,b.Name as Jname,c.Name as Dname,d.Name as Cname FROM [hr_ConversionForm] aa join
          (SELECT e2.* FROM [hr_Employee] e2 join fun_sys_GetUserDepartments('''+@UserID+''') d1 on e2.DeptID=d1.DeptID) a on aa.EmployeeID=a.EmployeeID
          left join [hr_Job] b on a.JobID=b.JobID
          left join [hr_Department] c on a.DeptID=c.DeptID
          left join [hr_Company]  d on c.CompanyID=d.CompanyID
          left join fl_MappingForm f on  f.Table_Name= ''fl_ConversionForm'' and aa.CFID=f.FormNo
          WHERE a.[EmployeeID] like '''+'%'+@EmployeeID+'%'+'''
          and a.JobID like  '''+'%'+@JobID+'%'+'''
          and a.DeptID  like  '''+'%'+@DeptID+'%'+'''
          and  c.CompanyID like  '''+'%'+@CompanyID+'%'+'''
          and aa.IsActive=1
          and f.Approved=2';
          if(@State='已办理')
          begin
          set @sql=@sql+ 'and aa.[DoTime] is not null';
          end
          else if(@State='未办理')
          begin
          set @sql=@sql+ 'and aa.[DoTime] is null';
          end
          set @sql=@sql+' order by ApplicationDate'
          exec (@sql)


        </Sql>
        <Sql Name="GetDetail" ConnectionName="Auth" Description="根据单据ID查询转正信息明细">
          SELECT CONVERT(varchar(20),a.[ContractStartDate]) as [ContractStartDate],CONVERT(varchar(20),a.[ContractEndDate]) as [ContractEndDate],aa.[CFID],aa.[EmployeeID],aa.[DeptID],CONVERT(varchar(20),aa.[HireDate]) as [HireDate],aa.[JobID],CONVERT(varchar(20),aa.[ApplicationDate]) as [ApplicationDate],aa.[EduName],aa.[Education],aa.[StartDate],aa.[EndDate],aa.[SXMonths],aa.[Summary],aa.[IsActive],aa.[CreatedUser],aa.[CreatedTime],aa.[ModifiedUser],aa.[ModifiedTime],a.[Sex],a.[CardNo],CONVERT(varchar(20),a.[Birthday]) as [Birthday],a.[Nation],a.[Marriage],a.[LiveAddress],a.[Telephone],a.[SocialSecurity],CONVERT(varchar(20),a.[RegularDate]) as [RegularDate],a.Name as Ename,b.Name as Jname,c.Name as Dname,d.Name as Cname FROM [hr_ConversionForm] aa left join [hr_Employee] a on aa.EmployeeID=a.EmployeeID
          left join [hr_Job] b on a.JobID=b.JobID
          left join [hr_Department] c on a.DeptID=c.DeptID
          left join [hr_Company]  d on c.CompanyID=d.CompanyID
          Where aa.[CFID]=@CFID;
        </Sql>
        <Sql Name="GetEdit" ConnectionName="Auth" Description="根据单据ID查询转正信息编辑">
          SELECT CONVERT(varchar(20),a.[ContractStartDate]) as [ContractStartDate],CONVERT(varchar(20),a.[ContractEndDate]) as [ContractEndDate],aa.[CFID],aa.[EmployeeID],aa.[DeptID],CONVERT(varchar(20),aa.[HireDate]) as [HireDate],aa.[JobID],CONVERT(varchar(20),aa.[ApplicationDate]) as [ApplicationDate],aa.[EduName],aa.[Education],aa.[StartDate],aa.[EndDate],aa.[SXMonths],aa.[Summary],aa.[IsActive],aa.[CreatedUser],aa.[CreatedTime],aa.[ModifiedUser],aa.[ModifiedTime],a.[Sex],a.[CardNo],CONVERT(varchar(20),a.[Birthday]) as [Birthday],a.[Nation],a.[Marriage],a.[LiveAddress],a.[Telephone],a.[SocialSecurity], CONVERT(varchar(20),a.[RegularDate]) as [RegularDate],a.Name as Ename,b.Name as Jname,c.Name as Dname,d.Name as Cname FROM [hr_ConversionForm] aa left join [hr_Employee] a on aa.EmployeeID=a.EmployeeID
          left join [hr_Job] b on a.JobID=b.JobID
          left join [hr_Department] c on a.DeptID=c.DeptID
          left join [hr_Company]  d on c.CompanyID=d.CompanyID
          Where aa.[CFID]=@CFID;
        </Sql>
        <Sql Name="GetData" ConnectionName="Auth" Description="加载转正信息">
          SELECT aa.[CFID],aa.[EmployeeID],aa.[DeptID],CONVERT(varchar(20),aa.[HireDate]) as [HireDate],aa.[JobID],CONVERT(varchar(20),aa.[ApplicationDate]) as [ApplicationDate],aa.[EduName],aa.[Education],aa.[StartDate],aa.[EndDate],aa.[SXMonths],aa.[Summary],aa.[IsActive],aa.[CreatedUser],aa.[CreatedTime],aa.[ModifiedUser],aa.[ModifiedTime],a.[Sex],a.[CardNo],CONVERT(varchar(20),a.[Birthday]) as [Birthday],case when DoTime is null then '未办理' else '已办理' end as State,a.[Nation],a.[Marriage],a.[LiveAddress],a.[Telephone],a.Name as Ename,b.Name as Jname,c.Name as Dname,d.Name as Cname FROM [hr_ConversionForm] aa join
          (SELECT e2.* FROM [hr_Employee] e2 join fun_sys_GetUserDepartments(@UserID) d1 on e2.DeptID=d1.DeptID) a on aa.EmployeeID=a.EmployeeID
          left join [hr_Job] b on a.JobID=b.JobID
          left join [hr_Department] c on a.DeptID=c.DeptID
          left join [hr_Company]  d on c.CompanyID=d.CompanyID
          left join fl_MappingForm f on  f.Table_Name= 'fl_ConversionForm' and aa.CFID=f.FormNo
          WHERE aa.IsActive=1
          and f.Approved=2
          and aa.[DoTime] is null
          order by ApplicationDate;
        </Sql>
        <Sql Name="Add" ConnectionName="Auth" Description="新增转正信息">
          if exists(select * from hr_ConversionForm where EmployeeID=@EmployeeID and IsActive=1)
          begin
          raiserror('已存在转正申请信息，新增失败！',15,1)
          end
          else if (datediff(day,@StartDate,@EndDate)&lt;0)
          begin
          raiserror('试用期结束日期不得早于开始日期！',15,1)
          end
          else
          begin
          INSERT INTO [hr_ConversionForm]
          ([CFID],[EmployeeID],[CompanyID],[DeptID],[HireDate],[JobID],[ApplicationDate],[EduName],[Education],[StartDate],[EndDate],[SXMonths],[Summary],[IsActive],[CreatedUser],[CreatedTime],[ModifiedUser],[ModifiedTime])
          VALUES(@CFID,@EmployeeID,@CompanyID,@DeptID,@HireDate,@JobID,@ApplicationDate,@EduName,@Education,@StartDate,@EndDate,@SXMonths,@Summary,@IsActive,@CreatedUser,@CreatedTime,@ModifiedUser,@ModifiedTime);
          SELECT
          [CFID],a.[EmployeeID],a.[DeptID],
          CONVERT(varchar(20),CONVERT(date,a.HireDate)) as [HireDate],a.[JobID],
          CONVERT(varchar(20),CONVERT(date,ApplicationDate)) as [ApplicationDate],
          a.[EduName],a.[Education],
          CONVERT(varchar(20),CONVERT(date,StartDate)) as [StartDate],
          CONVERT(varchar(20),CONVERT(date,EndDate)) as [EndDate],
          [SXMonths],[Summary],
          case when c.Approved=0 then '已驳回' when c.Approved=1 then '申请中' when c.Approved=2 then '已核准' else '草稿' end as Approved,
          case when DoTime is not null then  '已办理' when c.Approved=2 then '未办理' else '' end as State
          FROM [hr_ConversionForm] a
          left join [hr_Employee] b on a.EmployeeID=b.EmployeeID
          left join fl_mappingform c on a.CFID=c.FormNo and Table_Name='fl_ConversionForm'
          WHERE a.[AutoKey]=scope_identity();
          end
        </Sql>
        <Sql Name="UpdateByUser" ConnectionName="Auth" SqlType="Execute" Description="自助修改转正信息">
          if(datediff(day,@StartDate,@EndDate)&lt;0)
          begin
          raiserror('试用期结束日期不得早于开始日期！',15,1)
          end
          else
          begin
          UPDATE [hr_ConversionForm]
          SET  [StartDate]=@StartDate,[EndDate]=@EndDate,[SXMonths]=@SXMonths,[Summary]=@Summary,[ModifiedUser]=@ModifiedUser,[ModifiedTime]=@ModifiedTime WHERE [CFID]=@CFID;
          SELECT
          [CFID],a.[EmployeeID],a.[DeptID],
          CONVERT(varchar(20),CONVERT(date,a.HireDate)) as [HireDate],a.[JobID],
          CONVERT(varchar(20),CONVERT(date,ApplicationDate)) as [ApplicationDate],
          a.[EduName],a.[Education],
          CONVERT(varchar(20),CONVERT(date,StartDate)) as [StartDate],
          CONVERT(varchar(20),CONVERT(date,EndDate)) as [EndDate],
          [SXMonths],[Summary],
          case when c.Approved=0 then '已驳回' when c.Approved=1 then '申请中' when c.Approved=2 then '已核准' else '草稿' end as Approved,
          case when DoTime is not null then  '已办理' when c.Approved=2 then '未办理' else '' end as State
          FROM [hr_ConversionForm] a
          left join [hr_Employee] b on a.EmployeeID=b.EmployeeID
          left join fl_mappingform c on a.CFID=c.FormNo and Table_Name='fl_ConversionForm'
          WHERE [CFID]=@CFID;
          end
        </Sql>
        <Sql Name="Delete" ConnectionName="Auth" SqlType="Execute" Description="删除">
          declare @sql varchar(max);
          set @sql='
          declare @m int
          select @m=count(*) from [fl_MappingForm] where Table_Name='''+'hr_ConversionForm'+''' and [FormNo] in ('''+replace(@CFID,',',''',''')+''') and Approved in (1,2)
          if(@m=0)
          begin
          UPDATE [hr_ConversionForm]
          SET [ModifiedUser]='''+@ModifiedUser+''',[ModifiedTime]='''+@ModifiedTime+''',[IsActive]=0 WHERE [CFID] in ('''+replace(@CFID,',',''',''')+''') ;
          end
          else
          begin
          raiserror('''+'存在已送签信息，删除失败'+''',16,1) with nowait
          end;'
          exec(@sql);
        </Sql>
        <Sql Name="GetDataByEmployeeID" ConnectionName="Auth" Description="加载用户转正信息">
          SELECT
          [CFID],a.[EmployeeID],a.[DeptID],
          CONVERT(varchar(20),CONVERT(date,a.HireDate)) as [HireDate],a.[JobID],
          CONVERT(varchar(20),CONVERT(date,ApplicationDate)) as [ApplicationDate],
          a.[EduName],a.[Education],
          CONVERT(varchar(20),CONVERT(date,StartDate)) as [StartDate],
          CONVERT(varchar(20),CONVERT(date,EndDate)) as [EndDate],
          [SXMonths],[Summary],
          case when c.Approved=0 then '已驳回' when c.Approved=1 then '申请中' when c.Approved=2 then '已核准' else '草稿' end as Approved,
          case when DoTime is not null then  '已办理' when c.Approved=2 then '未办理' else '' end as State
          FROM [hr_ConversionForm] a
          left join [hr_Employee] b on a.EmployeeID=b.EmployeeID
          left join fl_mappingform c on a.CFID=c.FormNo and Table_Name='fl_ConversionForm'
          where a.IsActive=1 and a.[EmployeeID]=@EmployeeID
        </Sql>
        <Sql Name="GetDetailByUser" ConnectionName="Auth" Description="自助查询明细">
          select a.Name as Ename,c.Name+'-'+d.Name as Dname,b.Name as Jname,
          CONVERT(varchar(20),aa.HireDate) as [HireDate],
          CONVERT(varchar(20),ApplicationDate) as [ApplicationDate],
          CONVERT(varchar(20),aa.StartDate) as [StartDate],
          CONVERT(varchar(20),aa.EndDate) as [EndDate],
          aa.[Education],aa.EduName,SXMonths,[Summary]
          FROM [hr_ConversionForm] aa left  join  [hr_Employee] a on aa.EmployeeID=a.EmployeeID
          join [hr_Job] b on a.JobID=b.JobID
          join   [hr_Department] c on a.DeptID=c.DeptID
          join [hr_Company]  d on c.CompanyID=d.CompanyID
          WHERE [CFID]=@CFID
        </Sql>
        <Sql Name="GetEditByUser" ConnectionName="Auth" Description="自助查询编辑">
          select [CFID],a.Name as Ename,c.Name+'-'+d.Name as Dname,b.Name as Jname,
          CONVERT(varchar(20),aa.HireDate) as [HireDate],
          CONVERT(varchar(20),ApplicationDate) as [ApplicationDate],
          CONVERT(varchar(20),aa.StartDate) as [StartDate],
          CONVERT(varchar(20),aa.EndDate) as [EndDate],
          aa.[Education],aa.EduName,SXMonths,[Summary]
          FROM [hr_ConversionForm] aa left  join  [hr_Employee] a on aa.EmployeeID=a.EmployeeID
          join [hr_Job] b on a.JobID=b.JobID
          join   [hr_Department] c on a.DeptID=c.DeptID
          join [hr_Company]  d on c.CompanyID=d.CompanyID
          WHERE [CFID]=@CFID
        </Sql>
        <Sql Name="GetUserInfoByUserID" ConnectionName="Auth" Description="根据用户编号获取用户信息">
          select a.EmployeeID,a.Name as Ename,a.DeptID,c.Name+'-'+d.Name as Dname,a.JobID,b.Name as Jname,a.CompanyID,
          CONVERT(varchar(20),CONVERT(date,GETDATE())) as ApplicationDate,CONVERT(varchar(20),CONVERT(date,HireDate)) as HireDate,a.EduName,a.Education
          from [hr_Employee] a join [hr_Job] b on a.JobID=b.JobID
          join   [hr_Department] c on a.DeptID=c.DeptID
          join [hr_Company]  d on c.CompanyID=d.CompanyID
          where UserID=@UserID
        </Sql>
        <Sql Name="SendCheck" ConnectionName="Auth" Description="送签">
          declare @cfid nvarchar(6)
          declare @table_name varchar(50)
          set @table_name='fl_ConversionForm'
          declare YouBiao cursor for
          SELECT value FROM [dbo].[fSplitString] (@CFIDS,',',1)
          open YouBiao
          fetch next from YouBiao into @cfid
          while @@FETCH_STATUS=0
          begin
          BEGIN TRANSACTION
          DECLARE @errorSun INT
          SET @errorSun=0
          declare @n int
          select @n=count(*)+1 from [fl_ConversionForm] where [CFID]=@cfid
          insert into  [dbo].[fl_ConversionForm]
          ([CFID],[Version],[EmployeeID],[DeptID],[HireDate],[JobID],[ApplicationDate],[EduName], [Education],[StartDate],[EndDate],[Summary],[SXMonths],[IsActive],[CreatedUser],[CreatedTime],[ModifiedUser],[ModifiedTime])
          SELECT [CFID],@n,[EmployeeID],[DeptID],[HireDate],[JobID],[ApplicationDate],[EduName],[Education],[StartDate],[EndDate],[Summary],[SXMonths],@IsActive,@CreatedUser,@CreatedTime,
          @ModifiedUser,@ModifiedTime
          FROM [dbo].[hr_ConversionForm]  where [CFID]=@cfid
          SET @errorSun=@errorSun+@@ERROR
          if exists(select * from [fl_MappingForm] where Table_Name=@table_name and [FormNo]=@cfid)
          begin
          insert into  [dbo].[fl_MappingForm]
          ([Table_Name],[FormNo],[Approved],[CreatedUser],[CreatedTime],[ModifiedUser],[ModifiedTime])
          SELECT @table_name,@cfid,1,@CreatedUser,@CreatedTime,@ModifiedUser,@ModifiedTime
          end
          else
          begin
          update  [fl_MappingForm] set [Approved]=1  where Table_Name=@table_name and [FormNo]=@cfid
          end
          SET @errorSun=@errorSun+@@ERROR
          IF @errorSun !=0
          BEGIN
          ROLLBACK TRANSACTION
          END
          ELSE
          BEGIN
          COMMIT TRANSACTION
          END
          fetch next from YouBiao into @cfid
          end
          close YouBiao
          deallocate YouBiao
          SELECT
          [CFID],a.[EmployeeID],a.[DeptID],
          CONVERT(varchar(20),CONVERT(date,a.HireDate)) as [HireDate],a.[JobID],
          CONVERT(varchar(20),CONVERT(date,ApplicationDate)) as [ApplicationDate],
          a.[EduName],a.[Education],
          CONVERT(varchar(20),CONVERT(date,StartDate)) as [StartDate],
          CONVERT(varchar(20),CONVERT(date,EndDate)) as [EndDate],
          [SXMonths],[Summary],
          case when c.Approved=0 then '已驳回' when c.Approved=1 then '申请中' when c.Approved=2 then '已核准' else '草稿' end as Approved,
          case when DoTime is not null then  '已办理' when c.Approved=2 then '未办理' else '' end as State
          FROM [hr_ConversionForm] a
          left join [hr_Employee] b on a.EmployeeID=b.EmployeeID
          left join fl_mappingform c on a.CFID=c.FormNo and Table_Name=@table_name
          WHERE [CFID] in (SELECT value FROM [dbo].[fSplitString] (@CFIDS,',',1))
        </Sql>
        <Sql Name="CheckLog" ConnectionName="Auth" Description="送签追踪">
          declare @n int,@log nvarchar(500),@l nvarchar(20)
          select @n=count(*) FROM [fl_ConversionForm] WHERE [CFID]=@CFID
          select @log=CONVERT(varchar(30),aa.CreatedTime,20)+','+isnull(a.Name,'')+','+isnull(b.Name,'')+',呈送'+'&lt;/br&gt;'
          FROM [fl_ConversionForm] aa left  join  [hr_Employee] a on aa.EmployeeID=a.EmployeeID
          join [hr_Job] b on a.JobID=b.JobID
          WHERE [CFID]=@CFID and [Version]=@n
          select @l=[EmployeeID1] FROM [fl_ConversionForm]  WHERE [CFID]=@CFID
          if(LEN(@l)&gt;0)
          begin
          select @log=@log+CONVERT(varchar(30),ApprovedDate1,20)+','+isnull(a.Name,'')+','+isnull(b.Name,'')+',签核'+Suggestion1+'&lt;/br&gt;'
          FROM [fl_ConversionForm] aa left  join  [hr_Employee] a on aa.EmployeeID1=a.EmployeeID
          join [hr_Job] b on a.JobID=b.JobID
          WHERE [CFID]=@CFID and [Version]=@n
          select @l=[EmployeeID2] FROM [fl_ConversionForm]  WHERE [CFID]=@CFID
          if(LEN(@l)&gt;0)
          begin
          select @log=@log+CONVERT(varchar(30),ApprovedDate2,20)+','+isnull(a.Name,'')+','+isnull(b.Name,'')+',签核'+Suggestion2+'&lt;/br&gt;'
          FROM [fl_ConversionForm] aa left  join  [hr_Employee] a on aa.EmployeeID2=a.EmployeeID
          join [hr_Job] b on a.JobID=b.JobID
          WHERE [CFID]=@CFID and [Version]=@n
          select @l=[EmployeeID3] FROM [fl_ConversionForm]  WHERE [CFID]=@CFID
          if(LEN(@l)&gt;0)
          begin
          select @log=@log+CONVERT(varchar(30),ApprovedDate3,20)+','+isnull(a.Name,'')+','+isnull(b.Name,'')+',结案'+Suggestion3
          FROM [fl_ConversionForm] aa left  join  [hr_Employee] a on aa.EmployeeID3=a.EmployeeID
          join [hr_Job] b on a.JobID=b.JobID
          WHERE [CFID]=@CFID and [Version]=@n
          end
          end
          end
          select a.Name as Ename,c.Name+'-'+d.Name as Dname,b.Name as Jname,
          CONVERT(varchar(20),aa.HireDate) as [HireDate],
          CONVERT(varchar(20),ApplicationDate) as [ApplicationDate],
          CONVERT(varchar(20),aa.StartDate) as [StartDate],
          CONVERT(varchar(20),aa.EndDate) as [EndDate],
          aa.[Education],aa.EduName,SXMonths,[Summary],@log as CheckLog
          FROM [hr_ConversionForm] aa left  join  [hr_Employee] a on aa.EmployeeID=a.EmployeeID
          join [hr_Job] b on a.JobID=b.JobID
          join   [hr_Department] c on a.DeptID=c.DeptID
          join [hr_Company]  d on c.CompanyID=d.CompanyID
          WHERE [CFID]=@CFID
        </Sql>
        <Sql Name="QueryCount" ConnectionName="Auth" Description="查询总数">
          declare @sql varchar(max)
          set @sql='
          SELECT count(*) FROM [hr_ConversionForm] aa join
          (SELECT e2.* FROM [hr_Employee] e2 join fun_sys_GetUserDepartments('''+@UserID+''') d1 on e2.DeptID=d1.DeptID) a on aa.EmployeeID=a.EmployeeID
          left join [hr_Job] b on a.JobID=b.JobID
          left join [hr_Department] c on a.DeptID=c.DeptID
          left join [hr_Company]  d on c.CompanyID=d.CompanyID
          left join fl_MappingForm f on  f.Table_Name= ''fl_ConversionForm'' and aa.CFID=f.FormNo
          WHERE a.[EmployeeID] like '''+'%'+@EmployeeID+'%'+'''
          and a.JobID like  '''+'%'+@JobID+'%'+'''
          and a.DeptID  like  '''+'%'+@DeptID+'%'+'''
          and  c.CompanyID like  '''+'%'+@CompanyID+'%'+'''
          and aa.IsActive=1
          and f.Approved=2';
          if(@State='已办理')
          begin
          set @sql=@sql+ 'and aa.[DoTime] is not null';
          end
          else if(@State='未办理')
          begin
          set @sql=@sql+ 'and aa.[DoTime] is null';
          end
          exec (@sql)


        </Sql>
        <Sql Name="QueryPage" ConnectionName="Auth" Description="查询分页">
          declare @sql varchar(max)
          set @sql='
          SELECT aa.[CFID],aa.[EmployeeID],aa.[DeptID],CONVERT(varchar(20),aa.[HireDate]) as [HireDate],aa.[JobID],CONVERT(varchar(20),aa.[ApplicationDate]) as [ApplicationDate],aa.[EduName],aa.[Education],aa.[StartDate],aa.[EndDate],aa.[SXMonths],aa.[Summary],aa.[IsActive],aa.[CreatedUser],aa.[CreatedTime],aa.[ModifiedUser],aa.[ModifiedTime],a.[Sex],a.[CardNo],CONVERT(varchar(20),a.[Birthday]) as [Birthday],case when aa.[DoTime] is null then ''未办理'' else ''已办理'' end as State,a.[Nation],a.[Marriage],a.[LiveAddress],a.[MobiPhone] as Telephone,a.[SocialSecurity],a.[RegularDate],a.Name as Ename,b.Name as Jname,c.Name as Dname,d.Name as Cname FROM [hr_ConversionForm] aa join
          (SELECT e2.* FROM [hr_Employee] e2 join fun_sys_GetUserDepartments('''+@UserID+''') d1 on e2.DeptID=d1.DeptID) a on aa.EmployeeID=a.EmployeeID
          left join [hr_Job] b on a.JobID=b.JobID
          left join [hr_Department] c on a.DeptID=c.DeptID
          left join [hr_Company]  d on c.CompanyID=d.CompanyID
          left join fl_MappingForm f on  f.Table_Name= ''fl_ConversionForm'' and aa.CFID=f.FormNo
          WHERE a.[EmployeeID] like '''+'%'+@EmployeeID+'%'+'''
          and a.JobID like  '''+'%'+@JobID+'%'+'''
          and a.DeptID  like  '''+'%'+@DeptID+'%'+'''
          and  c.CompanyID like  '''+'%'+@CompanyID+'%'+'''
          and aa.IsActive=1
          and f.Approved=2';
          if(@State='已办理')
          begin
          set @sql=@sql+ 'and aa.[DoTime] is not null';
          end
          else if(@State='未办理')
          begin
          set @sql=@sql+ 'and aa.[DoTime] is null';
          end
          set @sql=@sql+' order by ApplicationDate'
          SET @sql = @sql + '
          OFFSET ('+ CAST((@Page - 1) * @Rows AS varchar(10)) +') ROWS

          FETCH NEXT ' + CAST(@Rows AS varchar(10)) +' ROWS ONLY';

          exec (@sql)


        </Sql>
      </Table>
      <Table Name="hr_EmployeeJiaCheng" ConnectionName="Auth" TableName="hr_EmployeeJiaCheng">
        <Sql Name="Add" ConnectionName="Auth" Description="新增奖惩信息">
          INSERT INTO [hr_EmployeeJiaCheng]
          ([JCId],[EmployeeID],[CompanyID],[DeptID],[JobID],[JCType],[ApplicationDate],[Reason],[Suggestion],[Remark],[Amount],[IsActive],[CreatedUser],[CreatedTime],[ModifiedUser],[ModifiedTime])
          VALUES(@JCId,@EmployeeID,@CompanyID,@DeptID,@JobID,@JCType,@ApplicationDate,@Reason,@Suggestion,@Remark,@Amount,@IsActive,@CreatedUser,@CreatedTime,@ModifiedUser,@ModifiedTime);
          SELECT aa.[JCId],aa.[EmployeeID],aa.[CompanyID],aa.[DeptID],t.[JCType],t.[JCName],CONVERT(varchar(100),[ApplicationDate],20) as [ApplicationDate],[Reason],[Suggestion],aa.[Remark],cast(t.JCAmont as dec(18,2)) as [Amount],aa.[IsActive],aa.[CreatedUser],aa.[CreatedTime],aa.[ModifiedUser],aa.[ModifiedTime],aa.[AutoKey],a.Name as Ename,b.Name as Jname,c.Name as Dname,d.Name as Cname
          FROM [hr_EmployeeJiaCheng] aa left join hr_Employee a on aa.EmployeeID=a.EmployeeID
          left join [hr_Job] b on a.JobID=b.JobID
          left join [hr_Department] c on a.DeptID=c.DeptID
          left join [hr_Company]  d on c.CompanyID=d.CompanyID
          left join [hr_JiaChengType] t on aa.JCType=t.JCID
          WHERE aa.[AutoKey]=scope_identity();
        </Sql>
        <Sql Name="Update" ConnectionName="Auth" SqlType="Execute" Description="更新奖惩信息">
          UPDATE [hr_EmployeeJiaCheng]
          SET  [JCId]=@JCId,[Amount]=@Amount,[JCType]=@JCType,[ApplicationDate]=@ApplicationDate,[Reason]=@Reason,[Suggestion]=@Suggestion,[Remark]=@Remark,[IsActive]=@IsActive,[ModifiedUser]=@ModifiedUser,[ModifiedTime]=@ModifiedTime WHERE [JCId]=@JCId;
          SELECT aa.[JCId],aa.[EmployeeID],aa.[CompanyID],aa.[DeptID],t.[JCType],t.[JCName],CONVERT(varchar(100),[ApplicationDate],20) as [ApplicationDate],[Reason],[Suggestion],aa.[Remark],cast(t.JCAmont as dec(18,2)) as [Amount],aa.[IsActive],aa.[CreatedUser],aa.[CreatedTime],aa.[ModifiedUser],aa.[ModifiedTime],aa.[AutoKey],a.Name as Ename,b.Name as Jname,c.Name as Dname,d.Name as Cname
          FROM [hr_EmployeeJiaCheng] aa left join hr_Employee a on aa.EmployeeID=a.EmployeeID
          left join [hr_Job] b on a.JobID=b.JobID
          left join [hr_Department] c on a.DeptID=c.DeptID
          left join [hr_Company]  d on c.CompanyID=d.CompanyID
          left join [hr_JiaChengType] t on aa.JCType=t.JCID
          WHERE  aa.[JCId]=@JCId
        </Sql>
        <Sql Name="Delete" ConnectionName="Auth" SqlType="Execute" Description="删除奖惩信息">
          declare @sql varchar(max);
          set @sql='UPDATE [hr_EmployeeJiaCheng]
          SET [ModifiedUser]='''+@ModifiedUser+''',[ModifiedTime]='''+@ModifiedTime+''',[IsActive]=0 WHERE [JCId] in ('''+replace(@JCIds,',',''',''')+''') ;'
          exec(@sql);
        </Sql>
        <Sql Name="Query" ConnectionName="Auth" Description="检索查询员工奖惩信息">
          SELECT [JCId],aa.[EmployeeID],aa.[CompanyID],aa.[DeptID],[JCType],CONVERT(varchar(100),[ApplicationDate],20) as [ApplicationDate],[Reason],[Suggestion],aa.[Remark],convert(varchar, cast(round(Amount,2) as money),1) as [Amount],aa.[IsActive],aa.[CreatedUser],aa.[CreatedTime],aa.[ModifiedUser],aa.[ModifiedTime],aa.[AutoKey],a.Name as Ename,b.Name as Jname,c.Name as Dname,d.Name as Cname
          FROM [hr_EmployeeJiaCheng] aa join
          (SELECT e2.* FROM [hr_Employee] e2 join fun_sys_GetUserDepartments(@UserID) d1 on e2.DeptID=d1.DeptID) a on aa.EmployeeID=a.EmployeeID
          left join [hr_Job] b on a.JobID=b.JobID
          left join [hr_Department] c on a.DeptID=c.DeptID
          left join [hr_Company]  d on c.CompanyID=d.CompanyID
          WHERE a.Name like '%'+@EmployeeID+'%'
          and a.JobID like '%'+@JobID+'%'
          and a.DeptID  like '%'+@DeptID+'%'
          and  c.CompanyID like '%'+ @CompanyID+'%'
          and aa.JCType like '%'+@JCType+'%'
          and aa.[IsActive] ='1';
        </Sql>
        <Sql Name="GetDetail" ConnectionName="Auth" Description="查询奖惩信息明细">
          SELECT aa.[JCId],aa.[EmployeeID],aa.[CompanyID],aa.[DeptID],t.[JCName],t.[JCType],CONVERT(varchar(100),[ApplicationDate],20) as [ApplicationDate],aa.[Reason],aa.[Suggestion],aa.[Remark],cast(t.JCAmont as dec(18,2)) as [Amount],aa.[IsActive],aa.[CreatedUser],aa.[CreatedTime],aa.[ModifiedUser],aa.[ModifiedTime],aa.[AutoKey],a.Name as Ename,b.Name as Jname,c.Name as Dname,d.Name as Cname
          FROM [hr_EmployeeJiaCheng] aa left join hr_Employee a on aa.EmployeeID=a.EmployeeID
          left join [hr_Job] b on a.JobID=b.JobID
          left join [hr_Department] c on a.DeptID=c.DeptID
          left join [hr_Company]  d on c.CompanyID=d.CompanyID
          left join [hr_JiaChengType] t on aa.JCType=t.JCID
          WHERE aa.[JCId]=@JCId
        </Sql>
        <Sql Name="GetEdit" ConnectionName="Auth" Description="查询奖惩信息编辑">
          SELECT [JCId],aa.[EmployeeID],aa.[CompanyID],aa.[DeptID],[JCType],CONVERT(varchar(100),[ApplicationDate],20) as [ApplicationDate],[Reason],[Suggestion],aa.[Remark],convert(varchar, cast(round(Amount,2) as money),1) as [Amount],aa.[IsActive],aa.[CreatedUser],aa.[CreatedTime],aa.[ModifiedUser],aa.[ModifiedTime],aa.[AutoKey],a.Name as Ename,b.Name as Jname,c.Name as Dname,d.Name as Cname
          FROM [hr_EmployeeJiaCheng] aa left join hr_Employee a on aa.EmployeeID=a.EmployeeID
          left join [hr_Job] b on a.JobID=b.JobID
          left join [hr_Department] c on a.DeptID=c.DeptID
          left join [hr_Company]  d on c.CompanyID=d.CompanyID
          WHERE [JCId]=@JCId
        </Sql>
        <Sql Name="GetJiaChengDetailByUserID" ConnectionName="Auth" Description="根据用户ID查询奖惩信息明细（自助）">
          SELECT [JCId],[EmployeeID],[CompanyID],[DeptID],[JCType],CONVERT(nvarchar(20),[ApplicationDate])as [ApplicationDate],[Reason],[Suggestion],[Remark],convert(varchar, cast(round(Amount,2) as money),1) as [Amount],[IsActive]
          FROM [hr_EmployeeJiaCheng]
          WHERE [JCId]=@JCId
        </Sql>
        <Sql Name="GetJiaChengDateByUserID" ConnectionName="Auth" Description="根据用户ID检索个人奖惩信息（自助）">
          declare @eID varchar(6)
          select @eID=EmployeeID from [hr_Employee] where UserID=@UserID
          SELECT a.[JCId],a.[EmployeeID],a.[CompanyID],a.[DeptID],a.[JCType],CONVERT(nvarchar(20),a.[ApplicationDate])as [ApplicationDate],a.[Reason],a.[Suggestion],a.[Remark],convert(varchar, cast(round(a.[Amount],2) as money),1) as [Amount],a.[IsActive], b.Name FROM [hr_EmployeeJiaCheng] a left join [hr_Employee] b on a.EmployeeID=b.EmployeeID
          WHERE a.[EmployeeID]=@eID and a.[IsActive]=1;
        </Sql>
        <Sql Name="QueryCount" ConnectionName="Auth" Description="查询总数">
          SELECT count(*)
          FROM [hr_EmployeeJiaCheng] aa join
          (SELECT e2.* FROM [hr_Employee] e2 join fun_sys_GetUserDepartments(@UserID) g2 on e2.DeptID=g2.DeptID) a on aa.EmployeeID=a.EmployeeID
          left join [hr_Job] b on a.JobID=b.JobID
          left join [hr_Department] c on a.DeptID=c.DeptID
          left join [hr_Company]  d on c.CompanyID=d.CompanyID
          left join [hr_JiaChengType] t on aa.JCType=t.JCID
          WHERE (a.EmployeeID like '%'+@EmployeeID+'%' or a.Name like '%'+@EmployeeID+'%')
          and a.JobID like '%'+@JobID+'%'
          and a.DeptID  like '%'+@DeptID+'%'
          and c.CompanyID like '%'+ @CompanyID+'%'
          and t.JCType like '%'+@JCType+'%'
          and aa.[IsActive] =1;
        </Sql>
        <Sql Name="QueryPage" ConnectionName="Auth" Description="查询分页">
          SELECT aa.[JCId]
          ,aa.[EmployeeID]
          ,aa.[CompanyID]
          ,aa.[DeptID]
          ,t.[JCType]
          ,t.[JCName]
          ,CONVERT(varchar(100),aa.[ApplicationDate],20) as [ApplicationDate]
          ,aa.[Reason]
          ,aa.[Suggestion]
          ,aa.[Remark],
          cast(cast(t.JCAmont as money)as varchar(8))as [Amount]
          ,aa.[IsActive]
          ,aa.[CreatedUser]
          ,aa.[CreatedTime]
          ,aa.[ModifiedUser]
          ,aa.[ModifiedTime]
          ,aa.[AutoKey]
          ,a.Name as Ename
          ,b.Name as Jname
          ,c.Name as Dname
          ,d.Name as Cname
          FROM [hr_EmployeeJiaCheng] aa join
          (SELECT e2.* FROM [hr_Employee] e2 join fun_sys_GetUserDepartments(@UserID) g2 on e2.DeptID=g2.DeptID) a on aa.EmployeeID=a.EmployeeID
          left join [hr_Job] b on a.JobID=b.JobID
          left join [hr_Department] c on a.DeptID=c.DeptID
          left join [hr_Company]  d on c.CompanyID=d.CompanyID
          left join [hr_JiaChengType] t on aa.JCType=t.JCID
          WHERE (aa.EmployeeID like '%'+@EmployeeID+'%' or a.Name like '%'+@EmployeeID+'%')
          and a.JobID like '%'+@JobID+'%'
          and a.DeptID  like '%'+@DeptID+'%'
          and c.CompanyID like '%'+ @CompanyID+'%'
          and t.JCType like '%'+@JCType+'%'
          and aa.[IsActive] =1 order by aa.[JCId]
          OFFSET ((CAST(@Page as int)-1)*CAST(@Rows as int)) Rows FETCH NEXT CAST(@Rows as int) ROWS ONLY;
        </Sql>
        <Sql Name="QueryCountByUserID" ConnectionName="Auth" Description="查询总数（自助）">
          SELECT count(*) FROM [hr_EmployeeJiaCheng] a left join [hr_Employee] b on a.EmployeeID=b.EmployeeID
          WHERE a.[EmployeeID]=@EmployeeID and a.[IsActive]=1;
        </Sql>
        <Sql Name="QueryPageByUserID" ConnectionName="Auth" Description="查询分页（自助）">
          SELECT a.[JCId],a.[EmployeeID],a.[CompanyID],a.[DeptID],t.[JCType],t.[JCName],CONVERT(nvarchar(20),a.[ApplicationDate])as [ApplicationDate],a.[Reason],a.[Suggestion],a.[Remark],
          cast(cast(t.JCAmont as money)as varchar(8))as [Amount],a.[IsActive], b.Name
          FROM [hr_EmployeeJiaCheng] a left join [hr_Employee] b on a.EmployeeID=b.EmployeeID
          left join [hr_JiaChengType] t on a.JCType=t.JCID
          WHERE a.[EmployeeID]=@EmployeeID and a.[IsActive]=1  order by a.[AutoKey]
          OFFSET ((CAST(@Page as int)-1)*CAST(@Rows as int)) Rows FETCH NEXT CAST(@Rows as int) ROWS ONLY;
        </Sql>
        <Sql Name="Report" ConnectionName="Auth" Description="奖惩报表">
          with jc as(
          select Isnull(j.CompanyID,c.CompanyID)CompanyID,Isnull(j.DeptID,c.DeptID)DeptID,isnull(j.CF,0)CF,isnull(c.JL,0)JL from
          (select CompanyID,DeptID,SUM(Amount)as CF from hr_EmployeeJiaCheng where CompanyID=@CompanyID and convert(varchar(7),ApplicationDate,126) like '%'+@YearMonth+'%' and JCType='惩罚'group by DeptID,CompanyID)j
          full join
          (select CompanyID,DeptID,SUM(Amount)as JL from hr_EmployeeJiaCheng where  CompanyID=@CompanyID and convert(varchar(7),ApplicationDate,126) like '%'+@YearMonth+'%'  and JCType='奖励'group by DeptID,CompanyID)c
          on j.DeptID=c.DeptID)
          select c.Name as CompanyName, d.Name as DeptName,jc.JL,jc.CF,d.SortID from jc left join hr_Department d on jc.DeptID=d.DeptID left join hr_Company c on jc.CompanyID=c.CompanyID
          union select '','合计',sum(jc.JL),sum(jc.CF),999999 from jc order by SortID
        </Sql>
        <Sql Name="GetCompanyID" ConnectionName="Auth" SqlType="Scalar" Description="GetCompanyID">
          SELECT [CompanyID]
          FROM [hr_EmployeeJiaCheng]
          WHERE [JCId]=@JCId
        </Sql>
      </Table>
      <Table Name="hr_EmployeeMove" ConnectionName="Auth" TableName="hr_EmployeeMove">
        <Sql Name="Query" ConnectionName="Auth" Description="查询">
          declare @sql varchar(max)
          set @sql='SELECT [Movid],aa.[EmployeeID],[OldDeptID],aa.CompanyID,[OldJobID],[NewDeptID],[NewJobID],
          CONVERT(varchar(20),[ApplicationDate]) as [ApplicationDate],
          CONVERT(varchar(20),aa.[StartDate]) as [StartDate],
          CONVERT(varchar(20),[RealMoveDate]) as [RealMoveDate],[MoveType],aa.[Remark],
          CONVERT(varchar(20),a.Birthday) as Birthday,a.Sex,a.[Telephone],a.Nation,a.CardNo as CardID,a.Marriage,a.Name as Ename,ob.Name as OldPname,nb.Name as NewPname,
          oc.Name+'+'''-'''+'+od.Name as OldDname,nc.Name+'+'''-'''+'+nd.Name as NewDname
          FROM [hr_EmployeeMove] aa join
          (SELECT e2.* FROM [hr_Employee] e2 join fun_sys_GetUserDepartments('''+@UserID+''') g2 on e2.DeptID=g2.DeptID)a on aa.EmployeeID=a.EmployeeID
          left join [hr_Department] d on a.DeptID=d.DeptID
          left join [hr_Job] ob on aa.OldJobID=ob.JobID
          left join [hr_Job] nb on aa.NewJobID=nb.JobID
          left join [hr_Department] od on aa.OldDeptID =od.DeptID
          left join [hr_Company] oc on od.CompanyID=oc.CompanyID
          left join [hr_Department] nd on aa.NewDeptID =nd.DeptID
          left join [hr_Company] nc on nd.CompanyID=nc.CompanyID
          left join [fl_MappingForm] f on  f.Table_Name= ''fl_EmployeeMove'' and aa.Movid=f.FormNo
          WHERE a.Name like '''+'%'+@EmployeeID+'%'+'''
          and a.JobID like  '''+'%'+@JobID+'%'+'''
          and a.DeptID  like  '''+'%'+@DeptID+'%'+'''
          and d.CompanyID like  '''+'%'+@CompanyID+'%'+'''
          and aa.IsActive=1
          and f.Approved=2 ';
          if(@State='已办理')
          begin
          set @sql=@sql+ 'and aa.[RealMoveDate ] is not null';
          end
          else if(@State='未办理')
          begin
          set @sql=@sql+ 'and aa.[RealMoveDate ] is null';
          end
          set @sql=@sql+' order by aa.StartDate'
          exec (@sql)
        </Sql>
        <Sql Name="Transact" ConnectionName="Auth" Description="办理">

          if(DATEDIFF(DAY,CONVERT(date,@RealMoveDate),CONVERT(date,@ApplicationDate))&gt;0)
          begin
          raiserror('调动日期不能早于申请日期',15,1)
          end
          else if(DATEDIFF(DAY,GETDATE(),CONVERT(date,@RealMoveDate))&gt;0)
          begin
          raiserror('调动日期不能晚于当前日期',15,1)
          end
          else
          begin
          UPDATE [hr_Employee] set [hr_Employee].DeptID=b.[NewDeptID],[hr_Employee].JobID=b.[NewJobID] from [hr_Employee] a
          left join [hr_EmployeeMove] b on a.EmployeeID=b.EmployeeID where b.Movid=@Movid
          if(@@ERROR&gt;0)
          begin
          raiserror('新部门不存在，员工调动失败！',15,1)
          end
          else
          begin
          UPDATE [hr_EmployeeMove] SET [RealMoveDate]=@RealMoveDate,[MoveType]=@MoveType,[ModifiedUser]=@ModifiedUser,[ModifiedTime]=@ModifiedTime WHERE [Movid]=@Movid
          SELECT [Movid],aa.[EmployeeID],[OldDeptID],aa.CompanyID,[OldJobID],[NewDeptID],[NewJobID],
          CONVERT(varchar(20),[ApplicationDate]) as [ApplicationDate],
          CONVERT(varchar(20),aa.[StartDate]) as [StartDate],
          CONVERT(varchar(20),[RealMoveDate]) as [RealMoveDate],[MoveType],aa.[Remark],
          CONVERT(varchar(20),a.Birthday) as Birthday,a.Sex,a.[Telephone],a.Nation,a.CardID,a.Marriage,a.Name as Ename,ob.Name as OldPname,nb.Name as NewPname,
          oc.Name+'-'+od.Name as OldDname,nc.Name+'-'+nd.Name as NewDname,case when aa.RealMoveDate is null then '未办理' else '已办理' end as State
          FROM [hr_EmployeeMove] aa
          left join [hr_Employee] a on aa.EmployeeID=a.EmployeeID
          left join [hr_Job] ob on aa.OldJobID=ob.JobID
          left join [hr_Job] nb on aa.NewJobID=nb.JobID
          left join [hr_Department] od on aa.OldDeptID =od.DeptID
          left join [hr_Company] oc on od.CompanyID=oc.CompanyID
          left join [hr_Department] nd on aa.NewDeptID =nd.DeptID
          left join [hr_Company] nc on nd.CompanyID=nc.CompanyID
          WHERE [Movid]=@Movid;
          end
          end
        </Sql>
        <Sql Name="GetEdit" ConnectionName="Auth" Description="查询编辑">
          SELECT [Movid],aa.[EmployeeID],[OldDeptID],aa.CompanyID,[OldJobID],[NewDeptID],[NewJobID],
          CONVERT(varchar(20),[ApplicationDate]) as [ApplicationDate],
          CONVERT(varchar(20),aa.[StartDate]) as [StartDate],
          CONVERT(varchar(20),[RealMoveDate]) as [RealMoveDate],[MoveType],aa.[Remark],
          CONVERT(varchar(20),a.Birthday) as Birthday,a.Sex,a.[Telephone],a.Nation,a.CardID,a.Marriage,a.Name as Ename,ob.Name as OldPname,nb.Name as NewPname,
          oc.Name+'-'+od.Name as OldDname,nc.Name+'-'+nd.Name as NewDname
          FROM [hr_EmployeeMove] aa
          left join [hr_Employee] a on aa.EmployeeID=a.EmployeeID
          left join [hr_Job] ob on aa.OldJobID=ob.JobID
          left join [hr_Job] nb on aa.NewJobID=nb.JobID
          left join [hr_Department] od on aa.OldDeptID =od.DeptID
          left join [hr_Company] oc on od.CompanyID=oc.CompanyID
          left join [hr_Department] nd on aa.NewDeptID =nd.DeptID
          left join [hr_Company] nc on nd.CompanyID=nc.CompanyID
          WHERE  [Movid]=@Movid;
        </Sql>
        <Sql Name="GetDetail" ConnectionName="Auth" Description="查询明细">
          SELECT [Movid],aa.[EmployeeID],[OldDeptID],aa.CompanyID,[OldJobID],[NewDeptID],[NewJobID],
          CONVERT(varchar(20),[ApplicationDate]) as [ApplicationDate],
          CONVERT(varchar(20),aa.[StartDate]) as [StartDate],
          CONVERT(varchar(20),[RealMoveDate]) as [RealMoveDate],[MoveType],aa.[Remark],
          CONVERT(varchar(20),a.Birthday) as Birthday,a.Sex,a.[Telephone],a.Nation,a.CardID,a.Marriage,a.Name as Ename,ob.Name as OldPname,nb.Name as NewPname,
          oc.Name+'-'+od.Name as OldDname,nc.Name+'-'+nd.Name as NewDname
          FROM [hr_EmployeeMove] aa
          left join [hr_Employee] a on aa.EmployeeID=a.EmployeeID
          left join [hr_Job] ob on aa.OldJobID=ob.JobID
          left join [hr_Job] nb on aa.NewJobID=nb.JobID
          left join [hr_Department] od on aa.OldDeptID =od.DeptID
          left join [hr_Company] oc on od.CompanyID=oc.CompanyID
          left join [hr_Department] nd on aa.NewDeptID =nd.DeptID
          left join [hr_Company] nc on nd.CompanyID=nc.CompanyID
          WHERE [Movid]=@Movid;
        </Sql>
        <Sql Name="GetData" ConnectionName="Auth" Description="初始加载">
          SELECT [Movid],aa.[EmployeeID],[OldDeptID],aa.CompanyID,[OldJobID],[NewDeptID],[NewJobID],
          CONVERT(varchar(20),[ApplicationDate]) as [ApplicationDate],
          CONVERT(varchar(20),aa.[StartDate]) as [StartDate],
			CONVERT(varchar(20),[RealMoveDate]) as [RealMoveDate],[MoveType],aa.[Remark],
          CONVERT(varchar(20),a.Birthday) as Birthday,a.Sex,a.[Telephone],a.Nation,a.CardID,a.Marriage,a.Name as Ename,ob.Name as OldPname,nb.Name as NewPname,
          oc.Name+'-'+od.Name as OldDname,nc.Name+'-'+nd.Name as NewDname,case when aa.RealMoveDate is null then '未办理' else '已办理' end as State
          FROM [hr_EmployeeMove] aa join
          (SELECT e2.* FROM [hr_Employee] e2 join fun_sys_GetUserDepartments(@UserID) g2 on e2.DeptID=g2.DeptID) a on aa.EmployeeID=a.EmployeeID
          left join [hr_Job] ob on aa.OldJobID=ob.JobID
          left join [hr_Job] nb on aa.NewJobID=nb.JobID
          left join [hr_Department] od on aa.OldDeptID =od.DeptID
          left join [hr_Company] oc on od.CompanyID=oc.CompanyID
          left join [hr_Department] nd on aa.NewDeptID =nd.DeptID
          left join [hr_Company] nc on nd.CompanyID=nc.CompanyID
          left join [fl_MappingForm] f on  f.Table_Name= 'fl_EmployeeMove' and aa.Movid=f.FormNo
          WHERE aa.IsActive=1
          and f.Approved=2
          and aa.RealMoveDate is null
          order by aa.[StartDate]
        </Sql>
        <Sql Name="Add" ConnectionName="Auth" Description="新增调用申请单">
          IF(exists(select *,m.Approved from [dbo].hr_EmployeeMove f
          left join fl_MappingForm m on f.Movid=m.FormNo
          where f.EmployeeID=@EmployeeID and  (m.Approved is null or m.Approved=1 or m.Approved=0)))
          BEGIN
          RAISERROR('当前已存在待签核或草稿记录,不能保存',15,1) WITH NOWAIT
          END
          ELSE
          BEGIN
          INSERT INTO [hr_EmployeeMove]
          ([Movid],[EmployeeID],[CompanyID],[ApplicationDate],[StartDate],[OldDeptID],[OldJobID],[NewDeptID],[NewJobID],[MoveType],[OldSalaryBase],[NewSalaryBase],[Remark],[JJRemark],[JJPerson],[IsActive],[CreatedUser],[CreatedTime],[ModifiedUser],[ModifiedTime])
          VALUES(@Movid,@EmployeeID,@CompanyID,@ApplicationDate,@StartDate,@OldDeptID,@OldJobID,@NewDeptID,@NewJobID,@MoveType,@OldSalaryBase,@NewSalaryBase,@Remark,@JJRemark,@JJPerson,@IsActive,@CreatedUser,@CreatedTime,@ModifiedUser,@ModifiedTime);
          select * from
          (select e.Name,convert(varchar(100),ApplicationDate) as ApplicationDate,convert(varchar(100),StartDate) as StartDate,e.Remark,d.Name as OldDeptName,j.Name as OldJobName,m.JJRemark,m.Movid,case when f.Approved=0 then 0 when f.Approved=1 then 1 when f.Approved=2 then 2 else -1 end as Approved,m.IsActive from [hr_EmployeeMove] m
          inner join hr_Employee e on m.EmployeeID=e.EmployeeID
          inner join hr_Department d on m.OldDeptID = d.DeptID
          inner join hr_Job j on m.OldJobID = j.JobID
          left join fl_MappingForm f on f.FormNo = m.Movid
          where Movid=@Movid) as A,

          (select d.Name as NewDeptName,j.Name as NewJobName,e.Name as JJname from [hr_EmployeeMove] m
          inner join hr_Department d on m.NewDeptID = d.DeptID
          inner join hr_Job j on m.NewJobID = j.JobID
          inner join hr_Employee e on e.EmployeeID = m.JJPerson
          where Movid=@Movid) as B
          END

        </Sql>
        <Sql Name="Update" ConnectionName="Auth" SqlType="Execute" Description="更新表单">
          IF(exists(select * from [dbo].[fl_MappingForm] where FormNo=@Movid and [Approved] != 0))
          begin
          RAISERROR('当前表单非草稿,不能保存',15,1) WITH NOWAIT
          END
          ELSE
          BEGIN
          UPDATE [hr_EmployeeMove]
          SET  [StartDate]=@StartDate,[NewDeptID]=@NewDeptID,[NewJobID]=@NewJobID,[Remark]=@Remark,[JJRemark]=@JJRemark,[JJPerson]=@JJPerson WHERE [Movid]=@Movid;
          select * from
          (select e.Name,convert(varchar(100),ApplicationDate) as ApplicationDate,convert(varchar(100),StartDate) as StartDate,m.Remark,d.Name as OldDeptName,j.Name as OldJobName,m.JJRemark,m.Movid, case when f.Approved=0 then 0 when f.Approved=1 then 1 when f.Approved=2 then 2 else -1 end as Approved from [hr_EmployeeMove] m
          inner join hr_Employee e on m.EmployeeID=e.EmployeeID
          inner join hr_Department d on m.OldDeptID = d.DeptID
          inner join hr_Job j on m.OldJobID = j.JobID
          left join fl_MappingForm f on f.FormNo = m.Movid
          where Movid=@Movid) as A,

          (select d.Name as NewDeptName,j.Name as NewJobName,e.Name as JJname from [hr_EmployeeMove] m
          inner join hr_Department d on m.NewDeptID = d.DeptID
          inner join hr_Job j on m.NewJobID = j.JobID
          inner join hr_Employee e on e.EmployeeID = m.JJPerson
          where Movid=@Movid) as B
          END
        </Sql>
        <Sql Name="Delete" ConnectionName="Auth" SqlType="Execute" Description="删除表单">
          IF(exists(select * from [dbo].[fl_MappingForm] where FormNo=@Movid and [Approved] != 0))
          begin
          RAISERROR('当前表单非草稿,不能删除',15,1) WITH NOWAIT
          END
          ELSE
          BEGIN
          DELETE FROM [hr_EmployeeMove]
          WHERE [Movid]=@Movid;
          END
        </Sql>
        <Sql Name="GetItem" ConnectionName="Auth" SqlType="Execute" Description="获取选中明细">
          select * from
          (select e.Name,ApplicationDate,StartDate,m.Remark,d.Name as OldDeptName,j.Name as OldJobName,m.JJRemark,m.Movid from [hr_EmployeeMove] m
          inner join hr_Employee e on m.EmployeeID=e.EmployeeID
          inner join hr_Department d on m.OldDeptID = d.DeptID
          inner join hr_Job j on m.OldJobID = j.JobID
          where Movid=@Movid) as A,

          (select d.Name as NewDeptName,j.Name as NewJobName,e.Name as JJname from [hr_EmployeeMove] m
          inner join hr_Department d on m.NewDeptID = d.DeptID
          inner join hr_Job j on m.NewJobID = j.JobID
          inner join hr_Employee e on e.EmployeeID = m.JJPerson
          where Movid=@Movid) as B
        </Sql>
        <Sql Name="GetAll" ConnectionName="Auth" SqlType="Execute" Description="GetAll">
          SELECT [Movid],[EmployeeID],[ApplicationDate],[StartDate],[OldDeptID],[OldJobID],[NewDeptID],[NewJobID],[MoveType],[OldSalaryBase],[NewSalaryBase],[Remark],[JJRemark],[JJPerson],[IsActive],[CreatedUser],[CreatedTime],[ModifiedUser],[ModifiedTime],[AutoKey] FROM [hr_EmployeeMove];
        </Sql>
        <Sql Name="GetEmployeeByID" ConnectionName="Auth" Description="根据ID查员工">
          SELECT e.[EmployeeID]
          ,e.[DeptID] as OldDeptID
          ,e.[JobID] as OldJobID
          ,[UserID]
          ,e.[Name] as UserName
          ,e.CompanyID
          ,[Sex]
          ,[CardNo]
          ,[Birthday]
          ,[Nation]
          ,[Marriage]
          ,[Politics]
          ,[Country]
          ,[NativeProvince]
          ,[NativeCounty]
          ,[RegisterAddress]
          ,[Health]
          ,[LiveAddress]
          ,[Telephone]
          ,[EmergencyContact]
          ,[EmergencyContactTel]
          ,[Education]
          ,[InsuranceNo]
          ,[HireDate]
          ,[RegularDate]
          ,[Terminate]
          ,[Email]
          ,[CardID]
          ,[ImoID]
          ,[ExtNum]
          ,[EduName]
          ,[Major]
          ,[EduEndDate]
          ,[Convention]
          ,[SocialSecurity]
          ,[ContractOfSale]
          ,[ConventionEndDate]
          ,[ContractEndDate]
          ,[EnName]
          ,[State]
          ,[JobState]
          ,d.Name as OldDeptName
          ,j.Name as OldPositionName
          FROM [dbo].[hr_Employee] e
          inner join hr_Department d on e.DeptID=d.DeptID
          inner join hr_Job j on e.JobID=j.JobID
          where UserID=@UserID
        </Sql>
        <Sql Name="QueryByAddition" ConnectionName="Auth" Description="按条件检索">
          DECLARE @sql varchar(max);
          DECLARE @where varchar(2000);
          SET @where='';

          IF(len(@ApplicationDate)&gt;0)
          BEGIN
          IF(LEN(@where)&gt;0)
          SET @where = @where + ' AND'
          set @where= @where+' A.ApplicationDate&gt;=''' + @ApplicationDate+'''';
          END

          IF(len(@StartDate)&gt;0)
          BEGIN
          IF(LEN(@where)&gt;0)
          SET @where = @where + ' AND'
          set @where= @where+' A.StartDate&gt;=''' + @StartDate+'''';
          END

          IF(len(@Approved)&gt;0)
          BEGIN
          IF(LEN(@where)&gt;0)
          SET @where = @where + ' AND'
          if(@Approved=0 or @Approved=1 or @Approved=2)
          begin
          set @where= @where+' A.Approved =''' + @Approved+'''';
          end
          else if(@Approved=-1)
          begin
          set @where= @where+' A.Approved is null'
          end
          else
          begin
          set @where=@where
          end
          END


          SET @sql='select distinct A.Movid,A.[EmployeeID],A.ApplicationDate,A.StartDate,A.OldDeptName,B.NewDeptName,A.[Remark],A.IsActive,A.Approved from
          (select e.[Movid],e.[EmployeeID],CONVERT(varchar(100),ApplicationDate) as [ApplicationDate],CONVERT(varchar(100), [StartDate]) as [StartDate],[OldDeptID],[OldJobID],[NewDeptID],[NewJobID],[MoveType],[OldSalaryBase],[NewSalaryBase],e.[Remark],[JJRemark],[JJPerson],e.[IsActive],d.Name as OldDeptName,f.Approved FROM [hr_EmployeeMove] e
          inner join hr_Department d on e.OldDeptID = d.DeptID left join fl_MappingForm f on e.Movid = f.FormNo) as A,

          (select e.[Movid],e.[EmployeeID],CONVERT(varchar(100),ApplicationDate) as [ApplicationDate],CONVERT(varchar(100), [StartDate]) as [StartDate],[OldDeptID],[OldJobID],[NewDeptID],[NewJobID],[MoveType],[OldSalaryBase],[NewSalaryBase],e.[Remark],[JJRemark],[JJPerson],e.[IsActive],d.Name as NewDeptName FROM [hr_EmployeeMove] e
          inner join hr_Department d on e.NewDeptID = d.DeptID) as B
          where A.[Movid]=B.[Movid]';

          IF(LEN(@where)&gt;0)
          BEGIN
          SET @sql=@sql+' AND ' + @where;
          END
          execute(@sql);
        </Sql>
        <Sql Name="GetEmployByMoveID" ConnectionName="Auth" Description="根据调用单ID查员工">
          select e.Name,convert(varchar(100),ApplicationDate) as ApplicationDate,convert(varchar(100),StartDate) as StartDate,m.Remark,d.Name as OldDeptName,j.Name as OldJobName,m.JJRemark,m.Movid,m.JJPerson,m.NewDeptID,m.NewJobID from [hr_EmployeeMove] m
          inner join hr_Employee e on m.EmployeeID=e.EmployeeID
          inner join hr_Department d on m.OldDeptID = d.DeptID
          inner join hr_Job j on m.OldJobID = j.JobID
          where Movid=@Movid
        </Sql>
        <Sql Name="AddToOATable" ConnectionName="Auth" Description="添加表单到OA">
          BEGIN TRANSACTION
          DECLARE @errorSun INT
          SET @errorSun=0
          INSERT INTO [fl_EmployeeMove]
          ([Movid],[Version],[EmployeeID],[OldDeptID],[OldJobID],[NewDeptID],[NewJobID],[CreatedUser],[CreatedTime],[ModifiedUser],[ModifiedTime])
          select [Movid],1,[EmployeeID],[OldDeptID],[OldJobID],[NewDeptID],[NewJobID],[CreatedUser],[CreatedTime],[ModifiedUser],[ModifiedTime] from [hr_EmployeeMove]
          where [Movid]=@Movid;
          SET @errorSun=@errorSun+@@ERROR
          INSERT INTO [fl_MappingForm]
          ([Table_Name],[FormNo],[Approved],[Template_Url],[Attachment],[CreatedUser],[CreatedTime],[ModifiedUser],[ModifiedTime])
          VALUES(@Table_Name,@Movid,@Approved,@Template_Url,@Attachment,@CreatedUser,@CreatedTime,@ModifiedUser,@ModifiedTime);
          SET @errorSun=@errorSun+@@ERROR
          IF @errorSun !=0
          BEGIN
          ROLLBACK TRANSACTION
          END
          ELSE
          BEGIN
          COMMIT TRANSACTION
          END

          select * from
          (select e.Name,convert(varchar(100),ApplicationDate) as ApplicationDate,convert(varchar(100),StartDate) as StartDate,Remark,d.Name as OldDeptName,j.Name as OldJobName,m.JJRemark,m.Movid, f.Approved from [hr_EmployeeMove] m
          inner join hr_Employee e on m.EmployeeID=e.EmployeeID
          inner join hr_Department d on m.OldDeptID = d.DeptID
          inner join hr_Job j on m.OldJobID = j.JobID
          left join fl_MappingForm f on f.FormNo = m.Movid
          where Movid=@Movid) as A,

          (select d.Name as NewDeptName,j.Name as NewJobName,e.Name as JJname from [hr_EmployeeMove] m
          inner join hr_Department d on m.NewDeptID = d.DeptID
          inner join hr_Job j on m.NewJobID = j.JobID
          inner join hr_Employee e on e.EmployeeID = m.JJPerson
          where Movid=@Movid) as B
        </Sql>
        <Sql Name="GetCurrentUserForm" ConnectionName="Auth" Description="获取当前用户表单">
					select distinct A.Movid,A.[EmployeeID],A.ApplicationDate,A.StartDate,A.OldDeptName,B.NewDeptName,A.[Remark],A.IsActive, case Approved when 0 then '已驳回' when 1 then '申请中' when 2 then '已核准' else '草稿' end as Approved from
 (select e.[Movid],e.[EmployeeID],CONVERT(varchar(100),ApplicationDate) as [ApplicationDate],CONVERT(varchar(100), [StartDate]) as [StartDate],[OldDeptID],[OldJobID],[NewDeptID],[NewJobID],[MoveType],[OldSalaryBase],[NewSalaryBase],e.[Remark],[JJRemark],[JJPerson],e.[IsActive],d.Name as OldDeptName,f.Approved FROM [hr_EmployeeMove] e
          inner join hr_Department d on e.OldDeptID = d.DeptID left join fl_MappingForm f on e.Movid = f.FormNo) as A,
 (select e.[Movid],e.[EmployeeID],CONVERT(varchar(100),ApplicationDate) as [ApplicationDate],CONVERT(varchar(100), [StartDate]) as [StartDate],[OldDeptID],[OldJobID],[NewDeptID],[NewJobID],[MoveType],[OldSalaryBase],[NewSalaryBase],e.[Remark],[JJRemark],[JJPerson],e.[IsActive],d.Name as NewDeptName FROM [hr_EmployeeMove] e
          inner join hr_Department d on e.NewDeptID = d.DeptID) as B
          where A.[Movid]=B.[Movid] and A.EmployeeID=@EmployeeID
        </Sql>
        <Sql Name="QueryCount" ConnectionName="Auth" Description="查询总数">
          declare @sql varchar(max)
          set @sql='SELECT count(*)
          FROM [hr_EmployeeMove] aa join
          (SELECT e2.* FROM [hr_Employee] e2 join fun_sys_GetUserDepartments('''+@UserID+''') g2 on e2.DeptID=g2.DeptID)a on aa.EmployeeID=a.EmployeeID
          left join [hr_Department] d on a.DeptID=d.DeptID
          left join [hr_Job] ob on aa.OldJobID=ob.JobID
          left join [hr_Job] nb on aa.NewJobID=nb.JobID
          left join [hr_Department] od on aa.OldDeptID =od.DeptID
          left join [hr_Company] oc on od.CompanyID=oc.CompanyID
          left join [hr_Department] nd on aa.NewDeptID =nd.DeptID
          left join [hr_Company] nc on nd.CompanyID=nc.CompanyID
          left join [fl_MappingForm] f on  f.Table_Name= ''fl_EmployeeMove'' and aa.Movid=f.FormNo
          WHERE (a.EmployeeID like '''+'%'+@EmployeeID+'%'+'''  or a.Name like '''+'%'+@EmployeeID+'%'+''')
          and a.JobID like  '''+'%'+@JobID+'%'+'''
          and a.DeptID  like  '''+'%'+@DeptID+'%'+'''
          and d.CompanyID like  '''+'%'+@CompanyID+'%'+'''
          and aa.IsActive=1
          and f.Approved=2 ';
          if(@State='已办理')
          begin
          set @sql=@sql+ 'and aa.[RealMoveDate ] is not null';
          end
          else if(@State='未办理')
          begin
          set @sql=@sql+ 'and aa.[RealMoveDate ] is null';
          end
          exec (@sql)
        </Sql>
        <Sql Name="QueryPage" ConnectionName="Auth" Description="查询分页">
          declare @sql varchar(max)
          set @sql='SELECT [Movid],aa.[EmployeeID],[OldDeptID],aa.CompanyID,[OldJobID],[NewDeptID],[NewJobID],
          CONVERT(varchar(20),[ApplicationDate]) as [ApplicationDate],
          CONVERT(varchar(20),aa.[StartDate]) as [StartDate],
          CONVERT(varchar(20),[RealMoveDate]) as [RealMoveDate],[MoveType],aa.[Remark],
          CONVERT(varchar(20),a.Birthday) as Birthday,a.Sex,a.[MobiPhone] as Telephone,a.Nation,a.CardNO,a.Marriage,a.Name as Ename,ob.Name as OldPname,nb.Name as NewPname,
          oc.Name+'+'''-'''+'+od.Name as OldDname,nc.Name+'+'''-'''+'+nd.Name as NewDname
          FROM [hr_EmployeeMove] aa  join
          (SELECT e2.* FROM [hr_Employee] e2 join fun_sys_GetUserDepartments('''+@UserID+''') g2 on e2.DeptID=g2.DeptID) a on aa.EmployeeID=a.EmployeeID
          left join [hr_Department] d on a.DeptID=d.DeptID
          left join [hr_Job] ob on aa.OldJobID=ob.JobID
          left join [hr_Job] nb on aa.NewJobID=nb.JobID
          left join [hr_Department] od on aa.OldDeptID =od.DeptID
          left join [hr_Company] oc on od.CompanyID=oc.CompanyID
          left join [hr_Department] nd on aa.NewDeptID =nd.DeptID
          left join [hr_Company] nc on nd.CompanyID=nc.CompanyID
          left join [fl_MappingForm] f on  f.Table_Name= ''fl_EmployeeMove'' and aa.Movid=f.FormNo
          WHERE  (a.EmployeeID like '''+'%'+@EmployeeID+'%'+'''  or a.Name like '''+'%'+@EmployeeID+'%'+''')
          and a.JobID like  '''+'%'+@JobID+'%'+'''
          and a.DeptID  like  '''+'%'+@DeptID+'%'+'''
          and d.CompanyID like  '''+'%'+@CompanyID+'%'+'''
          and aa.IsActive=1
          and f.Approved=2 ';
          if(@State='已办理')
          begin
          set @sql=@sql+ 'and aa.[RealMoveDate ] is not null';
          end
          else if(@State='未办理')
          begin
          set @sql=@sql+ 'and aa.[RealMoveDate ] is null';
          end
          set @sql=@sql+' order by aa.StartDate'
          SET @sql = @sql + '
          OFFSET ('+ CAST((@Page - 1) * @Rows AS varchar(10)) +') ROWS

          FETCH NEXT ' + CAST(@Rows AS varchar(10)) +' ROWS ONLY';

          exec (@sql)
        </Sql>
      </Table>
      <Table Name="hr_SalarySet" ConnectionName="Auth" TableName="hr_SalarySet">
        <Sql Name="Query" ConnectionName="Auth" Description="检索查询">
          SELECT aa.[EmployeeID],[Bank],[Account],
          convert(varchar, cast(round(BaseSalary,2) as money),1) as [BaseSalary],
          convert(varchar, cast(round(PostSalary,2) as money),1) as [PostSalary],
          convert(varchar, cast(round(Yanglaojin,2) as money),1) as [Yanglaojin],
          convert(varchar, cast(round(Yiliaojin,2) as money),1) as [Yiliaojin],
          convert(varchar, cast(round(Shiyejin,2) as money),1) as [Shiyejin],
          convert(varchar, cast(round(Gongjijin,2) as money),1) as [Gongjijin],
          convert(varchar, cast(round(Tuanfei,2) as money),1) as [Tuanfei] ,
          a.Name as Ename,a.State,a.HireDate,b.Name as Pname,c.Name as Dname,d.Name as Cname,aa.AutoKey
          FROM [hr_SalarySet] aa join
          (SELECT e2.* FROM [hr_Employee] e2 join fun_sys_GetUserDepartments(@UserID) g2 on e2.DeptID=g2.DeptID) a on aa.EmployeeID=a.EmployeeID
          left join [hr_Job] b on a.JobID=b.JobID
          left join [hr_Department] c on a.DeptID=c.DeptID
          left join [hr_Company]  d on c.CompanyID=d.CompanyID
          WHERE aa.DeptID=a.DeptID
          and aa.JobID=a.JobID
          and a.Name like '%'+@EmployeeID+'%'
          and a.JobID like '%'+@JobID+'%'
          and a.DeptID  like '%'+@DeptID+'%'
          and  c.CompanyID like '%'+ @CompanyID+'%'
        </Sql>
        <Sql Name="GetDetail" ConnectionName="Auth" Description="查询明细">
          SELECT aa.[EmployeeID],[Bank],[Account],
          convert(varchar, cast(round(BaseSalary,2) as money),1) as [BaseSalary],
          convert(varchar, cast(round(PostSalary,2) as money),1) as [PostSalary],
          convert(varchar, cast(round(Yanglaojin,2) as money),1) as [Yanglaojin],
          convert(varchar, cast(round(Yiliaojin,2) as money),1) as [Yiliaojin],
          convert(varchar, cast(round(Shiyejin,2) as money),1) as [Shiyejin],
          convert(varchar, cast(round(Gongjijin,2) as money),1) as [Gongjijin],
          convert(varchar, cast(round(Tuanfei,2) as money),1) as [Tuanfei],
          a.Name as Ename,a.State,a.HireDate,b.Name as Pname,d.Name as Cname,c.Name as Dname,aa.AutoKey
          FROM [hr_SalarySet] aa left join hr_Employee a on aa.EmployeeID=a.EmployeeID
          left join [hr_Job] b on a.JobID=b.JobID
          left join [hr_Department] c on a.DeptID=c.DeptID
          left join [hr_Company]  d on c.CompanyID=d.CompanyID
          WHERE  aa.DeptID=a.DeptID
          and aa.JobID=a.JobID
          and aa.AutoKey=@AutoKey
        </Sql>
        <Sql Name="Add" ConnectionName="Auth" Description="新增">
          declare @jobID varchar(8)
          select @jobID=JobID from hr_Employee WHERE EmployeeID=@EmployeeID
          if exists(select * from  [hr_SalarySet] WHERE [CompanyID]=@CompanyID and  [DeptID]=@DeptID and  [JobID]=@jobID and  [EmployeeID]=@EmployeeID)
          begin
          UPDATE [hr_SalarySet]
          SET  [Bank]=@Bank,[Account]=@Account,[BaseSalary]=cast(@BaseSalary as money),[PostSalary]=cast(@PostSalary as money),
          [Yanglaojin]=cast(@Yanglaojin as money),[Yiliaojin]=cast(@Yiliaojin as money),[Shiyejin]=cast(@Shiyejin as money),[Gongjijin]=cast(@Gongjijin as money),
          [Tuanfei]=cast(@Tuanfei as money),[ModifiedUser]=@ModifiedUser,[ModifiedTime]=@ModifiedTime WHERE  [EmployeeID]=@EmployeeID;
          end
          else
          begin
          INSERT INTO [hr_SalarySet]
          ([CompanyID],[DeptID],[JobID],[EmployeeID],[Bank],[Account],[BaseSalary],[PostSalary],[Yanglaojin],[Yiliaojin],[Shiyejin],[Gongjijin],[Tuanfei],[CreatedUser],[CreatedTime],[ModifiedUser],[ModifiedTime])
          VALUES(@CompanyID,@DeptID,@jobID,@EmployeeID,@Bank,@Account,cast(@BaseSalary as money),cast(@PostSalary as money),
          cast(@Yanglaojin as money),cast(@Yiliaojin as money),cast(@Shiyejin as money),cast(@Gongjijin as money),cast(@Tuanfei as money),@CreatedUser,@CreatedTime,@ModifiedUser,@ModifiedTime);
          end
          SELECT aa.[EmployeeID],[Bank],[Account],
          convert(varchar, cast(round(BaseSalary,2) as money),1) as [BaseSalary],
          convert(varchar, cast(round(PostSalary,2) as money),1) as [PostSalary],
          convert(varchar, cast(round(Yanglaojin,2) as money),1) as [Yanglaojin],
          convert(varchar, cast(round(Yiliaojin,2) as money),1) as [Yiliaojin],
          convert(varchar, cast(round(Shiyejin,2) as money),1) as [Shiyejin],
          convert(varchar, cast(round(Gongjijin,2) as money),1) as [Gongjijin],
          convert(varchar, cast(round(Tuanfei,2) as money),1) as [Tuanfei] ,
          a.Name as Ename,a.State,a.HireDate,b.Name as Pname,c.Name as Dname,d.Name as Cname,aa.AutoKey
          FROM [hr_SalarySet] aa left join hr_Employee a on aa.EmployeeID=a.EmployeeID
          left join [hr_Job] b on a.JobID=b.JobID
          left join [hr_Department] c on a.DeptID=c.DeptID
          left join [hr_Company]  d on c.CompanyID=d.CompanyID
          WHERE  aa.DeptID=a.DeptID
          and aa.JobID=a.JobID
          and aa.EmployeeID=@EmployeeID
        </Sql>
        <Sql Name="Info" ConnectionName="Auth" Description="新增获取已有信息">
          SELECT  a.EmployeeID,[Bank],[Account],
          convert(varchar, cast(round(BaseSalary,2) as money),1) as [BaseSalary],
          convert(varchar, cast(round(PostSalary,2) as money),1) as [PostSalary],
          convert(varchar, cast(round(Yanglaojin,2) as money),1) as [Yanglaojin],
          convert(varchar, cast(round(Yiliaojin,2) as money),1) as [Yiliaojin],
          convert(varchar, cast(round(Shiyejin,2) as money),1) as [Shiyejin],
          convert(varchar, cast(round(Gongjijin,2) as money),1) as [Gongjijin],
          convert(varchar, cast(round(Tuanfei,2) as money),1) as [Tuanfei],
          a.State,convert(varchar(20),HireDate) as HireDate,b.Name as Pname,c.DeptID,d.CompanyID,aa.AutoKey
          FROM  hr_Employee a left join [hr_SalarySet] aa on a.EmployeeID=aa.EmployeeID and a.DeptID=aa.DeptID and a.JobID=aa.JobID
          left join [hr_Job] b on a.JobID=b.JobID
          left join [hr_Department] c on a.DeptID=c.DeptID
          left join [hr_Company]  d on c.CompanyID=d.CompanyID
          WHERE a.EmployeeID=@EmployeeID
        </Sql>
        <Sql Name="GetEdit" ConnectionName="Auth" Description="查询编辑">
          SELECT aa.[EmployeeID],[Bank],[Account],
          convert(varchar, cast(round(BaseSalary,2) as money),1) as [BaseSalary],
          convert(varchar, cast(round(PostSalary,2) as money),1) as [PostSalary],
          convert(varchar, cast(round(Yanglaojin,2) as money),1) as [Yanglaojin],
          convert(varchar, cast(round(Yiliaojin,2) as money),1) as [Yiliaojin],
          convert(varchar, cast(round(Shiyejin,2) as money),1) as [Shiyejin],
          convert(varchar, cast(round(Gongjijin,2) as money),1) as [Gongjijin],
          convert(varchar, cast(round(Tuanfei,2) as money),1) as [Tuanfei] ,
          a.Name as Ename,a.State,a.HireDate,b.Name as Pname,d.Name as Cname,c.Name as Dname,aa.AutoKey
          FROM [hr_SalarySet] aa left join hr_Employee a on aa.EmployeeID=a.EmployeeID
          left join [hr_Job] b on a.JobID=b.JobID
          left join [hr_Department] c on a.DeptID=c.DeptID
          left join [hr_Company]  d on c.CompanyID=d.CompanyID
          WHERE  aa.DeptID=a.DeptID
          and aa.JobID=a.JobID
          and aa.AutoKey=@AutoKey
        </Sql>
        <Sql Name="Update" ConnectionName="Auth" Description="更新">

          UPDATE [hr_SalarySet]
          SET [Bank]=@Bank,[Account]=@Account,[BaseSalary]=cast(@BaseSalary as money),[PostSalary]=cast(@PostSalary as money),
          [Yanglaojin]=cast(@Yanglaojin as money),[Yiliaojin]=cast(@Yiliaojin as money),[Shiyejin]=cast(@Shiyejin as money),
          [Gongjijin]=cast(@Gongjijin as money),[Tuanfei]=cast(@Tuanfei as money),
          [ModifiedUser]=@ModifiedUser,[ModifiedTime]=@ModifiedTime WHERE   [AutoKey]=@AutoKey;
          SELECT aa.[EmployeeID],[Bank],[Account],
          convert(varchar, cast(round(BaseSalary,2) as money),1) as [BaseSalary],
          convert(varchar, cast(round(PostSalary,2) as money),1) as [PostSalary],
          convert(varchar, cast(round(Yanglaojin,2) as money),1) as [Yanglaojin],
          convert(varchar, cast(round(Yiliaojin,2) as money),1) as [Yiliaojin],
          convert(varchar, cast(round(Shiyejin,2) as money),1) as [Shiyejin],
          convert(varchar, cast(round(Gongjijin,2) as money),1) as [Gongjijin],
          convert(varchar, cast(round(Tuanfei,2) as money),1) as [Tuanfei] ,
          a.Name as Ename,a.State,a.HireDate,b.Name as Pname,c.Name as Dname,d.Name as Cname,aa.AutoKey
          FROM [hr_SalarySet] aa left join hr_Employee a on aa.EmployeeID=a.EmployeeID
          left join [hr_Job] b on a.JobID=b.JobID
          left join [hr_Department] c on a.DeptID=c.DeptID
          left join [hr_Company]  d on c.CompanyID=d.CompanyID
          WHERE  aa.DeptID=a.DeptID
          and aa.JobID=a.JobID
          and aa.AutoKey=@AutoKey
        </Sql>
        <Sql Name="UpdateP" ConnectionName="Auth" Description="批量更新">
          DECLARE @sql varchar(max);
          DECLARE @upd varchar(500);
          SET @upd='';

          IF(len(@Yanglaojin)&gt;0)
          BEGIN
          SET @upd= @upd+ '[Yanglaojin]='''+@Yanglaojin+''',';
          END
          IF(len(@Yiliaojin)&gt;0)
          BEGIN
          SET @upd= @upd+ '[Yiliaojin]='''+@Yiliaojin+''',';
          END

          IF(len(@Shiyejin)&gt;0)
          BEGIN
          SET @upd= @upd+ '[Shiyejin]='''+@Shiyejin+''',';
          END

          IF(len(@Gongjijin)&gt;0)
          BEGIN
          SET @upd= @upd+ '[Gongjijin]='''+@Gongjijin+''',';
          END

          IF(len(@Tuanfei)&gt;0)
          BEGIN
          SET @upd= @upd+ '[Tuanfei]='''+@Tuanfei+''',';
          END
          IF(LEN(@upd)&gt;0)
          BEGIN
          SET @sql =
          'UPDATE [hr_SalarySet]set '+ @upd+
          '[ModifiedUser]='''+@ModifiedUser+''',[ModifiedTime]='''+@ModifiedTime+'''  WHERE [AutoKey] in (''' + REPLACE(@AutoKey,',',''',''') + ''')
          SELECT [EmployeeID],[Bank],[Account],
          convert(varchar, cast(round(BaseSalary,2) as money),1) as [BaseSalary],
          convert(varchar, cast(round(PostSalary,2) as money),1) as [PostSalary],
          convert(varchar, cast(round(Yanglaojin,2) as money),1) as [Yanglaojin],
          convert(varchar, cast(round(Yiliaojin,2) as money),1) as [Yiliaojin],
          convert(varchar, cast(round(Shiyejin,2) as money),1) as [Shiyejin],
          convert(varchar, cast(round(Gongjijin,2) as money),1) as [Gongjijin],
          convert(varchar, cast(round(Tuanfei,2) as money),1) as [Tuanfei]
          FROM [hr_SalarySet]
          WHERE [AutoKey] in (''' + REPLACE(@AutoKey,',',''',''') + ''')'
          EXEC (@sql);
          END
          ELSE
          BEGIN
          RAISERROR('数据为空，更新失败',15,1) WITH NOWAIT
          END
        </Sql>
        <Sql Name="Delete" ConnectionName="Auth" Description="删除">
          DECLARE @sql varchar(max);
          SET @sql= 'DELETE FROM [hr_SalarySet] WHERE [AutoKey] in (''' + REPLACE(@AutoKey,',',''',''') + ''')';
          EXEC (@sql);
        </Sql>
        <Sql Name="GetCompany" ConnectionName="Auth" SqlType="Scalar" Description="根据AutoKey获取公司">select a.CompanyID from hr_SalarySet aa left join  hr_Employee a on aa.EmployeeID=a.EmployeeID where aa.AutoKey=@AutoKey</Sql>
        <Sql Name="QueryCount" ConnectionName="Auth" Description="查询总数">
          SELECT count(*)
          FROM [hr_SalarySet] aa join
          (SELECT e2.* FROM [hr_Employee] e2 join fun_sys_GetUserDepartments(@UserID) g2 on e2.DeptID=g2.DeptID) a on aa.EmployeeID=a.EmployeeID
          left join [hr_Job] b on a.JobID=b.JobID
          left join [hr_Department] c on a.DeptID=c.DeptID
          left join [hr_Company]  d on c.CompanyID=d.CompanyID
          WHERE aa.DeptID=a.DeptID
          and aa.JobID=a.JobID
          and (a.Name like '%'+@EmployeeID+'%' or a.EmployeeID like '%'+@EmployeeID+'%')
          and a.JobID like '%'+@JobID+'%'
          and a.DeptID  like '%'+@DeptID+'%'
          and  c.CompanyID like '%'+ @CompanyID+'%'
        </Sql>
        <Sql Name="QueryPage" ConnectionName="Auth" Description="查询分页">
          SELECT aa.[EmployeeID],[Bank],[Account],
          convert(varchar, cast(round(BaseSalary,2) as money),1) as [BaseSalary],
          convert(varchar, cast(round(PostSalary,2) as money),1) as [PostSalary],
          convert(varchar, cast(round(Yanglaojin,2) as money),1) as [Yanglaojin],
          convert(varchar, cast(round(Yiliaojin,2) as money),1) as [Yiliaojin],
          convert(varchar, cast(round(Shiyejin,2) as money),1) as [Shiyejin],
          convert(varchar, cast(round(Gongjijin,2) as money),1) as [Gongjijin],
          convert(varchar, cast(round(Tuanfei,2) as money),1) as [Tuanfei] ,
          a.Name as Ename,a.State,a.HireDate,b.Name as Pname,c.Name as Dname,d.Name as Cname,aa.AutoKey
          FROM [hr_SalarySet] aa join
          (SELECT e2.* FROM [hr_Employee] e2 join fun_sys_GetUserDepartments(@UserID) g2 on e2.DeptID=g2.DeptID)a on aa.EmployeeID=a.EmployeeID
          left join [hr_Job] b on a.JobID=b.JobID
          left join [hr_Department] c on a.DeptID=c.DeptID
          left join [hr_Company]  d on c.CompanyID=d.CompanyID
          WHERE aa.DeptID=a.DeptID
          and aa.JobID=a.JobID
          and  (a.Name like '%'+@EmployeeID+'%' or a.EmployeeID like '%'+@EmployeeID+'%')
          and a.JobID like '%'+@JobID+'%'
          and a.DeptID  like '%'+@DeptID+'%'
          and  c.CompanyID like '%'+ @CompanyID+'%'
          order by aa.ModifiedTime desc
          OFFSET ((CAST(@Page as int)-1)*CAST(@Rows as int)) Rows FETCH NEXT CAST(@Rows as int) ROWS ONLY;
        </Sql>
      </Table>
      <Table Name="hr_TaxSet" ConnectionName="Auth" TableName="hr_TaxSet">
        <Sql Name="Add" ConnectionName="Auth" Description="增加税率设定">
          INSERT INTO [hr_TaxSet]
          ([TSID],[TaxUp],[TaxDn],[Tax],[QuickDeduction],[IsActive],[CreatedUser],[CreatedTime],[ModifiedUser],[ModifiedTime])
          VALUES(@TSID,@TaxUp,@TaxDn,@Tax,@QuickDeduction,@IsActive,@CreatedUser,@CreatedTime,@ModifiedUser,@ModifiedTime);
          SELECT [TSID],convert(varchar, cast(round(TaxUp,2) as money),1) as [TaxUp],convert(varchar, cast(round(TaxDn,2) as money),1) as [TaxDn],[Tax],convert(varchar, cast(round(QuickDeduction,2) as money),1) as [QuickDeduction],[IsActive],[CreatedUser],[CreatedTime],[ModifiedUser],[ModifiedTime],[AutoKey] FROM [hr_TaxSet]
          WHERE [AutoKey]=scope_identity() and [IsActive]=1
        </Sql>
        <Sql Name="Update" ConnectionName="Auth" SqlType="Execute" Description="更新税率设定">
          UPDATE [hr_TaxSet]
          SET  [TSID]=@TSID,[TaxUp]=@TaxUp,[TaxDn]=@TaxDn,[Tax]=@Tax,[QuickDeduction]=@QuickDeduction,[ModifiedUser]=@ModifiedUser,[ModifiedTime]=@ModifiedTime WHERE [TSID]=@TSID;
          SELECT [TSID],convert(varchar, cast(round(TaxUp,2) as money),1) as [TaxUp],convert(varchar, cast(round(TaxDn,2) as money),1) as [TaxDn],[Tax],convert(varchar, cast(round(QuickDeduction,2) as money),1) as [QuickDeduction],[IsActive],[CreatedUser],[CreatedTime],[ModifiedUser],[ModifiedTime],[AutoKey] FROM [hr_TaxSet]
          Where [TSID]=@TSID and [IsActive]=1
        </Sql>
        <Sql Name="Delete" ConnectionName="Auth" SqlType="Execute" Description="删除税率设定">
          declare @sql varchar(max);

          set @sql='UPDATE [hr_TaxSet]
          SET [ModifiedUser]='''+@ModifiedUser+''',[ModifiedTime]='''+@ModifiedTime+''',[IsActive]=0 WHERE [TSID] in ('''+replace(@TSIDs,',',''',''')+''') ;'
          exec(@sql);
        </Sql>
        <Sql Name="GetItem" ConnectionName="Auth" SqlType="Execute" Description="查询税率设定明细/编辑">
          SELECT [TSID],convert(varchar, cast(round(TaxUp,2) as money),1) as [TaxUp],convert(varchar, cast(round(TaxDn,2) as money),1) as [TaxDn],[Tax],convert(varchar, cast(round(QuickDeduction,2) as money),1) as [QuickDeduction],[IsActive],[CreatedUser],[CreatedTime],[ModifiedUser],[ModifiedTime],[AutoKey] FROM [hr_TaxSet]
          WHERE [TSID]=@TSID;
        </Sql>
        <Sql Name="Query" ConnectionName="Auth" Description="检索税率设定">
          SELECT [TSID],convert(varchar, cast(round(TaxUp,2) as money),1) as [TaxUp],convert(varchar, cast(round(TaxDn,2) as money),1) as [TaxDn],[Tax],convert(varchar, cast(round(QuickDeduction,2) as money),1) as [QuickDeduction],[IsActive],[CreatedUser],[CreatedTime],[ModifiedUser],[ModifiedTime],[AutoKey] FROM [hr_TaxSet]
          where [TaxUp] like '%'+@TaxUp+'%' and [TaxDn] like '%'+@TaxDn+'%' and [Tax] like '%'+@Tax+'%' and [IsActive]=1
        </Sql>
        <Sql Name="QueryCount" ConnectionName="Auth" Description="查询总数">
          SELECT count(*) FROM [hr_TaxSet]
          where [TaxUp] like '%'+@TaxUp+'%' and [TaxDn] like '%'+@TaxDn+'%' and [Tax] like '%'+@Tax+'%' and [IsActive]=1
        </Sql>
        <Sql Name="QueryPage" ConnectionName="Auth" Description="查询分页">
          SELECT [TSID],convert(varchar, cast(round(TaxUp,2) as money),1) as [TaxUp],convert(varchar, cast(round(TaxDn,2) as money),1) as [TaxDn],[Tax],convert(varchar, cast(round(QuickDeduction,2) as money),1) as [QuickDeduction],[IsActive],[CreatedUser],[CreatedTime],[ModifiedUser],[ModifiedTime],[AutoKey] FROM [hr_TaxSet]
          where [TaxUp] like '%'+@TaxUp+'%' and [TaxDn] like '%'+@TaxDn+'%' and [Tax] like '%'+@Tax+'%' and [IsActive]=1 order by ModifiedTime desc
          OFFSET ((CAST(@Page as int)-1)*CAST(@Rows as int)) Rows FETCH NEXT CAST(@Rows as int) ROWS ONLY;
        </Sql>
      </Table>
      <Table Name="hr_PayrollRule" ConnectionName="Auth" TableName="hr_PayrollRule">
        <Sql Name="Add" ConnectionName="Auth" Description="新增工资规则设定">
          declare @i int
          select @i=count(*) from [hr_PayrollRule] where [CompanyID]=@CompanyID;
          if(@i&gt;0)
          begin
          RAISERROR ('该公司工资规则已经存在，信息添加失败！',15, 1) WITH NOWAIT
          end
          else
          begin
          INSERT INTO [hr_PayrollRule]
          ([CompanyID],[SickUpDays],[SickDeductionsRatio],[PerfectAttendanceBase],[MealBase],[LeaveUp],[OutUp],[KGKKBase],[MonthWorks],[IsActive],[CreatedUser],[CreatedTime],[ModifiedUser],[ModifiedTime])
          VALUES(@CompanyID,@SickUpDays,@SickDeductionsRatio,@PerfectAttendanceBase,@MealBase,@LeaveUp,@OutUp,@KGKKBase,@MonthWorks,@IsActive,@CreatedUser,@CreatedTime,@ModifiedUser,@ModifiedTime);
          SELECT a.[CompanyID],a.[SickUpDays],a.[SickDeductionsRatio],convert(varchar, cast(round(a.[PerfectAttendanceBase],2) as money),1) as [PerfectAttendanceBase],convert(varchar, cast(round(a.[MealBase],2) as money),1) as [MealBase],a.[LeaveUp],convert(varchar, cast(round(a.[OutUp],2) as money),1) as [OutUp],a.[KGKKBase],a.[MonthWorks],a.[IsActive],a.[SortID],b.[Name]
          FROM [hr_PayrollRule]a left join [hr_Company] b on a.[CompanyID]=b.[CompanyID]
          WHERE a.[AutoKey]=scope_identity();
          end
        </Sql>
        <Sql Name="Update" ConnectionName="Auth" SqlType="Execute" Description="更新工资规则设定">
          UPDATE [hr_PayrollRule]
          SET [CompanyID]=@CompanyID,[SickUpDays]=@SickUpDays,[SickDeductionsRatio]=@SickDeductionsRatio,[PerfectAttendanceBase]=@PerfectAttendanceBase,[MealBase]=@MealBase,[LeaveUp]=@LeaveUp,[OutUp]=@OutUp,[KGKKBase]=@KGKKBase,[MonthWorks]=@MonthWorks,[ModifiedUser]=@ModifiedUser,[ModifiedTime]=@ModifiedTime WHERE [CompanyID]=@CompanyID;
          SELECT a.[CompanyID],a.[SickUpDays],a.[SickDeductionsRatio],convert(varchar, cast(round(a.[PerfectAttendanceBase],2) as money),1) as [PerfectAttendanceBase],convert(varchar, cast(round(a.[MealBase],2) as money),1) as [MealBase],a.[LeaveUp],convert(varchar, cast(round(a.[OutUp],2) as money),1) as [OutUp],a.[KGKKBase],a.[MonthWorks],a.[IsActive],a.[SortID],b.[Name]
          FROM [hr_PayrollRule]a left join [hr_Company] b on a.[CompanyID]=b.[CompanyID]
          WHERE a.[CompanyID]=@CompanyID;
        </Sql>
        <Sql Name="Delete" ConnectionName="Auth" SqlType="Execute" Description="删除工资规则设定">
          DECLARE @sql varchar(max);
          SET @sql= ' DELETE FROM [hr_PayrollRule]
          WHERE [CompanyID] in ('''+replace(@CompanyID,',',''',''')+''') ; '
          EXEC (@sql)
        </Sql>
        <Sql Name="GetEdit" ConnectionName="Auth" Description="查询工资规则设定编辑">
          SELECT a.[CompanyID],a.[SickUpDays],a.[SickDeductionsRatio],convert(varchar, cast(round(a.[PerfectAttendanceBase],2) as money),1) as [PerfectAttendanceBase],convert(varchar, cast(round(a.[MealBase],2) as money),1) as [MealBase],a.[LeaveUp],convert(varchar, cast(round(a.[OutUp],2) as money),1) as [OutUp],a.[KGKKBase],a.[MonthWorks],a.[IsActive],a.[SortID],b.[Name]
          FROM [hr_PayrollRule]a left join [hr_Company] b on a.[CompanyID]=b.[CompanyID]
          WHERE a.[CompanyID]=@CompanyID
        </Sql>
        <Sql Name="Query" ConnectionName="Auth" Description="检索工资规则设定">
          SELECT a.[CompanyID],a.[SickUpDays],a.[SickDeductionsRatio],convert(varchar, cast(round(a.[PerfectAttendanceBase],2) as money),1) as [PerfectAttendanceBase],convert(varchar, cast(round(a.[MealBase],2) as money),1) as [MealBase],a.[LeaveUp],convert(varchar, cast(round(a.[OutUp],2) as money),1) as [OutUp],a.[KGKKBase],a.[MonthWorks],a.[IsActive],a.[SortID],b.[Name]
          FROM [hr_PayrollRule]a left join [hr_Company] b on a.[CompanyID]=b.[CompanyID]
          where a.[CompanyID] like '%'+@CompanyID+'%'  and a.IsActive=1
        </Sql>
        <Sql Name="GetDetail" ConnectionName="Auth" Description="查询工资规则设定明细">
          SELECT a.[CompanyID],a.[SickUpDays],a.[SickDeductionsRatio],convert(varchar, cast(round(a.[PerfectAttendanceBase],2) as money),1) as [PerfectAttendanceBase],convert(varchar, cast(round(a.[MealBase],2) as money),1) as [MealBase],a.[LeaveUp],convert(varchar, cast(round(a.[OutUp],2) as money),1) as [OutUp],a.[KGKKBase],a.[MonthWorks],a.[IsActive],a.[SortID],b.[Name]
          FROM [hr_PayrollRule]a left join [hr_Company] b on a.[CompanyID]=b.[CompanyID]
          WHERE a.[CompanyID]=@CompanyID
        </Sql>
        <Sql Name="QueryCount" ConnectionName="Auth" Description="查询总数">
          SELECT count(*)
          FROM [hr_PayrollRule]a join (SELECT c.* FROM [hr_Company] c join fun_sys_GetUserCompanys(@UserID) g on c.CompanyID=g.CompanyID) b on a.[CompanyID]=b.[CompanyID]
          where a.[CompanyID] like '%'+@CompanyID+'%'  and a.IsActive=1
        </Sql>
        <Sql Name="QueryPage" ConnectionName="Auth" Description="查询分页">
          SELECT a.[CompanyID],a.[SickUpDays],a.[SickDeductionsRatio],convert(varchar, cast(round(a.[PerfectAttendanceBase],2) as money),1) as [PerfectAttendanceBase],convert(varchar, cast(round(a.[MealBase],2) as money),1) as [MealBase],a.[LeaveUp],convert(varchar, cast(round(a.[OutUp],2) as money),1) as [OutUp],a.[KGKKBase],a.[MonthWorks],a.[IsActive],a.[SortID],b.[Name]
          FROM [hr_PayrollRule]a join (SELECT c.* FROM [hr_Company] c join fun_sys_GetUserCompanys(@UserID) g on c.CompanyID=g.CompanyID) b on a.[CompanyID]=b.[CompanyID]
          where a.[CompanyID] like '%'+@CompanyID+'%'  and a.IsActive=1
          Order By  a.ModifiedTime desc
          OFFSET ((CAST(@Page as int)-1)*CAST(@Rows as int)) Rows FETCH NEXT CAST(@Rows as int) ROWS ONLY;
        </Sql>
      </Table>
      <Table Name="hr_EmployeeJob" ConnectionName="Auth" TableName="hr_EmployeeJob">
        <Sql Name="Query" ConnectionName="Auth" Description="检索查询">
          SELECT a.[EjbID],a.[EmployeeID],a.[CompanyName],a.[DepartmentName],a.[Position], CONVERT(nvarchar(20),a.[StartDate])as [StartDate],CONVERT(nvarchar(20),a.[EndDate]) as [EndDate],a.[ManagerName],a.[ManagerPhone],a.[LeaveReson],b.Name FROM [hr_EmployeeJob] a
          left join [hr_Employee] b on a.EmployeeID=b.EmployeeID
          WHERE b.[UserID] =@UserID order by a.[StartDate];
        </Sql>
        <Sql Name="GetDetail" ConnectionName="Auth" Description="查询明细">

          SELECT a.[EjbID],a.[EmployeeID],a.[CompanyName],a.[DepartmentName],a.[Position], CONVERT(nvarchar(20),a.[StartDate])as [StartDate],CONVERT(nvarchar(20),a.[EndDate]) as [EndDate],a.[ManagerName],a.[ManagerPhone],a.[LeaveReson],b.Name FROM [hr_EmployeeJob] a left join [hr_Employee] b on a.EmployeeID=b.EmployeeID   WHERE a.[EjbID]=@EjbID
        </Sql>
        <Sql Name="Add" ConnectionName="Auth" Description="新增">
          if(CONVERT(nvarchar(20),CONVERT(datetime,@StartDate),23)&gt;CONVERT(nvarchar(20),CONVERT(datetime,@EndDate),23))
          begin
          raiserror('结束日期时间不能早于起始日期',16,1) with nowait
          end
          else
          begin
          if exists(select * from [hr_EmployeeJob] where [EmployeeID]=@EmployeeID and [CompanyName]=@CompanyName and [DepartmentName]=@DepartmentName  and [Position] = @Position)
          begin
          RAISERROR ('已经存在相同信息，无法保存！',15, 1) WITH NOWAIT
          end
          else
          begin
          INSERT INTO [hr_EmployeeJob]
          ([EjbID],[EmployeeID],[CompanyName],[DepartmentName],[Position],[StartDate],[EndDate],[ManagerName],[ManagerPhone],[LeaveReson],[CreatedUser],[CreatedTime],[ModifiedUser],[ModifiedTime])
          VALUES(@EjbID,@EmployeeID,@CompanyName,@DepartmentName,@Position,@StartDate,@EndDate,@ManagerName,@ManagerPhone,@LeaveReson,@CreatedUser,@CreatedTime,@ModifiedUser,@ModifiedTime);
          SELECT a.[EjbID],a.[EmployeeID],a.[CompanyName],a.[DepartmentName],a.[Position], CONVERT(nvarchar(20),a.[StartDate])as [StartDate],CONVERT(nvarchar(20),a.[EndDate]) as [EndDate],a.[ManagerName],a.[ManagerPhone],a.[LeaveReson],b.Name FROM [hr_EmployeeJob] a left join [hr_Employee] b on a.EmployeeID=b.EmployeeID   WHERE a.[AutoKey]=scope_identity()
          end
          end
        </Sql>
        <Sql Name="GetEdit" ConnectionName="Auth" Description="查询编辑">
          SELECT a.[EjbID],a.[EmployeeID],a.[CompanyName],a.[DepartmentName],a.[Position], CONVERT(nvarchar(20),a.[StartDate])as [StartDate],CONVERT(nvarchar(20),a.[EndDate]) as [EndDate],a.[ManagerName],a.[ManagerPhone],a.[LeaveReson],b.Name FROM [hr_EmployeeJob] a left join [hr_Employee] b on a.EmployeeID=b.EmployeeID   WHERE a.[EjbID]=@EjbID
        </Sql>
        <Sql Name="Update" ConnectionName="Auth" Description="更新">
          if(CONVERT(nvarchar(20),CONVERT(datetime,@StartDate),23)&gt;CONVERT(nvarchar(20),CONVERT(datetime,@EndDate),23))
          begin
          raiserror('结束日期时间不能早于起始日期',16,1) with nowait
          end
          else
          begin
          if exists(select * from [hr_EmployeeJob] where [EmployeeID]=@EmployeeID and [CompanyName]=@CompanyName and [DepartmentName] = @DepartmentName  and [Position] = @Position and [EjbID] != @EjbID)
          begin
          RAISERROR ('已经存在相同信息，无法保存！',15, 1) WITH NOWAIT
          end
          else
          begin
          UPDATE [hr_EmployeeJob] SET [CompanyName]=@CompanyName,[DepartmentName]=@DepartmentName,[Position]=@Position,[StartDate]=@StartDate,[EndDate]=@EndDate,[ManagerName]=@ManagerName,[ManagerPhone]=@ManagerPhone,[LeaveReson]=@LeaveReson,[ModifiedUser]=@ModifiedUser,[ModifiedTime]=@ModifiedTime WHERE [EjbID]=@EjbID;
          SELECT a.[EjbID],a.[EmployeeID],a.[CompanyName],a.[DepartmentName],a.[Position], CONVERT(nvarchar(20),a.[StartDate])as [StartDate],CONVERT(nvarchar(20),a.[EndDate]) as [EndDate],a.[ManagerName],a.[ManagerPhone],a.[LeaveReson],b.Name FROM [hr_EmployeeJob] a left join [hr_Employee] b on a.EmployeeID=b.EmployeeID   WHERE a.[EjbID]=@EjbID
          end
          end
        </Sql>
        <Sql Name="Delete" ConnectionName="Auth" Description="删除">
          DECLARE @sql varchar(max);
          SET @sql= 'DELETE FROM [hr_EmployeeJob] WHERE [EjbID] in (''' + REPLACE(@EjbID,',',''',''') + ''');'
          EXEC (@sql)
        </Sql>
        <Sql Name="QueryCount" ConnectionName="Auth" Description="查询总数">
          SELECT count(*) FROM [hr_EmployeeJob] a
          left join [hr_Employee] b on a.EmployeeID=b.EmployeeID
          WHERE b.[UserID] =@UserID;
        </Sql>
        <Sql Name="QueryPage" ConnectionName="Auth" Description="查询页面">
          SELECT a.[EjbID],a.[EmployeeID],a.[CompanyName],a.[DepartmentName],a.[Position], CONVERT(nvarchar(20),a.[StartDate])as [StartDate],CONVERT(nvarchar(20),a.[EndDate]) as [EndDate],a.[ManagerName],a.[ManagerPhone],a.[LeaveReson],b.Name FROM [hr_EmployeeJob] a
          left join [hr_Employee] b on a.EmployeeID=b.EmployeeID
          WHERE b.[UserID] =@UserID order by a.[EjbID]
          OFFSET ((CAST(@Page as int)-1)*CAST(@Rows as int)) Rows FETCH NEXT CAST(@Rows as int) ROWS ONLY;
        </Sql>
      </Table>
      <Table Name="hr_EmployeeEducation" ConnectionName="Auth" TableName="hr_EmployeeEducation">
        <Sql Name="Query" ConnectionName="Auth" Description="检索查询">
          SELECT a.[EduID],a.[EmployeeID],a.[EduDegree],a.[EduName], CONVERT(nvarchar(20),a.[StartDate]) as [StartDate],CONVERT(nvarchar(20),a.[EndDate]) as [EndDate],a.[Major],a.[Certificate],a.[EduType],b.Name FROM [hr_EmployeeEducation] a
          left join [hr_Employee] b on a.EmployeeID = b.EmployeeID
          WHERE b.[UserID] =@UserID order by a.[StartDate];
        </Sql>
        <Sql Name="GetDetail" ConnectionName="Auth" Description="查询明细">
          SELECT a.[EduID],a.[EmployeeID],a.[EduDegree],a.[EduName], CONVERT(nvarchar(20),a.[StartDate])as [StartDate],CONVERT(nvarchar(20),a.[EndDate]) as [EndDate],a.[Major],a.[Certificate],a.[EduType],b.Name FROM [hr_EmployeeEducation] a left join [hr_Employee] b on a.EmployeeID=b.EmployeeID
          WHERE a.[EduID]=@EduID
        </Sql>
        <Sql Name="Add" ConnectionName="Auth" Description="新增">
          if(CONVERT(date,@StartDate)&gt;CONVERT(date,@EndDate))
          begin
          raiserror('结束日期时间不能早于起始日期',16,1) with nowait
          end
          else
          begin
          if exists(select * from [hr_EmployeeEducation] where [EmployeeID]=@EmployeeID and [EduName]=@EduName and [Major]=@Major and @EduDegree=@EduDegree)
          begin
          RAISERROR ('已经存在相同信息，无法保存！',15, 1) WITH NOWAIT
          end
          else
          begin
          INSERT INTO [hr_EmployeeEducation]
          ([EduID],[EmployeeID],[EduDegree],[EduName],[StartDate],[EndDate],[Major],[Certificate],[EduType],[CreatedUser],[CreatedTime],[ModifiedUser],[ModifiedTime])
          VALUES(@EduID,@EmployeeID,@EduDegree,@EduName,@StartDate,@EndDate,@Major,@Certificate,@EduType,@CreatedUser,@CreatedTime,@ModifiedUser,@ModifiedTime);
          SELECT a.[EduID],a.[EmployeeID],a.[EduDegree],a.[EduName], CONVERT(nvarchar(20),a.[StartDate])as [StartDate],CONVERT(nvarchar(20),a.[EndDate]) as [EndDate],a.[Major],a.[Certificate],a.[EduType],b.Name FROM [hr_EmployeeEducation] a left join [hr_Employee] b on a.EmployeeID=b.EmployeeID
          WHERE a.[AutoKey]=scope_identity()
          end
          end
        </Sql>
        <Sql Name="GetEdit" ConnectionName="Auth" Description="查询编辑">
          SELECT a.[EduID],a.[EmployeeID],a.[EduDegree],a.[EduName], CONVERT(nvarchar(20),a.[StartDate])as [StartDate],CONVERT(nvarchar(20),a.[EndDate]) as [EndDate],a.[Major],a.[Certificate],a.[EduType],b.Name FROM [hr_EmployeeEducation] a left join [hr_Employee] b on a.EmployeeID=b.EmployeeID
          WHERE a.[EduID]=@EduID
        </Sql>
        <Sql Name="Update" ConnectionName="Auth" Description="更新">
          if(CONVERT(date,@StartDate)&gt;CONVERT(date,@EndDate))
          begin
          raiserror('结束日期时间不能早于起始日期',16,1) with nowait
          end
          else
          begin
          if exists(select * from [hr_EmployeeEducation] where [EmployeeID]=@EmployeeID and [EduName]=@EduName and [Major] = @Major and @EduDegree=@EduDegree and [EduID] != @EduID)
          begin
          RAISERROR ('已经存在相同信息，无法保存！',15, 1) WITH NOWAIT
          end
          else
          begin
          UPDATE [hr_EmployeeEducation] SET [EduDegree]=@EduDegree,[EduName]=@EduName,[StartDate]=@StartDate,[EndDate]=@EndDate,[Major]=@Major,[Certificate]=@Certificate,[EduType]=@EduType,[ModifiedUser]=@ModifiedUser,[ModifiedTime]=@ModifiedTime WHERE [EduID]=@EduID;
          SELECT a.[EduID],a.[EmployeeID],a.[EduDegree],a.[EduName], CONVERT(nvarchar(20),a.[StartDate])as [StartDate],CONVERT(nvarchar(20),a.[EndDate]) as [EndDate],a.[Major],a.[Certificate],a.[EduType],b.Name FROM [hr_EmployeeEducation] a left join [hr_Employee] b on a.EmployeeID=b.EmployeeID
          WHERE a.[EduID]=@EduID
          end
          end
        </Sql>
        <Sql Name="Delete" ConnectionName="Auth" Description="删除">
          DECLARE @sql varchar(max);
          SET @sql= 'DELETE FROM [hr_EmployeeEducation] WHERE [EduID] in (''' + REPLACE(@EduID,',',''',''') + ''');'
          EXEC (@sql)
        </Sql>
        <Sql Name="QueryCount" ConnectionName="Auth" Description="查询总数">
          SELECT count(*) FROM [hr_EmployeeEducation] a
          left join [hr_Employee] b on a.EmployeeID = b.EmployeeID
          WHERE b.[UserID] =@UserID ;
        </Sql>
        <Sql Name="QueryPage" ConnectionName="Auth" Description="查询分页">
          SELECT a.[EduID],a.[EmployeeID],a.[EduDegree],a.[EduName], CONVERT(nvarchar(20),a.[StartDate]) as [StartDate],CONVERT(nvarchar(20),a.[EndDate]) as [EndDate],a.[Major],a.[Certificate],a.[EduType],b.Name FROM [hr_EmployeeEducation] a
          left join [hr_Employee] b on a.EmployeeID = b.EmployeeID
          WHERE b.[UserID] =@UserID order by a.[StartDate]
          OFFSET ((CAST(@Page as int)-1)*CAST(@Rows as int)) Rows FETCH NEXT CAST(@Rows as int) ROWS ONLY;;
        </Sql>
      </Table>
      <Table Name="hr_AbnormalAttendance" ConnectionName="Auth" TableName="hr_AbnormalAttendance">
        <Sql Name="Add" ConnectionName="Auth" Description="新增">
          if(DATEDIFF(MINUTE,CONVERT(datetime,@StartDate),CONVERT(datetime,@EndDate))&lt;0)
          begin
          raiserror('结束时间不能早于开始时间',15,1)
          end
          else if(CONVERT(date,@StartDate)&lt;&gt;CONVERT(date,@EndDate))
          begin
          raiserror('开始时间、结束时间必须属于同一天',15,1)
          end
          else
          begin
          INSERT INTO [hr_AbnormalAttendance]
          ([AAID],[EmployeeID],[CompanyID],[DeptID],[JobID],[ApplicationDate],[StartDate],[EndDate],[ApplicationHours],[ThrowableType],[Reason],[IsActive],[CreatedUser],[CreatedTime],[ModifiedUser],[ModifiedTime])
          VALUES(@AAID,@EmployeeID,@CompanyID,@DeptID,@JobID,@ApplicationDate,@StartDate,@EndDate,@ApplicationHours,@ThrowableType,@Reason,@IsActive,@CreatedUser,@CreatedTime,@ModifiedUser,@ModifiedTime);
          SELECT [AAID],[EmployeeID],[DeptID],[JobID],
          CONVERT(nvarchar(30),[ApplicationDate])as [ApplicationDate],
          CONVERT(varchar(30), [StartDate], 20) as [StartDate],
          CONVERT(varchar(30), [EndDate], 20)  as [EndDate],[ApplicationHours],
          [ThrowableType],[Reason],
          case when Approved=0 then '已驳回' when Approved=1 then '申请中' when Approved=2 then '已核准' else '草稿' end as Approved
          FROM [hr_AbnormalAttendance] a left join fl_mappingform b on  a.AAID=b.FormNo and Table_Name='fl_AbnormalAttendance'
          WHERE [AutoKey]=scope_identity();
          end
        </Sql>
        <Sql Name="Update" ConnectionName="Auth" SqlType="Execute" Description="修改">
          if(DATEDIFF(MINUTE,CONVERT(datetime,@StartDate),CONVERT(datetime,@EndDate))&lt;0)
          begin
          raiserror('结束时间不能早于开始时间',15,1)
          end
          else if(CONVERT(date,@StartDate)&lt;&gt;CONVERT(date,@EndDate))
          begin
          raiserror('开始时间、结束时间必须属于同一天',15,1)
          end
          else
          begin
          UPDATE [hr_AbnormalAttendance]
          SET [StartDate]=@StartDate,[EndDate]=@EndDate,[ApplicationHours]=@ApplicationHours,[ThrowableType]=@ThrowableType,[Reason]=@Reason,[ModifiedUser]=@ModifiedUser,[ModifiedTime]=@ModifiedTime WHERE [AAID]=@AAID;
          SELECT [AAID],[EmployeeID],[DeptID],[JobID],
          CONVERT(nvarchar(30),[ApplicationDate])as [ApplicationDate],
          CONVERT(varchar(30), [StartDate], 20) as [StartDate],
          CONVERT(varchar(30), [EndDate], 20)  as [EndDate],[ApplicationHours],
          [ThrowableType],[Reason],
          case when Approved=0 then '已驳回' when Approved=1 then '申请中' when Approved=2 then '已核准' else '草稿' end as Approved
          FROM [hr_AbnormalAttendance] a left join fl_mappingform b on  a.AAID=b.FormNo and Table_Name='fl_AbnormalAttendance'
          WHERE [AAID]=@AAID;
          end
        </Sql>
        <Sql Name="Delete" ConnectionName="Auth" SqlType="Execute" Description="删除">
          declare @sql varchar(max);
          set @sql='
          declare @m int
          select @m=count(*) from [fl_MappingForm] where Table_Name='''+'hr_AbnormalAttendance'+''' and [FormNo] in ('''+replace(@AAID,',',''',''')+''') and Approved in (1,2)
          if(@m=0)
          begin
          UPDATE [hr_AbnormalAttendance]
          SET [ModifiedUser]='''+@ModifiedUser+''',[ModifiedTime]='''+@ModifiedTime+''',[IsActive]=0 WHERE [AAID] in ('''+replace(@AAID,',',''',''')+''') ;
          end
          else
          begin
          raiserror('''+'存在已送签信息，删除失败'+''',16,1) with nowait
          end;'
          exec(@sql);
        </Sql>
        <Sql Name="Query" ConnectionName="Auth" Description="检索查询">
          declare @dataBegin varchar(30)
          declare @dataEnd varchar(30)
          if (@Data1='')
          begin
          set @dataBegin ='1900-01-01'
          end
          else
          begin
          set @dataBegin =@Data1
          end
          if (@Data2='1900-01-01' or @Data2='')
          begin
          set @dataEnd='2100-12-31'
          end
          else
          begin
          set @dataEnd=@Data2
          end
          declare @sql varchar(max)
          set @sql='SELECT [AAID],[EmployeeID],[DeptID],[JobID],
          CONVERT(nvarchar(30),[ApplicationDate])as [ApplicationDate],
          CONVERT(varchar(30), [StartDate], 20) as [StartDate],
          CONVERT(varchar(30), [EndDate], 20)  as [EndDate],[ApplicationHours],
          [ThrowableType],[Reason],
          case when Approved=0 then '+'''已驳回'''+' when Approved=1 then  '+'''申请中'+''' when Approved=2 then  '+'''已核准'+''' else  '+'''草稿'+''' end as Approved
          FROM [hr_AbnormalAttendance] a left join fl_mappingform b on  a.AAID=b.FormNo and Table_Name='+'''fl_AbnormalAttendance'+'''
          where  DATEDIFF(MINUTE,StartDate,CONVERT(datetime, '''+@dataBegin+''' ))&lt;0 and DATEDIFF(MINUTE,EndDate,CONVERT(datetime,  '''+@dataEnd+''' ))&gt;0  and a.IsActive=1 and EmployeeID= '''+@EmployeeID+''''
          if(@Approved=0 or @Approved=1 or @Approved=2)
          begin
          set @sql=@sql+' and Approved='+@Approved;
          end
          else if(@Approved=-1)
          begin
          set @sql=@sql+' and Approved is null'
          end
          set @sql=@sql+' order by ApplicationDate desc'
          exec(@sql)
        </Sql>
        <Sql Name="GetDetail" ConnectionName="Auth" Description="查询明细">
          SELECT [AAID],[EmployeeID],[DeptID],[JobID],[ApplicationDate],CONVERT(varchar(100), [StartDate], 20) as [StartDate],CONVERT(varchar(100), [EndDate], 20) as [EndDate],[ApplicationHours],[ThrowableType],[Reason],[IsActive]
          FROM [hr_AbnormalAttendance]
          WHERE [AAID]=@AAID
        </Sql>
        <Sql Name="GetEdit" ConnectionName="Auth" Description="查询编辑">
          SELECT [AAID],a.Name as Ename,c.Name+'-'+d.Name as Dname,b.Name as Jname,CONVERT(nvarchar(20),[ApplicationDate])as [ApplicationDate],CONVERT(varchar(100), aa.[StartDate], 20) as [StartDate],CONVERT(varchar(100),aa.[EndDate], 20)  as [EndDate],[ApplicationHours],[ThrowableType],[Reason],aa.[IsActive]
          FROM [hr_AbnormalAttendance] aa join  [hr_Employee] a on aa.EmployeeID=a.EmployeeID
          join [hr_Job] b on a.JobID=b.JobID
          join   [hr_Department] c on a.DeptID=c.DeptID
          join [hr_Company]  d on c.CompanyID=d.CompanyID
          WHERE [AAID]=@AAID
        </Sql>
        <Sql Name="GetUserInfoByUserID" ConnectionName="Auth" Description="根据用户ID获取用户信息">
          select a.EmployeeID,a.Name as Ename,a.DeptID,c.Name+'-'+d.Name as Dname,a.JobID,b.Name as Jname,
          CONVERT(varchar(20),CONVERT(date,GETDATE())) as ApplicationDate
          from [hr_Employee] a join [hr_Job] b on a.JobID=b.JobID
          left  join   [hr_Department] c on a.DeptID=c.DeptID
          left  join [hr_Company]  d on c.CompanyID=d.CompanyID
          where UserID=@UserID
        </Sql>
        <Sql Name="SendCheck" ConnectionName="Auth" Description="送检">
          BEGIN TRANSACTION
          DECLARE @errorSun INT
          SET @errorSun=0
          declare @n int
          select @n=count(*)+1 from [fl_AbnormalAttendance] where [AAID]=@AAID
          insert into  [dbo].[fl_AbnormalAttendance]
          ([AAID],[Version],[EmployeeID]
          ,[DeptID]
          ,[JobID]
          ,[ApplicationDate]
          ,[StartDate]
          ,[EndDate]
          ,[ApplicationHours]
          ,[ThrowableType]
          ,[Reason]
          ,[IsActive]
          ,[CreatedUser]
          ,[CreatedTime]
          ,[ModifiedUser]
          ,[ModifiedTime])
          SELECT [AAID],@n,[EmployeeID]
          ,[DeptID]
          ,[JobID]
          ,[ApplicationDate]
          ,[StartDate]
          ,[EndDate]
          ,[ApplicationHours]
          ,[ThrowableType]
          ,[Reason],@IsActive,@CreatedUser,@CreatedTime,
          @ModifiedUser,@ModifiedTime
          FROM [dbo].[hr_AbnormalAttendance]  where [AAID]=@AAID

          SET @errorSun=@errorSun+@@ERROR

          declare @m int
          select @m=count(*) from [fl_MappingForm] where Table_Name='hr_AbnormalAttendance' and [FormNo]=@AAID
          if(@m=0)
          begin
          insert into  [dbo].[fl_MappingForm]
          ([Table_Name],[FormNo],[Approved],[CreatedUser],[CreatedTime],[ModifiedUser],[ModifiedTime])
          SELECT 'fl_AbnormalAttendance',@AAID,1,@CreatedUser,@CreatedTime,@ModifiedUser,@ModifiedTime
          end
          else
          begin
          update  [fl_MappingForm] set [Approved]=1  where Table_Name='fl_AbnormalAttendance' and [FormNo]=@AAID
          end

          SET @errorSun=@errorSun+@@ERROR
          IF @errorSun !=0
          BEGIN
          ROLLBACK TRANSACTION
          END
          ELSE
          BEGIN
          COMMIT TRANSACTION
          END
          SELECT [AAID],[EmployeeID],[DeptID],[JobID],
          CONVERT(nvarchar(30),[ApplicationDate])as [ApplicationDate],
          CONVERT(varchar(30), [StartDate], 20) as [StartDate],
          CONVERT(varchar(30), [EndDate], 20)  as [EndDate],[ApplicationHours],
          [ThrowableType],[Reason],
          case when Approved=0 then '已驳回' when Approved=1 then '申请中' when Approved=2 then '已核准' else '草稿' end as Approved
          FROM [hr_AbnormalAttendance] a left join fl_mappingform b on  a.AAID=b.FormNo and Table_Name='fl_AbnormalAttendance'
          WHERE [AAID]=@AAID;
        </Sql>
        <Sql Name="CheckLog" ConnectionName="Auth" Description="送签追踪">
          declare @n int,@log nvarchar(500),@l nvarchar(20)
          select @n=count(*) FROM [fl_AbnormalAttendance] WHERE [AAID]=@AAID
          select @log=CONVERT(varchar(30),aa.CreatedTime,20)+','+isnull(a.Name,'')+','+isnull(b.Name,'')+',呈送'+'&lt;/br&gt;'
          FROM [fl_AbnormalAttendance] aa left  join  [hr_Employee] a on aa.EmployeeID=a.EmployeeID
          join [hr_Job] b on a.JobID=b.JobID
          WHERE [AAID]=@AAID and [Version]=@n
          select @l=[EmployeeID1] FROM [fl_AbnormalAttendance]  WHERE [AAID]=@AAID
          if(LEN(@l)&gt;0)
          begin
          select @log=@log+CONVERT(varchar(30),ApprovedDate1,20)+','+isnull(a.Name,'')+','+isnull(b.Name,'')+',签核,'+Suggestion1+'&lt;/br&gt;'
          FROM [fl_AbnormalAttendance] aa left  join  [hr_Employee] a on aa.EmployeeID1=a.EmployeeID
          join [hr_Job] b on a.JobID=b.JobID
          WHERE [AAID]=@AAID and [Version]=@n
          select @l=[EmployeeID2] FROM [fl_AbnormalAttendance]  WHERE [AAID]=@AAID
          if(LEN(@l)&gt;0)
          begin
          select @log=@log+CONVERT(varchar(30),ApprovedDate2,20)+','+isnull(a.Name,'')+','+isnull(b.Name,'')+',签核,'+Suggestion2+'&lt;/br&gt;'
          FROM [fl_AbnormalAttendance] aa left  join  [hr_Employee] a on aa.EmployeeID2=a.EmployeeID
          join [hr_Job] b on a.JobID=b.JobID
          WHERE [AAID]=@AAID and [Version]=@n
          select @l=[EmployeeID3] FROM [fl_AbnormalAttendance]  WHERE [AAID]=@AAID
          if(LEN(@l)&gt;0)
          begin
          select @log=@log+CONVERT(varchar(30),ApprovedDate3,20)+','+isnull(a.Name,'')+','+isnull(b.Name,'')+',结案,'+Suggestion3
          FROM [fl_AbnormalAttendance] aa left  join  [hr_Employee] a on aa.EmployeeID3=a.EmployeeID
          join [hr_Job] b on a.JobID=b.JobID
          WHERE [AAID]=@AAID and [Version]=@n
          end
          end
          end
          select a.Name as Ename,c.Name+'-'+d.Name as Dname,b.Name as Jname,
          CONVERT(varchar(20),ApplicationDate) as [ApplicationDate],
          CONVERT(varchar(20),aa.StartDate, 20) as [StartDate],
          CONVERT(varchar(20),aa.EndDate, 20) as [EndDate],
          [ApplicationHours],[ThrowableType],[Reason],@log as CheckLog
          FROM [hr_AbnormalAttendance] aa left  join  [hr_Employee] a on aa.EmployeeID=a.EmployeeID
          join [hr_Job] b on a.JobID=b.JobID
          join   [hr_Department] c on a.DeptID=c.DeptID
          join [hr_Company]  d on c.CompanyID=d.CompanyID
          WHERE [AAID]=@AAID
        </Sql>
        <Sql Name="QueryCount" ConnectionName="Auth" Description="查询总数">
          declare @dataBegin varchar(30)
          declare @dataEnd varchar(30)
          if (@Data1='')
          begin
          set @dataBegin ='1900-01-01'
          end
          else
          begin
          set @dataBegin =@Data1
          end
          if (@Data2='1900-01-01' or @Data2='')
          begin
          set @dataEnd='2100-12-31'
          end
          else
          begin
          set @dataEnd=@Data2
          end
          declare @sql varchar(max)
          set @sql='SELECT count(*)
          FROM [hr_AbnormalAttendance] a left join fl_mappingform b on  a.AAID=b.FormNo and Table_Name='+'''fl_AbnormalAttendance'+'''
          where  DATEDIFF(MINUTE,StartDate,CONVERT(datetime, '''+@dataBegin+''' ))&lt;0 and DATEDIFF(MINUTE,EndDate,CONVERT(datetime,  '''+@dataEnd+''' ))&gt;0  and a.IsActive=1 and EmployeeID= '''+@EmployeeID+''''
          if(@Approved=0 or @Approved=1 or @Approved=2)
          begin
          set @sql=@sql+' and Approved='+@Approved;
          end
          else if(@Approved=-1)
          begin
          set @sql=@sql+' and Approved is null'
          end
          exec(@sql)
        </Sql>
        <Sql Name="QueryPage" ConnectionName="Auth" Description="查询分页">
          declare @dataBegin varchar(30)
          declare @dataEnd varchar(30)
          if (@Data1='')
          begin
          set @dataBegin ='1900-01-01'
          end
          else
          begin
          set @dataBegin =@Data1
          end
          if (@Data2='1900-01-01' or @Data2='')
          begin
          set @dataEnd='2100-12-31'
          end
          else
          begin
          set @dataEnd=@Data2
          end
          declare @sql varchar(max)
          set @sql='SELECT [AAID],[EmployeeID],[DeptID],[JobID],
          CONVERT(nvarchar(30),[ApplicationDate])as [ApplicationDate],
          CONVERT(varchar(30), [StartDate], 20) as [StartDate],
          CONVERT(varchar(30), [EndDate], 20)  as [EndDate],[ApplicationHours],
          [ThrowableType],[Reason],
          case when Approved=0 then '+'''已驳回'''+' when Approved=1 then  '+'''申请中'+''' when Approved=2 then  '+'''已核准'+''' else  '+'''草稿'+''' end as Approved
          FROM [hr_AbnormalAttendance] a left join fl_mappingform b on  a.AAID=b.FormNo and Table_Name='+'''fl_AbnormalAttendance'+'''
          where  DATEDIFF(MINUTE,StartDate,CONVERT(datetime, '''+@dataBegin+''' ))&lt;0 and DATEDIFF(MINUTE,EndDate,CONVERT(datetime,  '''+@dataEnd+''' ))&gt;0  and a.IsActive=1 and EmployeeID= '''+@EmployeeID+''''
          if(@Approved='0' or @Approved='1' or @Approved='2')
          begin
          set @sql=@sql+' and Approved='+@Approved;
          end
          else if(@Approved='-1')
          begin
          set @sql=@sql+' and Approved is null'
          end
          set @sql=@sql+' order by a.[ApplicationDate] desc '
          SET @sql = @sql + 'OFFSET ((CAST('+@Page+' as int)-1)*CAST('+@Rows+' as int)) Rows FETCH NEXT CAST('+@Rows+' as int) ROWS ONLY '
          exec(@sql)
        </Sql>
      </Table>
      <Table Name="hr_ArrangeWork" ConnectionName="Auth" TableName="hr_ArrangeWork">
        <Sql Name="Add" ConnectionName="Auth" Description="Add">
          if exists(select * from [hr_ArrangeWork] where CompanyID=@CompanyID)
          begin
          raiserror('已经存在相同信息，无法保存！',15,1)
          end
          else
          begin
          INSERT INTO [hr_ArrangeWork]
          ([AWID],[CompanyID],[WorkDate],[MUpTime],[MDownTime],[OUpTime],[ODownTime],[CreatedUser],[CreatedTime],[ModifiedUser],[ModifiedTime])
          VALUES(@AWID,@CompanyID,@WorkDate,@MUpTime,@MDownTime,@OUpTime,@ODownTime,@CreatedUser,@CreatedTime,@ModifiedUser,@ModifiedTime);
          SELECT [AWID],Name,[WorkDate],CONVERT(time(0), [MUpTime]) as MUpTime,CONVERT(time(0), [MDownTime]) as MDownTime,CONVERT(time(0), [OUpTime]) as OUpTime,CONVERT(time(0), [ODownTime]) as ODownTime
          FROM [hr_ArrangeWork] a left join hr_Company c on a.CompanyID=c.CompanyID
          WHERE a.AutoKey=scope_identity();
          end
        </Sql>
        <Sql Name="Update" ConnectionName="Auth" SqlType="Execute" Description="Update">
          if exists(select * from [hr_ArrangeWork] where CompanyID=@CompanyID and  [AWID]!=@AWID)
          begin
          raiserror('已经存在相同信息，无法保存！',15,1)
          end
          else
          begin
          UPDATE [hr_ArrangeWork]
          SET  [WorkDate]=@WorkDate,[MUpTime]=@MUpTime,[MDownTime]=@MDownTime,[OUpTime]=@OUpTime,[ODownTime]=@ODownTime,[ModifiedUser]=@ModifiedUser,[ModifiedTime]=@ModifiedTime WHERE [AWID]=@AWID;

          SELECT [AWID],Name,[WorkDate],CONVERT(time(0), [MUpTime]) as MUpTime,CONVERT(time(0), [MDownTime]) as MDownTime,CONVERT(time(0), [OUpTime]) as OUpTime,CONVERT(time(0), [ODownTime]) as ODownTime
          FROM [hr_ArrangeWork] a left join hr_Company c on a.CompanyID=c.CompanyID
          WHERE [AWID]=@AWID
          end
        </Sql>
        <Sql Name="Delete" ConnectionName="Auth" SqlType="Execute" Description="Delete">
          DECLARE @sql varchar(max);
          SET @sql= 'DELETE FROM [hr_ArrangeWork] WHERE [AWID] in (''' + REPLACE(@AWID,',',''',''') + ''')';
          EXEC (@sql);
        </Sql>
        <Sql Name="Query" ConnectionName="Auth" Description="检索查询">
          if(@CompanyID='000000')
          begin
          set @CompanyID=''
          end
          SELECT [AWID],Name,[WorkDate],CONVERT(time(0), [MUpTime]) as MUpTime,CONVERT(time(0), [MDownTime]) as MDownTime,CONVERT(time(0), [OUpTime]) as OUpTime,CONVERT(time(0), [ODownTime]) as ODownTime
          FROM [hr_ArrangeWork] a join (SELECT c.* FROM [hr_Company] c join fun_sys_GetUserCompanys(@UserID) g on c.CompanyID=g.CompanyID)c on a.CompanyID=c.CompanyID    where a.[CompanyID] like '%'+@CompanyID+'%'
        </Sql>
        <Sql Name="GetDetail" ConnectionName="Auth" Description="查询明细">

          SELECT [AWID],Name,[WorkDate],CONVERT(time(0), [MUpTime]) as MUpTime,CONVERT(time(0), [MDownTime]) as MDownTime,CONVERT(time(0), [OUpTime]) as OUpTime,CONVERT(time(0), [ODownTime]) as ODownTime
          FROM [hr_ArrangeWork] a left join hr_Company c on a.CompanyID=c.CompanyID
          WHERE [AWID]=@AWID
        </Sql>
        <Sql Name="GetEdit" ConnectionName="Auth" Description="查询编辑">

          SELECT [AWID],Name,[WorkDate],CONVERT(time(0), [MUpTime]) as MUpTime,CONVERT(time(0), [MDownTime]) as MDownTime,CONVERT(time(0), [OUpTime]) as OUpTime,CONVERT(time(0), [ODownTime]) as ODownTime
          FROM [hr_ArrangeWork] a left join hr_Company c on a.CompanyID=c.CompanyID
          WHERE [AWID]=@AWID
        </Sql>
        <Sql Name="GetWeekTree" SharedName="GetWeekTree" ConnectionName="Auth" Description="获取星期树型结构">
          select '0'as  id,'全部'as name,'000' as pid union
          select '1','周一','0' union
          select '2','周二','0' union
          select '3','周三','0' union
          select '4','周四','0' union
          select '5','周五','0' union
          select '6','周六','0' union
          select '7','周日','0'
        </Sql>
        <Sql Name="QueryCount" ConnectionName="Auth" Description="查询总数">
          if(@CompanyID='000000')
          begin
          set @CompanyID=''
          end
          select count(*)
          FROM [hr_ArrangeWork] a join (SELECT c.* FROM [hr_Company] c join fun_sys_GetUserCompanys(@UserID) g on c.CompanyID=g.CompanyID)c on a.CompanyID=c.CompanyID
          where a.[CompanyID] like '%'+@CompanyID+'%'
        </Sql>
        <Sql Name="QueryPage" ConnectionName="Auth" Description="查询分页">
          if(@CompanyID='000000')
          begin
          set @CompanyID=''
          end
          select [AWID],Name,[WorkDate],CONVERT(time(0), [MUpTime]) as MUpTime,CONVERT(time(0), [MDownTime]) as MDownTime,CONVERT(time(0), [OUpTime]) as OUpTime,CONVERT(time(0), [ODownTime]) as ODownTime
          FROM [hr_ArrangeWork] a join (SELECT c.* FROM [hr_Company] c join fun_sys_GetUserCompanys(@UserID) g on c.CompanyID=g.CompanyID)c on a.CompanyID=c.CompanyID    where a.[CompanyID] like '%'+@CompanyID+'%'  order by a.ModifiedTime desc

          OFFSET ((CAST(@Page as int)-1)*CAST(@Rows as int)) Rows FETCH NEXT CAST(@Rows as int) ROWS ONLY;
        </Sql>
      </Table>
      <Table Name="hr_LeaveType" ConnectionName="Auth" TableName="hr_LeaveType">
        <Sql Name="Query" ConnectionName="Auth" Description="检索查询">
          SELECT [LvID],[LvID] as ID,[LeaveName],[Coefficient],[Remark]
          FROM [hr_LeaveType] WHERE LeaveName like '%'+@LeaveName+'%'
        </Sql>
        <Sql Name="GetDetail" ConnectionName="Auth" Description="查询明细">
          SELECT [LvID],[LeaveName],[Coefficient],[Remark]
          FROM [hr_LeaveType]
          WHERE [LvID]=@LvID
        </Sql>
        <Sql Name="Add" ConnectionName="Auth" Description="新增">
          if exists(select * from [hr_LeaveType] where LeaveName=@LeaveName)
          begin
          raiserror('已经存在相同信息，无法保存！',15,1)
          end
          else
          begin
          INSERT INTO [hr_LeaveType]
          ([LvID],[LeaveName],[Coefficient],[Remark],[CreatedUser],[CreatedTime],[ModifiedUser],[ModifiedTime])
          VALUES(@LvID,@LeaveName,@Coefficient,@Remark,@CreatedUser,@CreatedTime,@ModifiedUser,@ModifiedTime);
          SELECT  [LvID],[LvID] as ID,[LeaveName],[Coefficient],[Remark]
          FROM [hr_LeaveType]
          WHERE [AutoKey]=scope_identity()
          end
        </Sql>
        <Sql Name="GetEdit" ConnectionName="Auth" Description="查询编辑">
          SELECT [LvID],[LeaveName],[Coefficient],[Remark]
          FROM [hr_LeaveType]
          WHERE [LvID]=@LvID
        </Sql>
        <Sql Name="Update" ConnectionName="Auth" Description="更新">
          if exists(select * from [hr_LeaveType] where LeaveName=@LeaveName and  [LvID]!=@LvID)
          begin
          raiserror('已经存在相同信息，无法保存！',15,1)
          end
          else
          begin
          UPDATE [hr_LeaveType]
          SET [LeaveName]=@LeaveName,[Coefficient]=@Coefficient,[Remark]=@Remark,[ModifiedUser]=@ModifiedUser,[ModifiedTime]=@ModifiedTime WHERE [LvID]=@LvID;
          SELECT  [LvID],[LvID] as ID,[LeaveName],[Coefficient],[Remark]
          FROM [hr_LeaveType]
          WHERE [LvID]=@LvID
          end
        </Sql>
        <Sql Name="Delete" ConnectionName="Auth" Description="删除">
          DECLARE @sql varchar(max);
          SET @sql= 'DELETE FROM [hr_LeaveType] WHERE [LvID] in (''' + REPLACE(@LvID,',',''',''') + ''')';
          EXEC (@sql);
        </Sql>
        <Sql Name="AllWithAll" ConnectionName="Auth" Description="查询全部休假类型，带'全部'选项">
          SELECT '全部' [LvID],'全部' [LeaveName], 0 [Order]
          UNION
          SELECT [LvID],[LeaveName], 1
          FROM [hr_LeaveType]
        </Sql>
        <Sql Name="AllWithoutAll" ConnectionName="Auth" Description="查询全部休假类型，不带'全部'选项">
          SELECT [LvID],[LeaveName]
          FROM [hr_LeaveType]
        </Sql>
        <Sql Name="QueryCount" ConnectionName="Auth" Description="查询总数">
          SELECT count(*)
          FROM [hr_LeaveType] WHERE LeaveName like '%'+@LeaveName+'%'
        </Sql>
        <Sql Name="QueryPage" ConnectionName="Auth" Description="查询分页">
          SELECT [LvID],[LvID] as ID,[LeaveName],[Coefficient],[Remark]
          FROM [hr_LeaveType] WHERE LeaveName like '%'+@LeaveName+'%'
          order by ModifiedTime desc
          OFFSET ((CAST(@Page as int)-1)*CAST(@Rows as int)) Rows FETCH NEXT CAST(@Rows as int) ROWS ONLY;
        </Sql>
      </Table>
      <Table Name="hr_Attendance" ConnectionName="Auth" TableName="hr_Attendance">
        <Sql Name="GetItem" ConnectionName="Auth" SqlType="Execute" Description="查询考勤记录明细（自助）">
          Select [Year]+'-'+[Month]+'-'+[Day] as Dates ,datename(dw,CONVERT(date,[Year]+'-'+[Month]+'-'+[Day])) as Weekday,[CompanyID],[DeptID],[EmployeeID],[StartTime],[EndTime],[Overtime],[MinutesLate],[LeaveEarlyMinutes],[AbsenteeismHours],[Remark],[IsActive],[CreatedUser],[CreatedTime],[ModifiedUser],[ModifiedTime],[AutoKey]  FROM [hr_Attendance]
          WHERE [AutoKey]=@AutoKey;
        </Sql>
        <Sql Name="Query" ConnectionName="Auth" Description="根据日期查询考勤记录（自助）">
          if(CONVERT(nvarchar(20),CONVERT(datetime,@StartDate ),23)&gt;CONVERT(datetime,@EndDate )
          )
          begin
          raiserror('结束日期时间不能早于起始日期',16,1) with nowait
          end
          else
          begin
          declare @eID varchar(8)
          select @eID=EmployeeID from [hr_Employee] where UserID=@UserID
          select  [Year]+'-'+[Month]+'-'+[Day] as Dates ,datename(dw,CONVERT(date,[Year]+'-'+[Month]+'-'+[Day])) as Weekday,[CompanyID],[DeptID],[EmployeeID],[StartTime],[EndTime],[Overtime],[MinutesLate],[LeaveEarlyMinutes],[AbsenteeismHours],[Remark],[IsActive],[CreatedUser],[CreatedTime],[ModifiedUser],[ModifiedTime],[AutoKey]
          from [hr_Attendance] where CONVERT(date,[Year]+'-'+[Month]+'-'+[Day]) between @StartDate and @EndDate and [IsActive]=1 and EmployeeID=@eID
          end
        </Sql>
        <Sql Name="QueryCount" ConnectionName="Auth" Description="查询总数">
          declare @minute int,@hours int,@work int
          set @minute=-1;
          set @hours =-1;
          set @work =0;
          if(@State='迟到早退')
          begin
          set @minute=0;
          set @work =1;
          end
          if(@State='旷工')
          begin
          set @hours =0;
          set @work =1;
          end
          select count(WorkDate)
          from hr_BaseAttendance(@CompanyID,@EmployeeID,@startdate,@enddate) ba
          where (ba.迟到分钟数&gt;@minute or ba.早退分钟数&gt;@minute) and ba.旷工时数&gt;@hours and ba.IsWork in (@work,1)
        </Sql>
        <Sql Name="QueryPage" ConnectionName="Auth" Description="查询分页">
          declare @minute int,@hours int,@work int
          set @minute=-1;
          set @hours =-1;
          set @work =0;
          if(@State='迟到早退')
          begin
          set @minute=0;
          set @work =1;
          end
          if(@State='旷工')
          begin
          set @hours =0;
          set @work =1;
          end
          select cast(ba.WorkDate as varchar(20)) as Dates
          ,replace(ba.Weekday,'周','星期') as [Weekday]
          ,ba.IsWork
          ,ba.Remark
          ,ba.上班时间 as [StartTime]
          ,ba.下班时间 as [EndTime]
          ,IIF(ba.迟到分钟数=0,null,ba.迟到分钟数) as [MinutesLate]
          ,IIF(ba.早退分钟数=0,null,ba.早退分钟数) as [LeaveEarlyMinutes]
          ,IIF(ba.加班时数=0,null,ba.加班时数) as [OverTime]
          ,IIF(ba.旷工时数=0,null,ba.旷工时数) as [AbsenteeismHours]
          from hr_BaseAttendance(@CompanyID,@EmployeeID,@Startdate,@Enddate)ba
          where (ba.迟到分钟数&gt;@minute or ba.早退分钟数&gt;@minute) and ba.旷工时数&gt;@hours and ba.IsWork in (@work,1)
          order by [Dates]
          OFFSET ((CAST(@Page as int)-1)*CAST(@Rows as int)) Rows FETCH NEXT CAST(@Rows as int) ROWS ONLY;
        </Sql>
      </Table>
      <Table Name="hr_Holiday" ConnectionName="Auth" TableName="hr_Holiday">
        <Sql Name="Add" ConnectionName="Auth" Description="Add">
          INSERT INTO [hr_Holiday]
          ([HhID],[CompanyID],[HolidayDate],[StartDate],[EndDate],[Coefficient],[IsWork],[BuBanDate],[CreatedUser],[CreatedTime],[ModifiedUser],[ModifiedTime],[IsActive])
          VALUES(@HhID,@CompanyID,@HolidayDate,@StartDate,@EndDate,@Coefficient,@IsWork,@BuBanDate,@CreatedUser,@CreatedTime,@ModifiedUser,@ModifiedTime,@IsActive);
          SELECT a.[HhID],a.[CompanyID],a.[HolidayDate],CONVERT(varchar(100),[StartDate],20) as [StartDate],CONVERT(varchar(100),[EndDate],20) as [EndDate],a.[Coefficient],case when (a.[IsWork]=0) then '否' when  (a.[IsWork]=1)  then '是' end as [IsWork],a.[CreatedUser],a.[CreatedTime],a.[ModifiedUser],a.[ModifiedTime],a.[AutoKey],b.[Name] FROM [hr_Holiday] a left join [hr_Company] b on a.CompanyID=b.CompanyID
          WHERE a.[AutoKey]=scope_identity();
        </Sql>
        <Sql Name="Update" ConnectionName="Auth" SqlType="Execute" Description="Update">
          UPDATE [hr_Holiday]
          SET  [HhID]=@HhID,[CompanyID]=@CompanyID,[HolidayDate]=@HolidayDate,[StartDate]=@StartDate,[EndDate]=@EndDate,[Coefficient]=@Coefficient,[IsWork]=@IsWork,
          [BuBanDate]=@BuBanDate,[ModifiedUser]=@ModifiedUser,[ModifiedTime]=@ModifiedTime WHERE [HhID]=@HhID;
          SELECT a.[HhID],a.[CompanyID],a.[HolidayDate],CONVERT(varchar(100),[StartDate],20) as [StartDate],CONVERT(varchar(100),[EndDate],20) as [EndDate],a.[Coefficient],case when (a.[IsWork]=0) then '否' when  (a.[IsWork]=1)  then '是' end as [IsWork],a.[CreatedUser],a.[CreatedTime],a.[ModifiedUser],a.[ModifiedTime],a.[AutoKey],b.[Name] FROM [hr_Holiday] a left join [hr_Company] b on a.CompanyID=b.CompanyID
          where a.[CompanyID]=@CompanyID;
        </Sql>
        <Sql Name="Delete" ConnectionName="Auth" SqlType="Execute" Description="Delete">
          declare @sql varchar(max);

          set @sql='UPDATE [hr_Holiday]
          SET [ModifiedUser]='''+@ModifiedUser+''',[ModifiedTime]='''+@ModifiedTime+''',[IsActive]=0 WHERE [HhID] in ('''+replace(@HhID,',',''',''')+''') ;'
          exec(@sql);
        </Sql>
        <Sql Name="GetItem" ConnectionName="Auth" SqlType="Execute" Description="GetItem">
          SELECT [HhID],[CompanyID],[HolidayDate],[StartDate],[EndDate],[Coefficient],[IsWork],[CreatedUser],[CreatedTime],[ModifiedUser],[ModifiedTime],[AutoKey] FROM [hr_Holiday]
          WHERE [HhID]=@HhID;
        </Sql>
        <Sql Name="GetAll" ConnectionName="Auth" SqlType="Execute" Description="GetAll">SELECT [HhID],[CompanyID],[HolidayDate],[StartDate],[EndDate],[Coefficient],[IsWork],[CreatedUser],[CreatedTime],[ModifiedUser],[ModifiedTime],[AutoKey] FROM [hr_Holiday];</Sql>
        <Sql Name="Query" ConnectionName="Auth" Description="检索查询">
          SELECT a.[HhID],a.[CompanyID],a.[HolidayDate],CONVERT(varchar(100),[StartDate],20) as [StartDate],CONVERT(varchar(100),[EndDate],20) as [EndDate],a.[Coefficient],case when (a.[IsWork]=0) then '否' when  (a.[IsWork]=1)  then '是' end as [IsWork],a.[CreatedUser],a.[CreatedTime],a.[ModifiedUser],a.[ModifiedTime],a.[AutoKey],b.[Name] FROM [hr_Holiday] a join (SELECT c.* FROM [hr_Company] c join fun_sys_GetUserCompanys(@UserID) g on c.CompanyID=g.CompanyID)b on a.CompanyID=b.CompanyID
          where a.[CompanyID] like '%'+@CompanyID+'%'  and a.[IsActive]=1
          order by a.ModifiedTime desc
          OFFSET ((CAST(@Page as int)-1)*CAST(@Rows as int)) Rows FETCH NEXT CAST(@Rows as int) ROWS ONLY;
        </Sql>
        <Sql Name="GetDetail" ConnectionName="Auth" Description="查询明细">
          SELECT [HhID],c.[Name] as CompanyID,[HolidayDate],CONVERT(varchar(20),[StartDate]) as [StartDate],CONVERT(varchar(20),[EndDate]) as [EndDate],[Coefficient],case when [IsWork]=1 then '是' else '否' end as IsWork ,[BuBanDate]
          FROM [hr_Holiday] h
          inner join hr_Company c on h.CompanyID=c.CompanyID
          WHERE [HhID]=@HhID and h.CompanyID = c.CompanyID
        </Sql>
        <Sql Name="GetEdit" ConnectionName="Auth" Description="查询编辑">
          SELECT [HhID],h.[CompanyID],c.Name,[HolidayDate],CONVERT(varchar(20),[StartDate]) as [StartDate],CONVERT(varchar(20),[EndDate]) as [EndDate],[Coefficient],case [IsWork] when 1 then 1 else 0 end as [IsWork],[BuBanDate]
          FROM [hr_Holiday] h
          inner join hr_Company c on h.CompanyID=c.CompanyID
          WHERE [HhID]=@HhID and h.CompanyID=c.CompanyID
        </Sql>
        <Sql Name="GetCom" ConnectionName="Auth" Description="获取公司">select [Name],[CompanyID] FROM [hr_Company];</Sql>
        <Sql Name="QueryCount" ConnectionName="Auth" Description="查询总数">
          select count(*) FROM [hr_Holiday] a join (SELECT c.* FROM [hr_Company] c join fun_sys_GetUserCompanys(@UserID) g on c.CompanyID=g.CompanyID)b on a.CompanyID=b.CompanyID
          where a.[CompanyID] like '%'+@CompanyID+'%' and a.[IsActive]=1
        </Sql>
      </Table>
      <Table Name="hr_Rule" ConnectionName="Auth" TableName="hr_Rule">
        <Sql Name="Add" ConnectionName="Auth" Description="添加规则">
          if(exists(select * from [hr_Rule] where [CompanyID]=@CompanyID))
          begin
          RAISERROR ('该公司已经存在考勤规则，信息添加失败！',15, 1) WITH NOWAIT
          end
          else
          begin
          INSERT INTO [hr_Rule]
          ([RID],[RName],[CompanyID],[Remark],[MinutesLate]
          ,[IgnoreMinutesLate]
          ,[MinutesEarlyleave]
          ,[IgnoreMinutesEarlyleave]
          ,[MinutesAbsent]
          ,[MinAbsentHours]
          ,[MaxAbsentHours]
          ,[MinOverTimeMinutes]
          ,[RealCalculateMinutes]
          ,[MaxOverTimeHours]
          ,[MaxForgetCardTimes]
          ,[AutoFiredDays],[MonthClosingDay],[CreatedUser],[CreatedTime],[ModifiedUser],[ModifiedTime])
          VALUES(@RID,@RName,@CompanyID,@Remark,@MinutesLate,@IgnoreMinutesLate,@MinutesEarlyleave,@IgnoreMinutesEarlyleave,@MinutesAbsent,@MinAbsentHours,@MaxAbsentHours,@MinOverTimeMinutes,@RealCalculateMinutes,@MaxOverTimeHours,@MaxForgetCardTimes,@AutoFiredDays,@MonthClosingDay,@CreatedUser,@CreatedTime,@ModifiedUser,@ModifiedTime);
          SELECT a.[RID],a.[RName],a.[CompanyID],a.[Remark],a.[CreatedUser],a.[CreatedTime],a.[ModifiedUser],a.[ModifiedTime],a.[AutoKey],b.[Name] FROM [hr_Rule] a left join [hr_Company] b on a.CompanyID=b.CompanyID
          WHERE a.[AutoKey]=scope_identity();
          end
        </Sql>
        <Sql Name="Update" ConnectionName="Auth" SqlType="Execute" Description="更新规则">
          if(exists(select * from [hr_Rule] where [CompanyID]=@CompanyID))
          begin
          UPDATE [hr_Rule]
          SET  [RID]=@RID,[RName]=@RName,[CompanyID]=@CompanyID,[Remark]=@Remark,[MinutesLate]=@MinutesLate,[IgnoreMinutesLate]=@IgnoreMinutesLate,[MinutesEarlyleave]=@MinutesEarlyleave,[IgnoreMinutesEarlyleave]=@IgnoreMinutesEarlyleave,[MinutesAbsent]=@MinutesAbsent,[MinAbsentHours]=@MinAbsentHours,[MaxAbsentHours]=@MaxAbsentHours,[MinOverTimeMinutes]=@MinOverTimeMinutes,[RealCalculateMinutes]=@RealCalculateMinutes,[MaxOverTimeHours]=@MaxOverTimeHours,[MaxForgetCardTimes]=@MaxForgetCardTimes,[AutoFiredDays]=@AutoFiredDays,[MonthClosingDay]=@MonthClosingDay,[ModifiedUser]=@ModifiedUser,[ModifiedTime]=@ModifiedTime WHERE [RID]=@RID;
          SELECT a.[RID],a.[RName],a.[CompanyID],a.[Remark],a.[CreatedUser],a.[CreatedTime],a.[ModifiedUser],a.[ModifiedTime],a.[AutoKey],b.[Name] FROM [hr_Rule] a left join [hr_Company] b on a.CompanyID=b.CompanyID WHERE [RID]=@RID;
          end

        </Sql>
        <Sql Name="Delete" ConnectionName="Auth" SqlType="Execute" Description="删除规则">
          DELETE FROM [hr_Rule]
          WHERE [RID]=@RID;
        </Sql>
        <Sql Name="Query" ConnectionName="Auth" Description="检索查询">
          SELECT a.[RID],a.[RName],a.[CompanyID],a.[Remark],a.[CreatedUser],a.[CreatedTime],a.[ModifiedUser],a.[ModifiedTime],a.[AutoKey],b.[Name] FROM [hr_Rule] a left join [hr_Company] b on a.CompanyID=b.CompanyID
          WHERE a.[RName] like '%'+@RName+'%' and a.[CompanyID] like '%'+@CompanyID+'%';
        </Sql>
        <Sql Name="GetDetail" ConnectionName="Auth" Description="查询明细">
          SELECT [RID],[RName],c.Name as CompanyName,r.[Remark],[MinutesLate]
          ,[IgnoreMinutesLate]
          ,[MinutesEarlyleave]
          ,[IgnoreMinutesEarlyleave]
          ,[MinutesAbsent]
          ,[MinAbsentHours]
          ,[MaxAbsentHours]
          ,[MinOverTimeMinutes]
          ,[RealCalculateMinutes]
          ,[MaxOverTimeHours]
          ,[MaxForgetCardTimes]
          ,[AutoFiredDays]
          ,[MonthClosingDay]
          FROM [hr_Rule] r
          inner join hr_Company c on r.CompanyID=c.CompanyID
          WHERE [RID]=@RID and r.CompanyID=c.CompanyID
        </Sql>
        <Sql Name="GetEdit" ConnectionName="Auth" Description="查询编辑">
          SELECT [RID],[RName],r.[CompanyID],r.[Remark],[MinutesLate]
          ,[IgnoreMinutesLate]
          ,[MinutesEarlyleave]
          ,[IgnoreMinutesEarlyleave]
          ,[MinutesAbsent]
          ,[MinAbsentHours]
          ,[MaxAbsentHours]
          ,[MinOverTimeMinutes]
          ,[RealCalculateMinutes]
          ,[MaxOverTimeHours]
          ,[MaxForgetCardTimes]
          ,[AutoFiredDays]
          ,[MonthClosingDay]
          ,c.Name
          FROM [hr_Rule] r
          inner join hr_Company c on r.CompanyID=c.CompanyID
          WHERE [RID]=@RID and r.CompanyID=c.CompanyID
        </Sql>
        <Sql Name="GetCom" ConnectionName="Auth" Description="获取公司">select [Name],[CompanyID] FROM [hr_Company];</Sql>
        <Sql Name="QueryCount" ConnectionName="Auth" Description="查询总数">
          SELECT count(*)  FROM [hr_Rule] a join (SELECT c.* FROM [hr_Company] c join fun_sys_GetUserCompanys(@UserID) g on c.CompanyID=g.CompanyID)b on a.CompanyID=b.CompanyID
          WHERE a.[RName] like '%'+@RName+'%' and a.[CompanyID] like '%'+@CompanyID+'%';
        </Sql>
        <Sql Name="QueryPage" ConnectionName="Auth" Description="查询分页">
          SELECT a.[RID],a.[RName],a.[CompanyID],a.[Remark],a.[CreatedUser],a.[CreatedTime],a.[ModifiedUser],a.[ModifiedTime],a.[AutoKey],b.[Name] FROM [hr_Rule] a join (SELECT c.* FROM [hr_Company] c join fun_sys_GetUserCompanys(@UserID) g on c.CompanyID=g.CompanyID)b on a.CompanyID=b.CompanyID
          WHERE a.[RName] like '%'+@RName+'%' and a.[CompanyID] like '%'+@CompanyID+'%' order by a.ModifiedTime desc
          OFFSET ((CAST(@Page as int)-1)*CAST(@Rows as int)) Rows FETCH NEXT CAST(@Rows as int) ROWS ONLY;
        </Sql>
      </Table>
      <Table Name="hr_CheckResult" ConnectionName="Auth" TableName="hr_CheckResult">
        <Sql Name="Add" ConnectionName="Auth" Description="Add">
          INSERT INTO [hr_CheckResult]
          ([Year],[Month],[CompanyID],[DeptID],[EmployeeID],[AttendanceDays],[RealAttendanceDays],[PaidHolidays],[LaterTimes],[LeaveEarlyTimes],[SickDays],[LeaveDays],[AbsenteeismDays],[AbsenceDays],[FullDays],[State],[Remark],[CreatedUser],[CreatedTime],[ModifiedUser],[ModifiedTime])
          VALUES(@Year,@Month,@CompanyID,@DeptID,@EmployeeID,@AttendanceDays,@RealAttendanceDays,@PaidHolidays,@LaterTimes,@LeaveEarlyTimes,@SickDays,@LeaveDays,@AbsenteeismDays,@AbsenceDays,@FullDays,@State,@Remark,@CreatedUser,@CreatedTime,@ModifiedUser,@ModifiedTime);
          SELECT [Year],[Month],[CompanyID],[DeptID],[EmployeeID],[AttendanceDays],[RealAttendanceDays],[PaidHolidays],[LaterTimes],[LeaveEarlyTimes],[SickDays],[LeaveDays],[AbsenteeismDays],[AbsenceDays],[FullDays],[State],[Remark],[CreatedUser],[CreatedTime],[ModifiedUser],[ModifiedTime],[AutoKey] FROM [hr_CheckResult]
          WHERE [AutoKey]=scope_identity();
        </Sql>
        <Sql Name="Update" ConnectionName="Auth" SqlType="Execute" Description="Update">
          UPDATE [hr_CheckResult]
          SET  [Year]=@Year,[Month]=@Month,[CompanyID]=@CompanyID,[DeptID]=@DeptID,[EmployeeID]=@EmployeeID,[AttendanceDays]=@AttendanceDays,[RealAttendanceDays]=@RealAttendanceDays,[PaidHolidays]=@PaidHolidays,[LaterTimes]=@LaterTimes,[LeaveEarlyTimes]=@LeaveEarlyTimes,[SickDays]=@SickDays,[LeaveDays]=@LeaveDays,[AbsenteeismDays]=@AbsenteeismDays,[AbsenceDays]=@AbsenceDays,[FullDays]=@FullDays,[State]=@State,[Remark]=@Remark,[ModifiedUser]=@ModifiedUser,[ModifiedTime]=@ModifiedTime WHERE [Year]=@Year AND [Month]=@Month AND [CompanyID]=@CompanyID AND [DeptID]=@DeptID AND [EmployeeID]=@EmployeeID;
        </Sql>
        <Sql Name="Delete" ConnectionName="Auth" SqlType="Execute" Description="Delete">
          DELETE FROM [hr_CheckResult]
          WHERE [Year]=@Year AND [Month]=@Month AND [CompanyID]=@CompanyID AND [DeptID]=@DeptID AND [EmployeeID]=@EmployeeID;
        </Sql>
        <Sql Name="GetItem" ConnectionName="Auth" SqlType="Execute" Description="GetItem">
          SELECT [Year],[Month],[CompanyID],[DeptID],[EmployeeID],[AttendanceDays],[RealAttendanceDays],[PaidHolidays],[LaterTimes],[LeaveEarlyTimes],[SickDays],[LeaveDays],[AbsenteeismDays],[AbsenceDays],[FullDays],[State],[Remark],[CreatedUser],[CreatedTime],[ModifiedUser],[ModifiedTime],[AutoKey] FROM [hr_CheckResult]
          WHERE [Year]=@Year AND [Month]=@Month AND [CompanyID]=@CompanyID AND [DeptID]=@DeptID AND [EmployeeID]=@EmployeeID;
        </Sql>
        <Sql Name="GetAll" ConnectionName="Auth" SqlType="Execute" Description="GetAll">SELECT [Year],[Month],[CompanyID],[DeptID],[EmployeeID],[AttendanceDays],[RealAttendanceDays],[PaidHolidays],[LaterTimes],[LeaveEarlyTimes],[SickDays],[LeaveDays],[AbsenteeismDays],[AbsenceDays],[FullDays],[State],[Remark],[CreatedUser],[CreatedTime],[ModifiedUser],[ModifiedTime],[AutoKey] FROM [hr_CheckResult];</Sql>
        <Sql Name="Query" ConnectionName="Auth" Description="检索查询">
          declare @eID varchar(6)
          select @eID=EmployeeID from [hr_Employee] where UserID=@UserID
          SELECT aa.[Year]+'-'+aa.[Month] as YearMonth,c.[Name] as CompanyName,b.[Name] as DeptName,d.[Name] as JobName,a.[Name]as EName,aa.[EmployeeID],aa.[AttendanceDays],aa.[RealAttendanceDays],aa.[PaidHolidays],aa.[LaterTimes],aa.[LeaveEarlyTimes],aa.[SickDays],aa.[LeaveDays],aa.[AbsenteeismDays],aa.[AbsenceDays],aa.[FullDays],aa.[State],aa.[Remark], aa.Overtime
          FROM [hr_CheckResult]aa
          left join hr_Employee a on aa.EmployeeID=a.EmployeeID
          left join hr_Department b on aa.DeptID=b.DeptID
          left join hr_Company c on aa.CompanyID=c.CompanyID
          left join hr_Job d on aa.JobID=d.JobID
          where aa.[Year] like '%'+@Year+'%' and aa.[Month] like '%'+@Month+'%'  and aa.[EmployeeID]=@eID
        </Sql>
        <Sql Name="GetDetail" ConnectionName="Auth" Description="查询明细">
          SELECT aa.[Year]+'-'+aa.[Month] as YearMonth,c.[Name] as CompanyName,b.[Name] as DeptName,d.[Name] as JobName,a.[Name]as EName,aa.[EmployeeID],aa.[AttendanceDays],aa.[RealAttendanceDays],aa.[PaidHolidays],aa.[LaterTimes],aa.[LeaveEarlyTimes],aa.[SickDays],aa.[LeaveDays],aa.[AbsenteeismDays],aa.[AbsenceDays],aa.[FullDays],aa.[State],aa.[Remark]
          FROM [hr_CheckResult] aa
          left join hr_Employee a on aa.EmployeeID=a.EmployeeID
          left join hr_Department b on aa.DeptID=b.DeptID
          left join hr_Company c on aa.CompanyID=c.CompanyID
          left join hr_Job d on aa.JobID=d.JobID
          WHERE aa.[EmployeeID]=@EmployeeID
        </Sql>
        <Sql Name="QueryByAddition" ConnectionName="Auth" Description="条件检索">
          select a.* from hr_CheckResultWithExplain(@DeptID,@EmployeeID,@Year,@Month,@State)a join
          (SELECT e2.* FROM [hr_Employee] e2 join fun_sys_GetUserDepartments(@UserID) g2 on e2.DeptID=g2.DeptID)b on a.EmployeeID=b.EmployeeID
          order by a.[Year]
          OFFSET ((CAST(@Page as int)-1)*CAST(@Rows as int)) Rows FETCH NEXT CAST(@Rows as int) ROWS ONLY;
        </Sql>
        <Sql Name="ExportQuery" ConnectionName="Auth" Description="导出EXCEL查询">select * from hr_CheckResultWithExplain(@DeptID,'',@Year,@Month,@State)</Sql>
        <Sql Name="GetCheckRecord" ConnectionName="Auth" Description="获取出勤明细">
          declare @eName varchar(20)
          select @eName=Name from [hr_Employee] where EmployeeID=@EmployeeID
          Select a.AutoKey,CONVERT(varchar(100),a.[CardTime],20)as[CardTime],b.Name as DeptName,a.Name,a.CardID,a.Source
          from [hr_CheckRecord] a left join [hr_Department] b on a.DeptID=b.DeptID left join [hr_Employee] c on a.Name=c.Name
          where a.Name = @eName and convert(varchar(7), a.[CardTime], 126) =@YearMonth
        </Sql>
        <Sql Name="GetLeave" ConnectionName="Auth" Description="获取请假明细">
          select a.LAFID,CONVERT(varchar(100),a.[StartDate],20)as[StartDate],CONVERT(varchar(100),a.[EndDate],20)as[EndDate],a.ApplicationHours,a.TimeUnit,b.Name,c.LeaveName from [hr_LeaveApplicationForm]a
          left join [hr_Employee]b on a.EmployeeID=b.EmployeeID
          left join [hr_LeaveType]c on a.LeaveType=c.LvID
          left join fl_MappingForm f on  f.Table_Name= 'fl_LeaveApplicationForm' and a.LAFID=f.FormNo
          where a.EmployeeID=@EmployeeID
          and f.Approved=2
          and (convert(varchar(7), a.[StartDate], 126)=@YearMonth or convert(varchar(7), a.[EndDate], 126)=@YearMonth)
          order by [StartDate]
        </Sql>
        <Sql Name="GetOvertime" ConnectionName="Auth" Description="获取加班明细">
          select a.OAFID,CONVERT(varchar(100),a.[StartDate],23)as[Date],CONVERT(varchar(100),a.[StartDate],20)as[StartDate],CONVERT(varchar(100),a.[EndDate],20)as[EndDate],a.ApplicationHours,a.TimeUnit,b.Name,b.CardID,c.Name as DeptName from [hr_OvertimeApplicationForm]a
          left join [hr_Employee]b on a.EmployeeID=b.EmployeeID
          left join [hr_Department]c on a.DeptID=c.DeptID
          left join fl_MappingForm f on  f.Table_Name= 'fl_OvertimeApplicationForm' and a.OAFID=f.FormNo
          where a.EmployeeID=@EmployeeID
          and f.Approved=2
          and (convert(varchar(7), a.[StartDate], 126)=@YearMonth or convert(varchar(7), a.[EndDate], 126)=@YearMonth)
          order by [StartDate]
        </Sql>
        <Sql Name="GetGoOut" ConnectionName="Auth" Description="获取公出明细">
          select a.[GOFID],CONVERT(varchar(100),a.[StartDate],20)as[StartDate],CONVERT(varchar(100),a.[EndDate],20)as[EndDate],a.Reason,b.Name from [hr_GoOutForm]a
          left join [hr_Employee]b on a.EmployeeID=b.EmployeeID
          left join fl_MappingForm f on  f.Table_Name= 'fl_GoOutForm' and a.GOFID=f.FormNo
          where a.EmployeeID=@EmployeeID
          and f.Approved=2
          and (convert(varchar(7), a.[StartDate], 126)=@YearMonth or convert(varchar(7), a.[EndDate], 126)=@YearMonth)
          order by [StartDate]
        </Sql>
        <Sql Name="GetAbnormalAttendance" ConnectionName="Auth" Description="获取缺勤解释明细">
          select a.[AAID],CONVERT(varchar(100),a.[StartDate],23)as[Date],a.StartDate,a.EndDate,a.Reason,a.ThrowableType,b.Name,b.CardID,c.Name as DeptName from [hr_AbnormalAttendance]a
          left join [hr_Employee]b on a.EmployeeID=b.EmployeeID
          left join [hr_Department]c on a.DeptID=c.DeptID
          left join fl_MappingForm f on  f.Table_Name= 'fl_AbnormalAttendance' and a.AAID=f.FormNo
          where a.EmployeeID=@EmployeeID
          and f.Approved=2
          and (convert(varchar(7), a.[StartDate], 126)=@YearMonth or convert(varchar(7), a.[EndDate], 126)=@YearMonth)
          order by [StartDate]
        </Sql>
        <Sql Name="GetLate" ConnectionName="Auth" Description="获取迟到早退旷工">
          select a.[EmployeeID],a.[Year]+'-'+a.[Month]+'-'+a.[Day] as [Date],a.MinutesLate,a.LeaveEarlyMinutes,a.AbsenteeismHours,a.StartTime,a.EndTime,a.Remark,b.Name,b.CardID,c.Name as DeptName from [hr_Attendance]a
          left join [hr_Employee]b on a.EmployeeID=b.EmployeeID
          left join [hr_Department]c on a.DeptID=c.DeptID
          where a.EmployeeID=@EmployeeID
          and a.[Year]+'-'+a.[Month]=@YearMonth and (a.MinutesLate is not NULL or a.LeaveEarlyMinutes is not NULL or a.AbsenteeismHours is not NULL)
        </Sql>
        <Sql Name="QueryCount" ConnectionName="Auth" Description="查询总数">
          declare @eID varchar(6)
          select @eID=EmployeeID from [hr_Employee] where UserID=@UserID
          SELECT count(*)
          FROM [hr_CheckResult]aa
          left join hr_Employee a on aa.EmployeeID=a.EmployeeID
          left join hr_Department b on aa.DeptID=b.DeptID
          left join hr_Company c on aa.CompanyID=c.CompanyID
          left join hr_Job d on aa.JobID=d.JobID
          where aa.[Year] like '%'+@Year+'%' and aa.[Month] like '%'+@Month+'%'  and aa.[EmployeeID]=@eID
        </Sql>
        <Sql Name="QueryPage" ConnectionName="Auth" Description="查询分页">
          declare @eID varchar(6)
          select @eID=EmployeeID from [hr_Employee] where UserID=@UserID
          SELECT aa.[Year]+'-'+aa.[Month] as YearMonth,c.[Name] as CompanyName,b.[Name] as DeptName,d.[Name] as JobName,a.[Name]as EName,aa.[EmployeeID],aa.[AttendanceDays],aa.[RealAttendanceDays],aa.[PaidHolidays],aa.[LaterTimes],aa.[LeaveEarlyTimes],aa.[SickDays],aa.[LeaveDays],aa.[AbsenteeismDays],aa.[AbsenceDays],aa.[FullDays],aa.[State],aa.[Remark], aa.Overtime
          FROM [hr_CheckResult]aa
          left join hr_Employee a on aa.EmployeeID=a.EmployeeID
          left join hr_Department b on aa.DeptID=b.DeptID
          left join hr_Company c on aa.CompanyID=c.CompanyID
          left join hr_Job d on aa.JobID=d.JobID
          where aa.[Year] like '%'+@Year+'%' and aa.[Month] like '%'+@Month+'%'  and aa.[EmployeeID]=@eID order by aa.[AutoKey]
          OFFSET ((CAST(@Page as int)-1)*CAST(@Rows as int)) Rows FETCH NEXT CAST(@Rows as int) ROWS ONLY;
        </Sql>
        <Sql Name="Count" ConnectionName="Auth" Description="总数">
          select count(a.[Year]) from hr_CheckResultWithExplain(@DeptID,@EmployeeID,@Year,@Month,@State)a join
          (SELECT e2.* FROM [hr_Employee] e2 join fun_sys_GetUserDepartments(@UserID) g2 on e2.DeptID=g2.DeptID)b on a.EmployeeID=b.EmployeeID

        </Sql>
        <Sql Name="InfoOfDay" ConnectionName="Auth" Description="考勤每日详情">
          select * from hr_AttendanceAndLeaveInfo((select CompanyID from hr_Employee where EmployeeID=substring(@ID,1,6)),substring(@ID,1,6),cast(substring(@ID,8,7)+'-01' as date),dateadd(D,-1,dateadd(M,1,cast(substring(@ID,8,7)+'-01' as date))))a
        </Sql>
        <Sql Name="CheckResultReport" ConnectionName="Auth" Description="考勤年度报表">
          select * from hr_CheckResultWithExplain('',@EmployeeID,@Year,'','')
        </Sql>
      </Table>
      <Table Name="hr_EmployeeFamilie" ConnectionName="Auth" TableName="hr_EmployeeFamilie">
        <Sql Name="Add" ConnectionName="Auth" Description="新增社会关系（自助）">
          declare @die int
          if(@IsDie='存')
          begin
          set @die=1
          end
          else
          begin
          set @die=0
          end
          declare @eID varchar(6)
          select @eID=EmployeeID from [hr_Employee] where UserID=@UserID
          INSERT INTO [hr_EmployeeFamilie]
          ([FamID],[EmployeeID],[Title],[Name],[Age],[WordUnit],[IsDie],[MobiPhone],[IsMaster],[CreatedUser],[CreatedTime],[ModifiedUser],[ModifiedTime])
          VALUES(@FamID,@eID,@Title,@Name,@Age,@WordUnit,@die,@MobiPhone,@IsMaster,@CreatedUser,@CreatedTime,@ModifiedUser,@ModifiedTime);
          SELECT [FamID],[EmployeeID],[Title],[Name],[Age],[WordUnit],case when ([IsDie]=0) then '殆' when  ([IsDie]=1)  then '存' end as [IsDie],[MobiPhone],case when ([IsMaster]=0) then '否' when  ([IsMaster]=1)  then '是' end as [IsMaster],[CreatedUser],[CreatedTime],[ModifiedUser],[ModifiedTime],[AutoKey] FROM [hr_EmployeeFamilie]
          WHERE [AutoKey]=scope_identity();
        </Sql>
        <Sql Name="Update" ConnectionName="Auth" SqlType="Execute" Description="更新社会关系（自助）">
          declare @die int
          if(@IsDie='存')
          begin
          set @die=1
          end
          else
          begin
          set @die=0
          end
          declare @eID varchar(6)
          select @eID=EmployeeID from [hr_Employee] where UserID=@UserID
          UPDATE [hr_EmployeeFamilie]
          SET  [FamID]=@FamID,[EmployeeID]=@eID,[Title]=@Title,[Name]=@Name,[Age]=@Age,[WordUnit]=@WordUnit,[IsDie]=@die,[MobiPhone]=@MobiPhone,[IsMaster]=@IsMaster,[ModifiedUser]=@ModifiedUser,[ModifiedTime]=@ModifiedTime WHERE [FamID]=@FamID;
          SELECT [FamID],[EmployeeID],[Title],[Name],[Age],[WordUnit],case when ([IsDie]=0) then '殆' when  ([IsDie]=1)  then '存' end as [IsDie],[MobiPhone],case when ([IsMaster]=0) then '否' when  ([IsMaster]=1)  then '是' end as [IsMaster],[CreatedUser],[CreatedTime],[ModifiedUser],[ModifiedTime],[AutoKey] FROM [hr_EmployeeFamilie]
          WHERE [FamID]=@FamID;
        </Sql>
        <Sql Name="Delete" ConnectionName="Auth" SqlType="Execute" Description="删除社会关系（自助）">
          DECLARE @sql varchar(max);
          SET @sql= ' DELETE FROM [hr_EmployeeFamilie]
          WHERE [FamID] in ('''+replace(@FamID,',',''',''')+''') ; '
          EXEC (@sql)
        </Sql>
        <Sql Name="GetDetail" ConnectionName="Auth" SqlType="Execute" Description="查询社会关系明细（自助）">
          SELECT [FamID],[EmployeeID],[Title],[Name],IIF([Age]=0,null,[Age])[Age],[WordUnit],case when ([IsDie]=0) then '殆' when  ([IsDie]=1)  then '存' end as [IsDie],[MobiPhone],[IsMaster],[CreatedUser],[CreatedTime],[ModifiedUser],[ModifiedTime],[AutoKey] FROM [hr_EmployeeFamilie]
          WHERE [FamID]=@FamID;
        </Sql>
        <Sql Name="GetEdit" ConnectionName="Auth" SqlType="Execute" Description="查询社会关系编辑（自助）">
          SELECT [FamID],[EmployeeID],[Title],[Name],IIF([Age]=0,null,[Age])[Age],[WordUnit],case when ([IsDie]=0) then '殆' when  ([IsDie]=1)  then '存' end as [IsDie],[MobiPhone],[IsMaster],[CreatedUser],[CreatedTime],[ModifiedUser],[ModifiedTime],[AutoKey] FROM [hr_EmployeeFamilie]
          WHERE [FamID]=@FamID;
        </Sql>
        <Sql Name="Query" ConnectionName="Auth" Description="查询社会关系（自助）">
          SELECT [FamID],[EmployeeID],[Title],[Name],IIF([Age]=0,null,[Age])[Age],[WordUnit],case when ([IsDie]=0) then '殆' when  ([IsDie]=1)  then '存' end as [IsDie],[MobiPhone],case when ([IsMaster]=0) then '否' when  ([IsMaster]=1)  then '是' end as [IsMaster],[CreatedUser],[CreatedTime],[ModifiedUser],[ModifiedTime],[AutoKey] FROM [hr_EmployeeFamilie]
          WHERE [EmployeeID] =@EmployeeID order by ModifiedTime desc
        </Sql>
        <Sql Name="GetFamilie" ConnectionName="Auth" Description="获取社会关系（自助）">
          declare @eID varchar(6)
          select @eID=EmployeeID from [hr_Employee] where UserID=@UserID
          SELECT [FamID],[EmployeeID],[Title],[Name],IIF([Age]=0,null,[Age])[Age],[WordUnit],case when ([IsDie]=0) then '殆' when  ([IsDie]=1)  then '存' end as [IsDie],[MobiPhone],case when ([IsMaster]=0) then '否' when  ([IsMaster]=1)  then '是' end as [IsMaster],[CreatedUser],[CreatedTime],[ModifiedUser],[ModifiedTime],[AutoKey] FROM [hr_EmployeeFamilie]
          WHERE [EmployeeID]=@eID;
        </Sql>
        <Sql Name="QueryCount" ConnectionName="Auth" Description="查询总数">
          declare @eID varchar(6)
          select @eID=EmployeeID from [hr_Employee] where UserID=@UserID
          SELECT count(*) FROM [hr_EmployeeFamilie]
          WHERE [EmployeeID]=@eID;
        </Sql>
        <Sql Name="QueryPage" ConnectionName="Auth" Description="查询分页">
          declare @eID varchar(6)
          select @eID=EmployeeID from [hr_Employee] where UserID=@UserID
          SELECT [FamID],[EmployeeID],[Title],[Name],[Age],[WordUnit],case when ([IsDie]=0) then '殆' when  ([IsDie]=1)  then '存' end as [IsDie],[MobiPhone],case when ([IsMaster]=0) then '否' when  ([IsMaster]=1)  then '是' end as [IsMaster],[CreatedUser],[CreatedTime],[ModifiedUser],[ModifiedTime],[AutoKey] FROM [hr_EmployeeFamilie]
          WHERE [EmployeeID]=@eID
          order by [AutoKey]
          OFFSET ((CAST(@Page as int)-1)*CAST(@Rows as int)) Rows FETCH NEXT CAST(@Rows as int) ROWS ONLY;
        </Sql>
      </Table>
      <Table Name="hr_EmployeeSkill" ConnectionName="Auth" TableName="hr_EmployeeSkill">
        <Sql Name="Add" ConnectionName="Auth" Description="新增职业技能（自助）">
          declare @i int
          select @i=count(*) from [hr_EmployeeSkill] where  [SkillUnit]=@SkillUnit and [SkillName]=@SkillName and [Certificate]=@Certificate ;
          if(@i&gt;0)
          begin
          RAISERROR ('该职业技能信息已经存在，信息添加失败！',15, 1) WITH NOWAIT
          end
          else
          begin
          declare @EID varchar(6)
          select @EID=EmployeeID from [hr_Employee] where UserID=@UserID
          INSERT INTO [hr_EmployeeSkill]
          ([Esid],[EmployeeID],[SkillUnit],[SkillName],[StartDate],[EndDate],[Certificate],[CreatedUser],[CreatedTime],[ModifiedUser],[ModifiedTime])
          VALUES(@Esid,@EID,@SkillUnit,@SkillName,@StartDate,@EndDate,@Certificate,@CreatedUser,@CreatedTime,@ModifiedUser,@ModifiedTime);
          SELECT a.[Esid],a.[EmployeeID],a.[SkillUnit],a.[SkillName],CONVERT(nvarchar(20),a.[StartDate])as [StartDate],CONVERT(nvarchar(20),a.[EndDate])as [EndDate],a.[Certificate],a.[CreatedUser],a.[CreatedTime],a.[ModifiedUser],a.[ModifiedTime],a.[AutoKey], b.Name FROM [hr_EmployeeSkill] a left join [hr_Employee] b on a.EmployeeID=b.EmployeeID
          WHERE a.[AutoKey]=scope_identity()
          end;
        </Sql>
        <Sql Name="Update" ConnectionName="Auth" SqlType="Execute" Description="更新职业技能（自助）">
          declare @i int
          select @i=count(*) from [hr_EmployeeSkill] where [EmployeeID]=@EmployeeID and [SkillUnit]=@SkillUnit and [SkillName]=@SkillName and [Certificate]=@Certificate ;
          if(@i&gt;0)
          begin
          RAISERROR ('该职业技能信息已经存在，信息添加失败！',15, 1) WITH NOWAIT
          end
          else
          begin
          declare @EID varchar(6)
          select @EID=EmployeeID from [hr_Employee] where UserID=@UserID
          UPDATE [hr_EmployeeSkill]
          SET  [Esid]=@Esid,[EmployeeID]=@EID,[SkillUnit]=@SkillUnit,[SkillName]=@SkillName,[StartDate]=@StartDate,[EndDate]=@EndDate,[Certificate]=@Certificate,[ModifiedUser]=@ModifiedUser,[ModifiedTime]=@ModifiedTime WHERE [Esid]=@Esid;
          SELECT a.[Esid],a.[EmployeeID],a.[SkillUnit],a.[SkillName],CONVERT(nvarchar(20),a.[StartDate])as [StartDate],CONVERT(nvarchar(20),a.[EndDate])as [EndDate],a.[Certificate],a.[CreatedUser],a.[CreatedTime],a.[ModifiedUser],a.[ModifiedTime],a.[AutoKey], b.Name FROM [hr_EmployeeSkill] a left join [hr_Employee] b on a.EmployeeID=b.EmployeeID
          WHERE a.[Esid]=@Esid;
          end
        </Sql>
        <Sql Name="Delete" ConnectionName="Auth" SqlType="Execute" Description="删除职业技能（自助）">
          DECLARE @sql varchar(max);
          SET @sql= ' DELETE FROM [hr_EmployeeSkill]
          WHERE [Esid] in ('''+replace(@Esid,',',''',''')+''') ; '
          EXEC (@sql)
        </Sql>
        <Sql Name="GetSkill" ConnectionName="Auth" Description="获取职业技能信息（自助）">

          declare @EID varchar(6)
          select @EID=EmployeeID from [hr_Employee] where UserID=@UserID
          SELECT a.[Esid],a.[EmployeeID],a.[SkillUnit],a.[SkillName],CONVERT(nvarchar(20),a.[StartDate])as [StartDate],CONVERT(nvarchar(20),a.[EndDate])as [EndDate],a.[Certificate],a.[CreatedUser],a.[CreatedTime],a.[ModifiedUser],a.[ModifiedTime],a.[AutoKey], b.Name FROM [hr_EmployeeSkill] a left join [hr_Employee] b on a.EmployeeID=b.EmployeeID
          WHERE a.[EmployeeID]=@EID;
        </Sql>
        <Sql Name="GetDetail" ConnectionName="Auth" SqlType="Execute" Description="查询职业技能明细（自助）">
          SELECT a.[Esid],a.[EmployeeID],a.[SkillUnit],a.[SkillName],CONVERT(nvarchar(20),a.[StartDate])as [StartDate],CONVERT(nvarchar(20),a.[EndDate])as [EndDate],a.[Certificate],a.[CreatedUser],a.[CreatedTime],a.[ModifiedUser],a.[ModifiedTime],a.[AutoKey], b.Name FROM [hr_EmployeeSkill] a left join [hr_Employee] b on a.EmployeeID=b.EmployeeID
          WHERE a.[Esid]=@Esid;
        </Sql>
        <Sql Name="Query" ConnectionName="Auth" Description="检索职业技能（自助）">
          SELECT a.[Esid],a.[EmployeeID],a.[SkillUnit],a.[SkillName],CONVERT(nvarchar(20),a.[StartDate])as [StartDate],CONVERT(nvarchar(20),a.[EndDate])as [EndDate],a.[Certificate],a.[CreatedUser],a.[CreatedTime],a.[ModifiedUser],a.[ModifiedTime],a.[AutoKey], b.Name FROM [hr_EmployeeSkill] a left join [hr_Employee] b on a.EmployeeID=b.EmployeeID
          WHERE a.[EmployeeID] like '%'+@EmployeeID+'%' order by a.[StartDate];
        </Sql>
        <Sql Name="QueryCount" ConnectionName="Auth" Description="查询总数">

          declare @EID varchar(6)
          select @EID=EmployeeID from [hr_Employee] where UserID=@UserID
          SELECT count(*) FROM [hr_EmployeeSkill] a left join [hr_Employee] b on a.EmployeeID=b.EmployeeID
          WHERE a.[EmployeeID]=@EID;
        </Sql>
        <Sql Name="QueryPage" ConnectionName="Auth" Description="查询分页">

          declare @EID varchar(6)
          select @EID=EmployeeID from [hr_Employee] where UserID=@UserID
          SELECT a.[Esid],a.[EmployeeID],a.[SkillUnit],a.[SkillName],CONVERT(nvarchar(20),a.[StartDate])as [StartDate],CONVERT(nvarchar(20),a.[EndDate])as [EndDate],a.[Certificate],a.[CreatedUser],a.[CreatedTime],a.[ModifiedUser],a.[ModifiedTime],a.[AutoKey], b.Name FROM [hr_EmployeeSkill] a left join [hr_Employee] b on a.EmployeeID=b.EmployeeID
          WHERE a.[EmployeeID]=@EID order by a.[StartDate]
          OFFSET ((CAST(@Page as int)-1)*CAST(@Rows as int)) Rows FETCH NEXT CAST(@Rows as int) ROWS ONLY;
        </Sql>
      </Table>
      <Table Name="hr_EmployeeOther" ConnectionName="Auth" TableName="hr_EmployeeOther">
        <Sql Name="GetDetail" ConnectionName="Auth" Description="查询其他项明细（其他）">
          SELECT [Eoid],[EmployeeID],[RecruitingSources],[IsEmploy],[EmployWorkUnit],CONVERT(varchar(20),WorkDateBeg, 23)[WorkDateBeg],CONVERT(varchar(20),WorkDateEnd, 23)[WorkDateEnd],[IsSponsor],[Sponsor],[Relation],[WorkUnit],[MedicalHistory],[IsCrime],CONVERT(varchar(20),CrimeDateBeg, 23)[CrimeDateBeg],CONVERT(varchar(20),CrimeDateEnd, 23)[CrimeDateEnd],[CrimeReason]
          FROM [hr_EmployeeOther]
          WHERE [Eoid]=@Eoid
        </Sql>
        <Sql Name="Add" ConnectionName="Auth" Description="新增其他项（其他）">
          if(CONVERT(nvarchar(20),CONVERT(datetime,@WorkDateBeg),23)&gt;CONVERT(datetime,@WorkDateEnd)
          )
          begin
          raiserror('结束日期时间不能早于起始日期',16,1) with nowait
          end
          else
          if(CONVERT(nvarchar(20),CONVERT(datetime,@CrimeDateBeg),23)&gt;CONVERT(datetime,@CrimeDateEnd)
          )
          begin
          raiserror('结束日期时间不能早于起始日期',16,1) with nowait
          end
          else
          begin
          INSERT INTO [hr_EmployeeOther]
          ([Eoid],[EmployeeID],[RecruitingSources],[IsEmploy],[EmployWorkUnit],[WorkDateBeg],[WorkDateEnd],[IsSponsor],[Sponsor],[Relation],[WorkUnit],[MedicalHistory],[IsCrime],[CrimeDateBeg],[CrimeDateEnd],[CrimeReason],[CreatedUser],[CreatedTime],[ModifiedUser],[ModifiedTime])
          VALUES(@Eoid,@EmployeeID,@RecruitingSources,@IsEmploy,@EmployWorkUnit,@WorkDateBeg,@WorkDateEnd,@IsSponsor,@Sponsor,@Relation,@WorkUnit,@MedicalHistory,@IsCrime,@CrimeDateBeg,@CrimeDateEnd,@CrimeReason,@CreatedUser,@CreatedTime,@ModifiedUser,@ModifiedTime);
          SELECT [Eoid],[EmployeeID],[RecruitingSources],case when ([IsEmploy]=0) then '否' when  ([IsEmploy]=1)  then '是' end as [IsEmploy],[EmployWorkUnit],[WorkDateBeg],[WorkDateEnd],case when ([IsSponsor]=0) then '否' when  ([IsSponsor]=1)  then '是' end as [IsSponsor],[Sponsor],[Relation],[WorkUnit],[MedicalHistory],case when ([IsCrime]=0) then '否' when  ([IsCrime]=1)  then '是' end as [IsCrime],[CrimeDateBeg],[CrimeDateEnd],[CrimeReason]
          FROM [hr_EmployeeOther]
          WHERE [AutoKey]=scope_identity()
          end
        </Sql>
        <Sql Name="GetEdit" ConnectionName="Auth" Description="查询其他项编辑（其他）">
          SELECT [Eoid],[EmployeeID],[RecruitingSources]
,case when ([IsEmploy]=0) then 'False' when  ([IsEmploy]=1)  then 'True' end as [IsEmploy],[EmployWorkUnit]
    ,IIF(convert(varchar,[WorkDateBeg],23)='1900-01-01',null,[WorkDateBeg])[WorkDateBeg]
    ,IIF(convert(varchar,[WorkDateEnd],23)='1900-01-01',null,[WorkDateEnd])[WorkDateEnd]
    ,case when ([IsSponsor]=0) then 'False' when  ([IsSponsor]=1)  then 'True' end as [IsSponsor]
,[Sponsor],[Relation],[WorkUnit],[MedicalHistory]
    ,case when ([IsCrime]=0) then 'False' when  ([IsCrime]=1)  then 'True' end as [IsCrime]
    ,IIF(convert(varchar,[CrimeDateBeg],23)='1900-01-01',null,[CrimeDateBeg])[CrimeDateBeg]
    ,IIF(convert(varchar,[CrimeDateEnd],23)='1900-01-01',null,[CrimeDateEnd])[CrimeDateEnd],[CrimeReason]
          FROM [hr_EmployeeOther]
          WHERE [Eoid]=@Eoid
        </Sql>
        <Sql Name="Update" ConnectionName="Auth" Description="更新其他项（其他）">
          if(CONVERT(nvarchar(20),CONVERT(datetime,@WorkDateBeg),23)&gt;CONVERT(datetime,@WorkDateEnd)
          )
          begin
          raiserror('结束日期时间不能早于起始日期',16,1) with nowait
          end
          else
          if(CONVERT(nvarchar(20),CONVERT(datetime,@CrimeDateBeg),23)&gt;CONVERT(datetime,@CrimeDateEnd)
          )
          begin
          raiserror('结束日期时间不能早于起始日期',16,1) with nowait
          end
          else
          begin
          UPDATE [hr_EmployeeOther]
          SET  [Eoid]=@Eoid,[EmployeeID]=@EmployeeID,[RecruitingSources]=@RecruitingSources,[IsEmploy]=@IsEmploy,[EmployWorkUnit]=@EmployWorkUnit,[WorkDateBeg]=@WorkDateBeg,[WorkDateEnd]=@WorkDateEnd,[IsSponsor]=@IsSponsor,[Sponsor]=@Sponsor,[Relation]=@Relation,[WorkUnit]=@WorkUnit,[MedicalHistory]=@MedicalHistory,[IsCrime]=@IsCrime,[CrimeDateBeg]=@CrimeDateBeg,[CrimeDateEnd]=@CrimeDateEnd,[CrimeReason]=@CrimeReason,[ModifiedUser]=@ModifiedUser,[ModifiedTime]=@ModifiedTime WHERE [Eoid]=@Eoid;
          SELECT [Eoid],[EmployeeID],[RecruitingSources],case when ([IsEmploy]=0) then '否' when  ([IsEmploy]=1)  then '是' end as [IsEmploy],[EmployWorkUnit],[WorkDateBeg],[WorkDateEnd],case when ([IsSponsor]=0) then '否' when  ([IsSponsor]=1)  then '是' end as [IsSponsor],[Sponsor],[Relation],[WorkUnit],[MedicalHistory],case when ([IsCrime]=0) then '否' when  ([IsCrime]=1)  then '是' end as [IsCrime],[CrimeDateBeg],[CrimeDateEnd],[CrimeReason]
          FROM [hr_EmployeeOther]
          WHERE [Eoid]=@Eoid
          end
        </Sql>
        <Sql Name="Delete" ConnectionName="Auth" Description="删除其他项（其他）">
          DECLARE @sql varchar(max);
          SET @sql= ' DELETE FROM [hr_EmployeeOther]
          WHERE [Eoid] in ('''+replace(@Eoid,',',''',''')+''') ; '
          EXEC (@sql)
        </Sql>
        <Sql Name="GetItem" ConnectionName="Auth" Description="获取其他项数据（其他）">          SELECT [Eoid],[EmployeeID],[RecruitingSources],case when ([IsEmploy]=0) then '否' when  ([IsEmploy]=1)  then '是' end as [IsEmploy],[EmployWorkUnit]
    ,IIF(convert(varchar,[WorkDateBeg],23)='1900-01-01',null,[WorkDateBeg])[WorkDateBeg]
    ,IIF(convert(varchar,[WorkDateEnd],23)='1900-01-01',null,[WorkDateEnd])[WorkDateEnd]
    ,case when ([IsSponsor]=0) then '否' when  ([IsSponsor]=1)  then '是' end as [IsSponsor],[Sponsor],[Relation],[WorkUnit],[MedicalHistory]
    ,case when ([IsCrime]=0) then '否' when  ([IsCrime]=1)  then '是' end as [IsCrime]
    ,IIF(convert(varchar,[CrimeDateBeg],23)='1900-01-01',null,[CrimeDateBeg])[CrimeDateBeg]
    ,IIF(convert(varchar,[CrimeDateEnd],23)='1900-01-01',null,[CrimeDateEnd])[CrimeDateEnd],[CrimeReason]
          FROM [hr_EmployeeOther]
          WHERE [EmployeeID]=@EmployeeID ;
        </Sql>
        <Sql Name="QueryCount" ConnectionName="Auth" Description="查询总数">
          declare @EID varchar(6)
          select @EID=EmployeeID from [hr_Employee] where UserID=@UserID
          SELECT count(*)
          FROM [hr_EmployeeOther]
          WHERE [EmployeeID]=@EID;
        </Sql>
        <Sql Name="QueryPage" ConnectionName="Auth" Description="查询分页">
          declare @EID varchar(6)
          select @EID=EmployeeID from [hr_Employee] where UserID=@UserID
          SELECT [Eoid],[EmployeeID],[RecruitingSources],case when ([IsEmploy]=0) then '否' when  ([IsEmploy]=1)  then '是' end as [IsEmploy],[EmployWorkUnit],[WorkDateBeg],[WorkDateEnd],case when ([IsSponsor]=0) then '否' when  ([IsSponsor]=1)  then '是' end as [IsSponsor],[Sponsor],[Relation],[WorkUnit],[MedicalHistory],case when ([IsCrime]=0) then '否' when  ([IsCrime]=1)  then '是' end as [IsCrime],[CrimeDateBeg],[CrimeDateEnd],[CrimeReason]
          FROM [hr_EmployeeOther]
          WHERE [EmployeeID]=@EID order by [AutoKey]
          OFFSET ((CAST(@Page as int)-1)*CAST(@Rows as int)) Rows FETCH NEXT CAST(@Rows as int) ROWS ONLY;
        </Sql>
      </Table>
      <Table Name="hr_CheckRecord" ConnectionName="Auth" TableName="hr_CheckRecord">
        <Sql Name="Add" ConnectionName="Auth" Description="新增考勤流水">
          INSERT INTO [hr_CheckRecord]
          ([DeptID],[Name],[CardTime],[Source],[Remark],[IsActive],[CreatedUser],[CreatedTime],[ModifiedUser],[ModifiedTime])
          VALUES(@DeptID,@Name,@CardTime,@Source,@Remark,@IsActive,@CreatedUser,@CreatedTime,@ModifiedUser,@ModifiedTime);
          SELECT [DeptID],[Name],[CardTime],[Source],[Remark],[IsActive],[CreatedUser],[CreatedTime],[ModifiedUser],[ModifiedTime],[AutoKey] FROM [hr_CheckRecord]
          WHERE [AutoKey]=scope_identity();
        </Sql>
        <Sql Name="Update" ConnectionName="Auth" SqlType="Execute" Description="更新考勤流水">
          UPDATE [hr_CheckRecord]
          SET  [DeptID]=@DeptID,[Name]=@Name,[CardTime]=@CardTime,[Source]=@Source,[Remark]=@Remark,[IsActive]=@IsActive,[ModifiedUser]=@ModifiedUser,[ModifiedTime]=@ModifiedTime WHERE [AutoKey]=@AutoKey;
        </Sql>
        <Sql Name="Delete" ConnectionName="Auth" SqlType="Execute" Description="删除考勤流水">
          DELETE FROM [hr_CheckRecord]
          WHERE [AutoKey]=@AutoKey;
        </Sql>
        <Sql Name="GetItem" ConnectionName="Auth" SqlType="Execute" Description="获取考勤流水">
          SELECT [DeptID],[Name],[CardTime],[Source],[Remark],[IsActive],[CreatedUser],[CreatedTime],[ModifiedUser],[ModifiedTime],[AutoKey] FROM [hr_CheckRecord]
          WHERE [AutoKey]=@ID;
        </Sql>
        <Sql Name="GetAll" ConnectionName="Auth" SqlType="Execute" Description="获取所有流水">
          SELECT [DeptID],[Name],[CardTime],[Source],[Remark],[IsActive],[CreatedUser],[CreatedTime],[ModifiedUser],[ModifiedTime],[AutoKey] FROM [hr_CheckRecord]
          where [AutoKey]=@AutoKey;
        </Sql>
        <Sql Name="Search" ConnectionName="Auth" Description="查询流水">
          if(CONVERT(nvarchar(20),CONVERT(datetime,@StartDate),23)&gt;CONVERT(datetime,@EndDate)
          )
          begin
          raiserror('结束日期时间不能早于起始日期',16,1) with nowait
          end
          else
          begin
          declare @CNo varchar(20)
          select @CNo=CardNo from [hr_Employee] where UserID=@UserID
          SELECT [DeptID],[CardNo],CONVERT(varchar(100),CardTime,20)as[CardTime],[Source],[Remark],[IsActive],[CreatedUser],[CreatedTime],[ModifiedUser],[ModifiedTime],[AutoKey]
          FROM [hr_CheckRecord]  where CONVERT(datetime,CardTime,20) between @StartDate and @EndDate and [CardNo] like '%'+@CNo+'%'
          end
        </Sql>
        <Sql Name="AddExtraRecord" ConnectionName="Auth" Description="添加异常补单记录">
          insert into [hr_CheckRecord] (CompanyID,Name,DeptID,CardID,CardTime,Source,Remark,IsActive,CreatedUser,CreatedTime,ModifiedUser,ModifiedTime)
          select CompanyID,Name,@DeptID
          ,@CardID
          ,@CardTime
          ,@Source
          ,@Remark
          ,@IsActive
          ,@CreatedUser
          ,@CreatedTime
          ,@ModifiedUser
          ,@ModifiedTime from [hr_Employee] where CardID=@CardID and IsActive =1;
          select d.Name as DeptName,e.Name as UserName,r.CardID,convert(varchar(100),r.[CardTime],20) as [CardTime],r.Source from [hr_CheckRecord] r
          inner join hr_Department d on r.DeptID=d.DeptID
          inner join hr_Employee e on r.[CardID]= e.[CardID]
          where r.DeptID=d.DeptID and r.[CardID]= e.[CardID]
        </Sql>
        <Sql Name="QueryByAddition" ConnectionName="Auth" Description="条件检索">
          IF(@StartDate='')
          BEGIN
          set @StartDate='1900-01-01'
          END
          IF(@EndDate='' or @EndDate='1900-01-01')
          BEGIN
          set @EndDate='2100-01-01'
          END
          SELECT a.[CardID],a.Name as UserName,c.Name+'-'+d.Name as DeptName,CONVERT(varchar(100),CardTime,20)as[CardTime],[Source],a.[Remark]
          FROM [hr_CheckRecord] a join
          (SELECT e2.* FROM [hr_Employee] e2 join fun_sys_GetUserDepartments(@UserID) g2 on e2.DeptID=g2.DeptID)e
          on a.[CardID]=e.[CardID] left join hr_Department d
          on a.[DeptID]=d.[DeptID] left join hr_Company c
          on d.CompanyID=c.CompanyID
          where a.[IsActive]=1 and CONVERT(datetime,CardTime,20) between @StartDate and @EndDate and  (e.[EmployeeID] like '%'+@EmployeeID+'%' or e.[Name] like '%'+@EmployeeID+'%' )  and (a.DeptID like '%'+@DeptID+'%' or c.CompanyID like '%'+@DeptID+'%')  order by a.[CardTime] desc
          OFFSET ((CAST(@Page as int)-1)*CAST(@Rows as int)) Rows FETCH NEXT CAST(@Rows as int) ROWS ONLY;
        </Sql>
        <Sql Name="ImportRecord" ConnectionName="Auth" Description="导入记录">
          insert into [hr_CheckRecord] (DeptID
          ,CardNo
          ,CardTime
          ,Source
          ,Remark
          ,IsActive
          ,CreatedUser
          ,CreatedTime
          ,ModifiedUser
          ,ModifiedTime)
          select (select DeptID from [hr_Employee] where CardNo=@CardNo),@CardNo, @CardTime,@Source,@Remark,1,@CreatedUser,@CreatedTime,@ModifiedUser,@ModifiedTime;
          select d.Name as DeptName,e.Name as UserName,r.CardNo,r.CardTime,r.Source from [hr_CheckRecord] r
          inner join hr_Department d on r.DeptID=d.DeptID
          inner join hr_Employee e on r.[CardNo]= e.[CardNo]
          where r.DeptID=d.DeptID and r.[CardNo]= e.[CardNo]
        </Sql>
        <Sql Name="GetDetailRecordBySelf" ConnectionName="Auth" SqlType="Execute" Description="获取考勤流水明细（自助）">
          SELECT [DeptID],CONVERT(varchar(100),CardTime,20)as[CardTime],[CardID],[Name],[Source],[Remark],[IsActive],[CreatedUser],[CreatedTime],[ModifiedUser],[ModifiedTime],[AutoKey] FROM [hr_CheckRecord]
          WHERE [AutoKey]=@ID;
        </Sql>
        <Sql Name="QueryRecordBySelf" ConnectionName="Auth" Description="根据时间检索考勤流水（自助）">
          if(CONVERT(nvarchar(20),CONVERT(datetime,@StartDate),23)&gt;CONVERT(datetime,@EndDate)
          )
          begin
          raiserror('结束日期时间不能早于起始日期',16,1) with nowait
          end
          else
          begin
          declare @cID varchar(20)
          select @cID=CardID from [hr_Employee] where UserID=@UserID
          SELECT [DeptID],[CardID],Name,CONVERT(varchar(100),CardTime,20)as[CardTime],[Source],[Remark],[IsActive],[CreatedUser],[CreatedTime],[ModifiedUser],[ModifiedTime],[AutoKey]
          FROM [hr_CheckRecord]  where CONVERT(datetime,CardTime,20) between @StartDate and @EndDate and [CardID]=@cID
          end
        </Sql>
        <Sql Name="QueryCount" ConnectionName="Auth" Description="查询总数">
          if(CONVERT(nvarchar(20),CONVERT(datetime,@StartDate),23)&gt;CONVERT(datetime,@EndDate)
          )
          begin
          raiserror('结束日期时间不能早于起始日期',16,1) with nowait
          end
          else
          begin
          declare @cID varchar(20)
          select @cID=CardID from [hr_Employee] where UserID=@UserID
          SELECT count(*)
          FROM [hr_CheckRecord]  where CONVERT(datetime,CardTime,20) between @StartDate and @EndDate and [CardID]=@cID
          end
        </Sql>
        <Sql Name="QueryPage" ConnectionName="Auth" Description="查询分页">
          if(CONVERT(nvarchar(20),CONVERT(datetime,@StartDate),23)&gt;CONVERT(datetime,@EndDate)
          )
          begin
          raiserror('结束日期时间不能早于起始日期',16,1) with nowait
          end
          else
          begin
          declare @cID varchar(20)
          select @cID=CardID from [hr_Employee] where UserID=@UserID
          SELECT [DeptID],[CardID],Name,CONVERT(varchar(100),CardTime,20)as[CardTime],[Source],[Remark],[IsActive],[CreatedUser],[CreatedTime],[ModifiedUser],[ModifiedTime],[AutoKey]
          FROM [hr_CheckRecord]  where CONVERT(datetime,CardTime,20) between @StartDate and @EndDate and [CardID]=@cID  order by [CardTime] desc
          OFFSET ((CAST(@Page as int)-1)*CAST(@Rows as int)) Rows FETCH NEXT CAST(@Rows as int) ROWS ONLY;
          end
        </Sql>
        <Sql Name="Count" ConnectionName="Auth" Description="总数">
          IF(@StartDate='')
          BEGIN
          set @StartDate='1900-01-01'
          END
          IF(@EndDate='' or @EndDate='1900-01-01')
          BEGIN
          set @EndDate='2100-01-01'
          END
          SELECT count(a.[AutoKey])
          FROM [hr_CheckRecord] a join
          (SELECT e2.* FROM [hr_Employee] e2 join fun_sys_GetUserDepartments(@UserID) g2 on e2.DeptID=g2.DeptID)e
          on a.[CardID]=e.[CardID]
          where a.[IsActive]=1
          and CONVERT(datetime,CardTime,20) between @StartDate and @EndDate and (e.[EmployeeID] like '%'+@EmployeeID+'%' or e.[Name] like '%'+@EmployeeID+'%' )
          and (a.DeptID like '%'+@DeptID+'%' or e.CompanyID like '%'+@DeptID+'%')
        </Sql>
        <Sql Name="Jiezhi" ConnectionName="Auth" Description="判断是否超过截止日期">
          if exists(select MonthClosingDay from hr_Rule where CompanyID=@CompanyID and MonthClosingDay&lt;day(GETDATE()))
          begin
          raiserror('当前日期已超过上月考勤生成截止日期，只能导入本月考勤记录！',16,1)
          end
        </Sql>
      </Table>
      <Table Name="hr_Reimbursement" ConnectionName="Auth" TableName="hr_Reimbursement">
        <Sql Name="Delete" ConnectionName="Auth" SqlType="Execute" Description="Delete">
          DECLARE @sql varchar(max);
          SET @sql='UPDATE [hr_Reimbursement]
          SET [ModifiedUser]='''+@ModifiedUser+''',[ModifiedTime]='''+@ModifiedTime+''',[IsActive]=0 WHERE [RID] in ('''+replace(@RIDs,',',''',''')+''') ;'
          EXEC(@sql);
        </Sql>
        <Sql Name="GetAll_Search" ConnectionName="Auth" Description="GetAll_Search">
          DECLARE @SQL NVARCHAR(2000)

          SET @SQL =
          'SELECT dbo.hr_Reimbursement.RID, CONVERT(VARCHAR, dbo.hr_Reimbursement.ApplicationDate) ApplicationDate, CONVERT(VARCHAR, dbo.hr_Reimbursement.Amount) Amount,
          CASE dbo.fl_MappingForm.Approved
          WHEN 1 THEN ''申请中''
          WHEN 2 THEN ''已核准''
          WHEN 0 THEN ''已驳回''
          ELSE ''草稿''
          END Approved,ISNULL(dbo.fl_MappingForm.Approved,-1) ApproveStatus, dbo.hr_Reimbursement.Remark,
          N''费用报销'' TypeName
          FROM dbo.hr_Reimbursement LEFT JOIN
          dbo.fl_MappingForm ON dbo.hr_Reimbursement.RID = dbo.fl_MappingForm.FormNo
          INNER JOIN hr_Employee ON hr_Reimbursement.EmployeeID=hr_Employee.EmployeeID
          WHERE dbo.hr_Reimbursement.IsActive=1 AND hr_Employee.UserID='''+@UserID+''' AND ISNULL(dbo.fl_MappingForm.Table_Name,N''fl_Reimbursement'') = N''fl_Reimbursement'''

          IF @StartDate &lt;&gt; '' AND @EndDate &lt;&gt; ''
          BEGIN
          SET @SQL = @SQL + ' AND dbo.hr_Reimbursement.ApplicationDate BETWEEN ''' + @StartDate + ''' AND ''' + @EndDate + ''''
          END
          ELSE IF @StartDate &lt;&gt; '' AND @EndDate = ''
          BEGIN
          SET @SQL = @SQL + ' AND dbo.hr_Reimbursement.ApplicationDate &gt;= ''' + @StartDate + ''''
          END
          ELSE IF @StartDate = '' AND @EndDate &lt;&gt; ''
          BEGIN
          SET @SQL = @SQL + ' AND dbo.hr_Reimbursement.ApplicationDate &lt;= ''' + @EndDate + ''''
          END

          IF @AmountStart &lt;&gt; '' AND @AmountEnd &lt;&gt; ''
          BEGIN
          SET @SQL = @SQL + ' AND dbo.hr_Reimbursement.Amount BETWEEN ''' + @AmountStart + ''' AND ''' + @AmountEnd + ''''
          END
          ELSE IF @AmountStart &lt;&gt; '' AND @AmountEnd = ''
          BEGIN
          SET @SQL = @SQL + ' AND dbo.hr_Reimbursement.Amount &gt;= ''' + @AmountStart + ''''
          END
          ELSE IF @AmountStart = '' AND @AmountEnd &lt;&gt; ''
          BEGIN
          SET @SQL = @SQL + ' AND dbo.hr_Reimbursement.Amount &lt;= ''' + @AmountEnd + ''''
          END
          IF @Approve &lt;&gt; '-2'
          BEGIN
          IF @Approve = '-1'
          BEGIN
          SET @SQL = @SQL + ' AND dbo.fl_MappingForm.Approved IS NULL'
          END
          ELSE
          BEGIN
          SET @SQL = @SQL + ' AND dbo.fl_MappingForm.Approved=' + @Approve
          END
          END

          SET @SQL = @SQL + ' ORDER BY ApplicationDate DESC'

          EXEC(@SQL)
        </Sql>
        <Sql Name="GetUserProfiles" SharedName="GetUserProfiles" ConnectionName="Auth" Description="全局用户属性">
          SELECT   dbo.sys_User.UserID, dbo.sys_User.UserName,dbo.sys_User.FullName, dbo.hr_Employee.EmployeeID,
          dbo.hr_Employee.Name AS EmployeeName, dbo.hr_Employee.DeptID, hr_Department.Name AS DepartmentName,
          dbo.hr_Employee.JobID, dbo.hr_Job.Name AS JobName, hr_Department.BUID, dbo.hr_BU.Name AS BUName,
          hr_Department.CompanyID, dbo.hr_Company.Name AS CompanyName,dbo.hr_Company.Name + ' - ' + hr_Department.Name AS CompanyDeptName,
          CONVERT(NVARCHAR, dbo.hr_Employee.HireDate) HireDate,hr_Employee.MobiPhone,hr_Employee.Telephone,
          IIF (hr_Employee.MobiPhone = '', hr_Employee.Telephone, hr_Employee.MobiPhone) Contact
          FROM dbo.hr_Company RIGHT OUTER JOIN
          dbo.hr_Job RIGHT OUTER JOIN
          dbo.hr_Employee LEFT OUTER JOIN
          dbo.hr_Department ON dbo.hr_Employee.DeptID = hr_Department.DeptID RIGHT OUTER JOIN
          dbo.sys_User ON dbo.hr_Employee.UserID = dbo.sys_User.UserID ON
          dbo.hr_Job.JobID = dbo.hr_Employee.JobID LEFT OUTER JOIN
          dbo.hr_BU ON hr_Department.BUID = dbo.hr_BU.BUID ON
          dbo.hr_Company.CompanyID = hr_Department.CompanyID
          WHERE dbo.sys_User.UserID=@UserID
        </Sql>
        <Sql Name="Add" ConnectionName="Auth" Description="Add">
          BEGIN TRY
          BEGIN TRAN Reimbursement
          INSERT INTO [dbo].[hr_Reimbursement]([RID],[CompanyID],[EmployeeID],[DeptID],[ApplicationDate],[ReimbursementDate],[Amount],[Fund],[Remark],[IsActive],[CreatedUser],[CreatedTime],[ModifiedUser],[ModifiedTime])
          VALUES(@RID,@CompanyID,@EmployeeID,@DeptID,@ApplicationDate,@ReimbursementDate,@Amount,@Fund,@Remark,@IsActive,@CreatedUser,@CreatedTime,@ModifiedUser,@ModifiedTime);

          DECLARE @SN INT,@Total INT,@CostCategories NVARCHAR(50),@SubCostCategories NVARCHAR(50),@Amount_Detail DECIMAL(18,2)
          SET @SN = 1
          SET @Total = LEN(@CostCategories_Set)-LEN(REPLACE(@CostCategories_Set,'|','')) - 1

          WHILE @SN &lt;= @Total
          BEGIN
          SELECT @CostCategories=SUBSTRING(@CostCategories_Set,
          CHARINDEX('|'+CONVERT(VARCHAR,@SN)+',',@CostCategories_Set)+3,
          CHARINDEX('|',@CostCategories_Set,CHARINDEX('|'+CONVERT(VARCHAR,@SN)+',',@CostCategories_Set)+3)-(CHARINDEX('|'+CONVERT(VARCHAR,@SN)+',',@CostCategories_Set)+3))
          SELECT @SubCostCategories=SUBSTRING(@SubCostCategories_Set,
          CHARINDEX('|'+CONVERT(VARCHAR,@SN)+',',@SubCostCategories_Set)+3,
          CHARINDEX('|',@SubCostCategories_Set,CHARINDEX('|'+CONVERT(VARCHAR,@SN)+',',@SubCostCategories_Set)+3)-(CHARINDEX('|'+CONVERT(VARCHAR,@SN)+',',@SubCostCategories_Set)+3))
          SELECT @Amount_Detail=CONVERT(DECIMAL(18,2),SUBSTRING(@Amount_Set,
          CHARINDEX('|'+CONVERT(VARCHAR,@SN)+',',@Amount_Set)+3,
          CHARINDEX('|',@Amount_Set,CHARINDEX('|'+CONVERT(VARCHAR,@SN)+',',@Amount_Set)+3)-(CHARINDEX('|'+CONVERT(VARCHAR,@SN)+',',@Amount_Set)+3)))

          INSERT INTO [dbo].[hr_ReimbursementDetail]([RID],[ItemNo],[CostCategories],[SubCostCategories],[Amount],[IsActive],[CreatedUser],[CreatedTime],[ModifiedUser],[ModifiedTime])
          VALUES(@RID,@SN,@CostCategories,@SubCostCategories,@Amount_Detail,1,@CreatedUser,@CreatedTime,@ModifiedUser,@ModifiedTime);

          SET @SN = @SN + 1
          END
          
          COMMIT TRAN Reimbursement
          END TRY
          BEGIN CATCH
          ROLLBACK TRAN Reimbursement
          DECLARE @ERROR NVARCHAR(MAX)
          SELECT @ERROR=ERROR_MESSAGE()
          RAISERROR (@ERROR ,15, 1) WITH NOWAIT
          END CATCH

          SELECT dbo.hr_Reimbursement.RID, CONVERT(VARCHAR, dbo.hr_Reimbursement.ApplicationDate) ApplicationDate, CONVERT(VARCHAR, dbo.hr_Reimbursement.Amount) Amount,
          CASE dbo.fl_MappingForm.Approved
          WHEN 1 THEN '申请中'
          WHEN 2 THEN '已核准'
          WHEN 0 THEN '已驳回'
          ELSE '草稿'
          END Approved,ISNULL(dbo.fl_MappingForm.Approved,-1) ApproveStatus, dbo.hr_Reimbursement.Remark,
          N'费用报销' TypeName
          FROM dbo.hr_Reimbursement LEFT JOIN
          dbo.fl_MappingForm ON dbo.hr_Reimbursement.RID = dbo.fl_MappingForm.FormNo
          WHERE dbo.hr_Reimbursement.RID = @RID AND ISNULL(dbo.fl_MappingForm.Table_Name,N'fl_Reimbursement') = N'fl_Reimbursement'
        </Sql>
        <Sql Name="GetItem" ConnectionName="Auth" Description="GetItem">
          SELECT [RID],hr_Reimbursement.[EmployeeID],hr_Employee.Name EmployeeName,[hr_Reimbursement].[DeptID],hr_Department.Name DeptName,hr_Company.Name CompanyName,[ApplicationDate],[ReimbursementDate],[Amount],[Fund],hr_Reimbursement.[Remark],hr_Reimbursement.[IsActive]
          FROM [dbo].[hr_Reimbursement] LEFT JOIN hr_Employee ON hr_Reimbursement.EmployeeID=hr_Employee.EmployeeID
          LEFT JOIN hr_Department ON [hr_Reimbursement].DeptID = hr_Department.DeptID
          LEFT JOIN hr_Company ON hr_Company.CompanyID=hr_Department.CompanyID
          WHERE dbo.hr_Reimbursement.RID = @RID
        </Sql>
        <Sql Name="GetItems_Detail" ConnectionName="Auth" Description="GetItems_Detail">
          SELECT [ItemNo] AS [Identity],[CostCategories],[SubCostCategories],CONVERT(VARCHAR, Amount) Amount,p1.PaymentName CostCategoriesName,p2.PaymentName SubCostCategoriesName
          FROM [dbo].[hr_ReimbursementDetail] detail INNER JOIN
          [dbo].[bi_Payment] p1 ON detail.CostCategories=p1.PaymentID INNER JOIN
          [dbo].[bi_Payment] p2 ON detail.SubCostCategories=p2.PaymentID
          WHERE RID = @RID
        </Sql>
        <Sql Name="Update" ConnectionName="Auth" Description="Update">
          BEGIN TRY
          BEGIN TRAN Reimbursement
          UPDATE [dbo].[hr_Reimbursement]
          SET [ReimbursementDate] = @ReimbursementDate,[Amount] = @Amount,[Fund] = @Fund,[Remark] = @Remark,[ModifiedUser] = @ModifiedUser,[ModifiedTime] = @ModifiedTime
          WHERE [RID] = @RID

          DELETE FROM hr_ReimbursementDetail WHERE [RID] = @RID

          DECLARE @SN INT,@Total INT,@CostCategories NVARCHAR(50),@SubCostCategories NVARCHAR(50),@Amount_Detail DECIMAL(18,2)
          SET @SN = 1
          SET @Total = LEN(@CostCategories_Set)-LEN(REPLACE(@CostCategories_Set,'|','')) - 1

          WHILE @SN &lt;= @Total
          BEGIN
          SELECT @CostCategories=SUBSTRING(@CostCategories_Set,
          CHARINDEX('|'+CONVERT(NVARCHAR,@SN)+',',@CostCategories_Set)+3,
          CHARINDEX('|',@CostCategories_Set,CHARINDEX('|'+CONVERT(NVARCHAR,@SN)+',',@CostCategories_Set)+3)-(CHARINDEX('|'+CONVERT(NVARCHAR,@SN)+',',@CostCategories_Set)+3))
          SELECT @SubCostCategories=SUBSTRING(@SubCostCategories_Set,
          CHARINDEX('|'+CONVERT(NVARCHAR,@SN)+',',@SubCostCategories_Set)+3,
          CHARINDEX('|',@SubCostCategories_Set,CHARINDEX('|'+CONVERT(NVARCHAR,@SN)+',',@SubCostCategories_Set)+3)-(CHARINDEX('|'+CONVERT(NVARCHAR,@SN)+',',@SubCostCategories_Set)+3))
          SELECT @Amount_Detail=CONVERT(DECIMAL(18,2),SUBSTRING(@Amount_Set,
          CHARINDEX('|'+CONVERT(NVARCHAR,@SN)+',',@Amount_Set)+3,
          CHARINDEX('|',@Amount_Set,CHARINDEX('|'+CONVERT(NVARCHAR,@SN)+',',@Amount_Set)+3)-(CHARINDEX('|'+CONVERT(NVARCHAR,@SN)+',',@Amount_Set)+3)))

          INSERT INTO [dbo].[hr_ReimbursementDetail]([RID],[ItemNo],[CostCategories],[SubCostCategories],[Amount],[IsActive],[CreatedUser],[CreatedTime],[ModifiedUser],[ModifiedTime])
          VALUES(@RID,@SN,@CostCategories,@SubCostCategories,@Amount_Detail,1,@ModifiedUser,@ModifiedTime,@ModifiedUser,@ModifiedTime);

          SET @SN = @SN + 1
          END
          COMMIT TRAN Reimbursement
          END TRY
          BEGIN CATCH
          ROLLBACK TRAN Reimbursement
          DECLARE @ERROR NVARCHAR(MAX)
          SELECT @ERROR=ERROR_MESSAGE()
          RAISERROR (@ERROR ,15, 1) WITH NOWAIT
          END CATCH

          SELECT dbo.hr_Reimbursement.RID, CONVERT(VARCHAR, dbo.hr_Reimbursement.ApplicationDate) ApplicationDate, CONVERT(VARCHAR, dbo.hr_Reimbursement.Amount) Amount,
          CASE dbo.fl_MappingForm.Approved
          WHEN 1 THEN '申请中'
          WHEN 2 THEN '已核准'
          WHEN 0 THEN '已驳回'
          ELSE '草稿'
          END Approved,ISNULL(dbo.fl_MappingForm.Approved,-1) ApproveStatus, dbo.hr_Reimbursement.Remark,
          N'费用报销' TypeName
          FROM dbo.hr_Reimbursement LEFT JOIN
          dbo.fl_MappingForm ON dbo.hr_Reimbursement.RID = dbo.fl_MappingForm.FormNo
          WHERE dbo.hr_Reimbursement.RID = @RID AND ISNULL(dbo.fl_MappingForm.Table_Name,N'fl_Reimbursement') = N'fl_Reimbursement'
        </Sql>
        <Sql Name="QueryCount" ConnectionName="Auth" Description="查询总数">
          DECLARE @SQL NVARCHAR(2000)

          SET @SQL =
          'SELECT count(*)
          FROM dbo.hr_Reimbursement LEFT JOIN
          dbo.fl_MappingForm ON dbo.hr_Reimbursement.RID = dbo.fl_MappingForm.FormNo
          INNER JOIN hr_Employee ON hr_Reimbursement.EmployeeID=hr_Employee.EmployeeID
          WHERE dbo.hr_Reimbursement.IsActive=1 AND hr_Employee.UserID='''+@UserID+''' AND ISNULL(dbo.fl_MappingForm.Table_Name,N''fl_Reimbursement'') = N''fl_Reimbursement'''

          IF @StartDate &lt;&gt; '' AND @EndDate &lt;&gt; ''
          BEGIN
          SET @SQL = @SQL + ' AND dbo.hr_Reimbursement.ApplicationDate BETWEEN ''' + @StartDate + ''' AND ''' + @EndDate + ''''
          END
          ELSE IF @StartDate &lt;&gt; '' AND @EndDate = ''
          BEGIN
          SET @SQL = @SQL + ' AND dbo.hr_Reimbursement.ApplicationDate &gt;= ''' + @StartDate + ''''
          END
          ELSE IF @StartDate = '' AND @EndDate &lt;&gt; ''
          BEGIN
          SET @SQL = @SQL + ' AND dbo.hr_Reimbursement.ApplicationDate &lt;= ''' + @EndDate + ''''
          END

          IF @AmountStart &lt;&gt; '' AND @AmountEnd &lt;&gt; ''
          BEGIN
          SET @SQL = @SQL + ' AND dbo.hr_Reimbursement.Amount BETWEEN ''' + @AmountStart + ''' AND ''' + @AmountEnd + ''''
          END
          ELSE IF @AmountStart &lt;&gt; '' AND @AmountEnd = ''
          BEGIN
          SET @SQL = @SQL + ' AND dbo.hr_Reimbursement.Amount &gt;= ''' + @AmountStart + ''''
          END
          ELSE IF @AmountStart = '' AND @AmountEnd &lt;&gt; ''
          BEGIN
          SET @SQL = @SQL + ' AND dbo.hr_Reimbursement.Amount &lt;= ''' + @AmountEnd + ''''
          END
          IF @Approve &lt;&gt; '-2'
          BEGIN
          IF @Approve = '-1'
          BEGIN
          SET @SQL = @SQL + ' AND dbo.fl_MappingForm.Approved IS NULL'
          END
          ELSE
          BEGIN
          SET @SQL = @SQL + ' AND dbo.fl_MappingForm.Approved=' + @Approve
          END
          END

          EXEC(@SQL)
        </Sql>
        <Sql Name="QueryPage" ConnectionName="Auth" Description="查询分页">
          DECLARE @SQL NVARCHAR(2000)

          SET @SQL =
          'SELECT dbo.hr_Reimbursement.RID, CONVERT(VARCHAR, dbo.hr_Reimbursement.ApplicationDate) ApplicationDate, CONVERT(VARCHAR, dbo.hr_Reimbursement.Amount) Amount,
          CASE dbo.fl_MappingForm.Approved
          WHEN 1 THEN ''申请中''
          WHEN 2 THEN ''已核准''
          WHEN 0 THEN ''已驳回''
          ELSE ''草稿''
          END Approved,ISNULL(dbo.fl_MappingForm.Approved,-1) ApproveStatus, dbo.hr_Reimbursement.Remark,
          N''费用报销'' TypeName
          FROM dbo.hr_Reimbursement LEFT JOIN
          dbo.fl_MappingForm ON dbo.hr_Reimbursement.RID = dbo.fl_MappingForm.FormNo
          INNER JOIN hr_Employee ON hr_Reimbursement.EmployeeID=hr_Employee.EmployeeID
          WHERE dbo.hr_Reimbursement.IsActive=1 AND hr_Employee.UserID='''+@UserID+''' AND ISNULL(dbo.fl_MappingForm.Table_Name,N''fl_Reimbursement'') = N''fl_Reimbursement'''

          IF @StartDate &lt;&gt; '' AND @EndDate &lt;&gt; ''
          BEGIN
          SET @SQL = @SQL + ' AND dbo.hr_Reimbursement.ApplicationDate BETWEEN ''' + @StartDate + ''' AND ''' + @EndDate + ''''
          END
          ELSE IF @StartDate &lt;&gt; '' AND @EndDate = ''
          BEGIN
          SET @SQL = @SQL + ' AND dbo.hr_Reimbursement.ApplicationDate &gt;= ''' + @StartDate + ''''
          END
          ELSE IF @StartDate = '' AND @EndDate &lt;&gt; ''
          BEGIN
          SET @SQL = @SQL + ' AND dbo.hr_Reimbursement.ApplicationDate &lt;= ''' + @EndDate + ''''
          END

          IF @AmountStart &lt;&gt; '' AND @AmountEnd &lt;&gt; ''
          BEGIN
          SET @SQL = @SQL + ' AND dbo.hr_Reimbursement.Amount BETWEEN ''' + @AmountStart + ''' AND ''' + @AmountEnd + ''''
          END
          ELSE IF @AmountStart &lt;&gt; '' AND @AmountEnd = ''
          BEGIN
          SET @SQL = @SQL + ' AND dbo.hr_Reimbursement.Amount &gt;= ''' + @AmountStart + ''''
          END
          ELSE IF @AmountStart = '' AND @AmountEnd &lt;&gt; ''
          BEGIN
          SET @SQL = @SQL + ' AND dbo.hr_Reimbursement.Amount &lt;= ''' + @AmountEnd + ''''
          END
          IF @Approve &lt;&gt; '-2'
          BEGIN
          IF @Approve = '-1'
          BEGIN
          SET @SQL = @SQL + ' AND dbo.fl_MappingForm.Approved IS NULL'
          END
          ELSE
          BEGIN
          SET @SQL = @SQL + ' AND dbo.fl_MappingForm.Approved=' + @Approve
          END
          END

          SET @SQL = @SQL + ' ORDER BY ApplicationDate DESC'

          SET @sql = @sql + '
          OFFSET ('+ CAST((@Page - 1) * @Rows AS varchar(10)) +') ROWS

          FETCH NEXT ' + CAST(@Rows AS varchar(10)) +' ROWS ONLY';

          EXEC(@SQL)
        </Sql>
      </Table>
      <Table Name="hr_OvertimeApplicationForm" ConnectionName="Auth" TableName="hr_OvertimeApplicationForm">
        <Sql Name="Delete" ConnectionName="Auth" SqlType="Execute" Description="Delete">
          DECLARE @sql varchar(max);
          SET @sql='UPDATE [hr_OvertimeApplicationForm]
          SET [ModifiedUser]='''+@ModifiedUser+''',[ModifiedTime]='''+@ModifiedTime+''',[IsActive]=0 WHERE [OAFID] in ('''+replace(@OAFIDs,',',''',''')+''') ;'
          EXEC(@sql);
        </Sql>
        <Sql Name="GetAll_Search" ConnectionName="Auth" Description="GetAll_Search">
          DECLARE @SQL NVARCHAR(2000)

          SET @SQL =
          'SELECT dbo.hr_OvertimeApplicationForm.OAFID, CONVERT(VARCHAR, dbo.hr_OvertimeApplicationForm.ApplicationDate) ApplicationDate,
          CONVERT(VARCHAR(16), dbo.hr_OvertimeApplicationForm.StartDate, 120) StartDate, CONVERT(VARCHAR(16), dbo.hr_OvertimeApplicationForm.EndDate, 120) EndDate,
          CASE [TimeUnit] WHEN ''D'' THEN CONVERT(NVARCHAR,ApplicationHours) + ''天'' WHEN ''H'' THEN CONVERT(NVARCHAR,ApplicationHours) + ''小时'' ELSE CONVERT(NVARCHAR,ApplicationHours) END ApplicationHoursWithUnit,
          CASE dbo.fl_MappingForm.Approved
          WHEN 1 THEN ''申请中''
          WHEN 2 THEN ''已核准''
          WHEN 0 THEN ''已驳回''
          ELSE ''草稿''
          END Approved,ISNULL(dbo.fl_MappingForm.Approved,-1) ApproveStatus, dbo.hr_OvertimeApplicationForm.Reason
          FROM dbo.hr_OvertimeApplicationForm LEFT JOIN
          dbo.fl_MappingForm ON dbo.hr_OvertimeApplicationForm.OAFID = dbo.fl_MappingForm.FormNo
          INNER JOIN hr_Employee ON hr_OvertimeApplicationForm.EmployeeID=hr_Employee.EmployeeID
          WHERE dbo.hr_OvertimeApplicationForm.IsActive=1 AND hr_Employee.UserID='''+@UserID+''' AND ISNULL(dbo.fl_MappingForm.Table_Name,N''fl_OvertimeApplicationForm'') = N''fl_OvertimeApplicationForm'''

          IF @StartDate &lt;&gt; '' AND @EndDate &lt;&gt; ''
          BEGIN
          SET @SQL = @SQL + ' AND dbo.hr_OvertimeApplicationForm.StartDate &gt;= ''' + @StartDate + ''' AND dbo.hr_OvertimeApplicationForm.EndDate &lt;= ''' + @EndDate + ''''
          END
          ELSE IF @StartDate &lt;&gt; '' AND @EndDate = ''
          BEGIN
          SET @SQL = @SQL + ' AND dbo.hr_OvertimeApplicationForm.StartDate &gt;= ''' + @StartDate + ''''
          END
          ELSE IF @StartDate = '' AND @EndDate &lt;&gt; ''
          BEGIN
          SET @SQL = @SQL + ' AND dbo.hr_OvertimeApplicationForm.EndDate &lt;= ''' + @EndDate + ''''
          END

          IF @Approve &lt;&gt; '-2'
          BEGIN
          IF @Approve = '-1'
          BEGIN
          SET @SQL = @SQL + ' AND dbo.fl_MappingForm.Approved IS NULL'
          END
          ELSE
          BEGIN
          SET @SQL = @SQL + ' AND dbo.fl_MappingForm.Approved=' + @Approve
          END
          END

          SET @SQL = @SQL + ' ORDER BY ApplicationDate DESC'

          EXEC(@SQL)
        </Sql>
        <Sql Name="Add" ConnectionName="Auth" Description="Add">
          IF NOT EXISTS (SELECT * FROM hr_OvertimeApplicationForm WHERE IsActive=1 AND EmployeeID=@EmployeeID AND (StartDate&lt;=@EndDate AND EndDate&gt;=@StartDate))
          BEGIN
          INSERT INTO [dbo].[hr_OvertimeApplicationForm]([OAFID],[EmployeeID],[CompanyID],[DeptID],[JobID],[ApplicationDate],[StartDate],[EndDate],[ApplicationHours],[TimeUnit],[Reason],[IsActive],[CreatedUser],[CreatedTime],[ModifiedUser],[ModifiedTime])
          VALUES(@OAFID,@EmployeeID,@CompanyID,@DeptID,@JobID,@ApplicationDate,@StartDate,@EndDate,@ApplicationHours,@TimeUnit,@Reason,1,@CreatedUser,@CreatedTime,@ModifiedUser,@ModifiedTime);

          SELECT dbo.hr_OvertimeApplicationForm.OAFID, CONVERT(VARCHAR, dbo.hr_OvertimeApplicationForm.ApplicationDate) ApplicationDate,
          CONVERT(VARCHAR(16), dbo.hr_OvertimeApplicationForm.StartDate, 120) StartDate, CONVERT(VARCHAR(16), dbo.hr_OvertimeApplicationForm.EndDate, 120) EndDate,
          CASE [TimeUnit] WHEN 'D' THEN CONVERT(NVARCHAR,ApplicationHours) + '天' WHEN 'H' THEN CONVERT(NVARCHAR,ApplicationHours) + '小时' ELSE CONVERT(NVARCHAR,ApplicationHours) END ApplicationHoursWithUnit,
          CASE dbo.fl_MappingForm.Approved
          WHEN 1 THEN '申请中'
          WHEN 2 THEN '已核准'
          WHEN 0 THEN '已驳回'
          ELSE '草稿'
          END Approved,ISNULL(dbo.fl_MappingForm.Approved,-1) ApproveStatus, dbo.hr_OvertimeApplicationForm.Reason
          FROM dbo.hr_OvertimeApplicationForm LEFT JOIN
          dbo.fl_MappingForm ON dbo.hr_OvertimeApplicationForm.OAFID = dbo.fl_MappingForm.FormNo
          WHERE dbo.hr_OvertimeApplicationForm.OAFID = @OAFID AND ISNULL(dbo.fl_MappingForm.Table_Name,N'fl_OvertimeApplicationForm') = N'fl_OvertimeApplicationForm'
          END
          ELSE
          BEGIN
          RAISERROR ('该时间段与已存在数据冲突，无法保存！' ,15, 1) WITH NOWAIT
          END
        </Sql>
        <Sql Name="GetItem" ConnectionName="Auth" Description="GetItem">
          SELECT [OAFID],hr_Employee.Name EmployeeName,hr_Job.Name JobName,hr_Company.Name + ' - ' + hr_Department.Name DeptName,CONVERT(VARCHAR, [ApplicationDate]) ApplicationDate,
          CONVERT(VARCHAR(16), dbo.hr_OvertimeApplicationForm.StartDate, 120) StartDate, CONVERT(VARCHAR(16), dbo.hr_OvertimeApplicationForm.EndDate, 120) EndDate,
          [ApplicationHours],[Reason],dbo.hr_OvertimeApplicationForm.EmployeeID,[TimeUnit],
          CASE [TimeUnit] WHEN 'D' THEN CONVERT(NVARCHAR,ApplicationHours) + '天' WHEN 'H' THEN CONVERT(NVARCHAR,ApplicationHours) + '小时' ELSE CONVERT(NVARCHAR,ApplicationHours) END ApplicationHoursWithUnit
          FROM [dbo].[hr_OvertimeApplicationForm] LEFT JOIN hr_Employee ON hr_OvertimeApplicationForm.EmployeeID=hr_Employee.EmployeeID
          LEFT JOIN hr_Department ON [hr_OvertimeApplicationForm].DeptID = hr_Department.DeptID
          LEFT JOIN hr_Company ON hr_Company.CompanyID=hr_Department.CompanyID
          LEFT JOIN hr_Job ON hr_Employee.JobID=hr_Job.JobID
          WHERE dbo.hr_OvertimeApplicationForm.OAFID = @OAFID
        </Sql>
        <Sql Name="Update" ConnectionName="Auth" Description="Update">
          IF NOT EXISTS (SELECT * FROM hr_OvertimeApplicationForm WHERE IsActive=1 AND OAFID &lt;&gt; @OAFID AND EmployeeID=@EmployeeID AND (StartDate&lt;=@EndDate AND EndDate&gt;=@StartDate))
          BEGIN
          UPDATE [dbo].[hr_OvertimeApplicationForm]
          SET [StartDate] = @StartDate,[EndDate] = @EndDate,[ApplicationHours] = @ApplicationHours,[TimeUnit]=@TimeUnit,[Reason] = @Reason,[ModifiedUser] = @ModifiedUser,[ModifiedTime] = @ModifiedTime
          WHERE [OAFID] = @OAFID

          SELECT dbo.hr_OvertimeApplicationForm.OAFID, CONVERT(VARCHAR, dbo.hr_OvertimeApplicationForm.ApplicationDate) ApplicationDate,
          CONVERT(VARCHAR(16), dbo.hr_OvertimeApplicationForm.StartDate, 120) StartDate, CONVERT(VARCHAR(16), dbo.hr_OvertimeApplicationForm.EndDate, 120) EndDate,
          CASE [TimeUnit] WHEN 'D' THEN CONVERT(NVARCHAR,ApplicationHours) + '天' WHEN 'H' THEN CONVERT(NVARCHAR,ApplicationHours) + '小时' ELSE CONVERT(NVARCHAR,ApplicationHours) END ApplicationHoursWithUnit,
          CASE dbo.fl_MappingForm.Approved
          WHEN 1 THEN '申请中'
          WHEN 2 THEN '已核准'
          WHEN 0 THEN '已驳回'
          ELSE '草稿'
          END Approved,ISNULL(dbo.fl_MappingForm.Approved,-1) ApproveStatus, dbo.hr_OvertimeApplicationForm.Reason
          FROM dbo.hr_OvertimeApplicationForm LEFT JOIN
          dbo.fl_MappingForm ON dbo.hr_OvertimeApplicationForm.OAFID = dbo.fl_MappingForm.FormNo
          WHERE dbo.hr_OvertimeApplicationForm.OAFID = @OAFID AND ISNULL(dbo.fl_MappingForm.Table_Name,N'fl_OvertimeApplicationForm') = N'fl_OvertimeApplicationForm'
          END
          ELSE
          BEGIN
          RAISERROR ('该时间段与已存在数据冲突，无法保存！' ,15, 1) WITH NOWAIT
          END
        </Sql>
        <Sql Name="QueryCount" ConnectionName="Auth" Description="查询总数">
          DECLARE @SQL NVARCHAR(2000)

          SET @SQL =
          'SELECT count(*)
          FROM dbo.hr_OvertimeApplicationForm LEFT JOIN
          dbo.fl_MappingForm ON dbo.hr_OvertimeApplicationForm.OAFID = dbo.fl_MappingForm.FormNo
          INNER JOIN hr_Employee ON hr_OvertimeApplicationForm.EmployeeID=hr_Employee.EmployeeID
          WHERE dbo.hr_OvertimeApplicationForm.IsActive=1 AND hr_Employee.EmployeeID='''+@EmployeeID+''' AND ISNULL(dbo.fl_MappingForm.Table_Name,N''fl_OvertimeApplicationForm'') = N''fl_OvertimeApplicationForm'''

          IF @StartDate &lt;&gt; '' AND @EndDate &lt;&gt; ''
          BEGIN
          SET @SQL = @SQL + ' AND dbo.hr_OvertimeApplicationForm.StartDate &gt;= ''' + @StartDate + ''' AND dbo.hr_OvertimeApplicationForm.EndDate &lt;= ''' + @EndDate + ''''
          END
          ELSE IF @StartDate &lt;&gt; '' AND @EndDate = ''
          BEGIN
          SET @SQL = @SQL + ' AND dbo.hr_OvertimeApplicationForm.StartDate &gt;= ''' + @StartDate + ''''
          END
          ELSE IF @StartDate = '' AND @EndDate &lt;&gt; ''
          BEGIN
          SET @SQL = @SQL + ' AND dbo.hr_OvertimeApplicationForm.EndDate &lt;= ''' + @EndDate + ''''
          END

          IF @Approve &lt;&gt; '-2'
          BEGIN
          IF @Approve = '-1'
          BEGIN
          SET @SQL = @SQL + ' AND dbo.fl_MappingForm.Approved IS NULL'
          END
          ELSE
          BEGIN
          SET @SQL = @SQL + ' AND dbo.fl_MappingForm.Approved=' + @Approve
          END
          END


          EXEC(@SQL)
        </Sql>
        <Sql Name="QueryPage" ConnectionName="Auth" Description="查询分页">
          DECLARE @SQL NVARCHAR(2000)

          SET @SQL =
          'SELECT dbo.hr_OvertimeApplicationForm.OAFID, CONVERT(VARCHAR, dbo.hr_OvertimeApplicationForm.ApplicationDate) ApplicationDate,
          CONVERT(VARCHAR(16), dbo.hr_OvertimeApplicationForm.StartDate, 120) StartDate, CONVERT(VARCHAR(16), dbo.hr_OvertimeApplicationForm.EndDate, 120) EndDate,
          CASE [TimeUnit] WHEN ''D'' THEN CONVERT(NVARCHAR,ApplicationHours) + ''天'' WHEN ''H'' THEN CONVERT(NVARCHAR,ApplicationHours) + ''小时'' ELSE CONVERT(NVARCHAR,ApplicationHours) END ApplicationHoursWithUnit,
          CASE dbo.fl_MappingForm.Approved
          WHEN 1 THEN ''申请中''
          WHEN 2 THEN ''已核准''
          WHEN 0 THEN ''已驳回''
          ELSE ''草稿''
          END Approved,ISNULL(dbo.fl_MappingForm.Approved,-1) ApproveStatus, dbo.hr_OvertimeApplicationForm.Reason
          FROM dbo.hr_OvertimeApplicationForm LEFT JOIN
          dbo.fl_MappingForm ON dbo.hr_OvertimeApplicationForm.OAFID = dbo.fl_MappingForm.FormNo
          INNER JOIN hr_Employee ON hr_OvertimeApplicationForm.EmployeeID=hr_Employee.EmployeeID
          WHERE dbo.hr_OvertimeApplicationForm.IsActive=1 AND hr_Employee.EmployeeID='''+@EmployeeID+''' AND ISNULL(dbo.fl_MappingForm.Table_Name,N''fl_OvertimeApplicationForm'') = N''fl_OvertimeApplicationForm'''

          IF @StartDate &lt;&gt; '' AND @EndDate &lt;&gt; ''
          BEGIN
          SET @SQL = @SQL + ' AND dbo.hr_OvertimeApplicationForm.StartDate &gt;= ''' + @StartDate + ''' AND dbo.hr_OvertimeApplicationForm.EndDate &lt;= ''' + @EndDate + ''''
          END
          ELSE IF @StartDate &lt;&gt; '' AND @EndDate = ''
          BEGIN
          SET @SQL = @SQL + ' AND dbo.hr_OvertimeApplicationForm.StartDate &gt;= ''' + @StartDate + ''''
          END
          ELSE IF @StartDate = '' AND @EndDate &lt;&gt; ''
          BEGIN
          SET @SQL = @SQL + ' AND dbo.hr_OvertimeApplicationForm.EndDate &lt;= ''' + @EndDate + ''''
          END

          IF @Approve &lt;&gt; '-2'
          BEGIN
          IF @Approve = '-1'
          BEGIN
          SET @SQL = @SQL + ' AND dbo.fl_MappingForm.Approved IS NULL'
          END
          ELSE
          BEGIN
          SET @SQL = @SQL + ' AND dbo.fl_MappingForm.Approved=' + @Approve
          END
          END

          SET @SQL = @SQL + ' ORDER BY ApplicationDate DESC'

          SET @sql = @sql + '
          OFFSET ('+ CAST((@Page - 1) * @Rows AS varchar(10)) +') ROWS

          FETCH NEXT ' + CAST(@Rows AS varchar(10)) +' ROWS ONLY';
          EXEC(@SQL)
        </Sql>
      </Table>
      <Table Name="hr_LeaveApplicationForm" ConnectionName="Auth" TableName="hr_LeaveApplicationForm">
        <Sql Name="Delete" ConnectionName="Auth" SqlType="Execute" Description="Delete">
          DECLARE @sql varchar(max);
          SET @sql='UPDATE [hr_LeaveApplicationForm]
          SET [ModifiedUser]='''+@ModifiedUser+''',[ModifiedTime]='''+@ModifiedTime+''',[IsActive]=0 WHERE [LAFID] in ('''+replace(@LAFIDs,',',''',''')+''') ;'
          EXEC(@sql);
        </Sql>
        <Sql Name="GetAll_Search" ConnectionName="Auth" Description="GetAll_Search">
          DECLARE @SQL NVARCHAR(2000)

          SET @SQL =
          'SELECT dbo.hr_LeaveApplicationForm.LAFID, CONVERT(VARCHAR, dbo.hr_LeaveApplicationForm.ApplicationDate) ApplicationDate,
          CONVERT(VARCHAR(16), dbo.hr_LeaveApplicationForm.StartDate, 120) StartDate, CONVERT(VARCHAR(16), dbo.hr_LeaveApplicationForm.EndDate, 120) EndDate,
          hr_LeaveType.LeaveName LeaveType,
          CASE dbo.fl_MappingForm.Approved
          WHEN 1 THEN ''申请中''
          WHEN 2 THEN ''已核准''
          WHEN 0 THEN ''已驳回''
          ELSE ''草稿''
          END Approved,ISNULL(dbo.fl_MappingForm.Approved,-1) ApproveStatus, dbo.hr_LeaveApplicationForm.Reason
          FROM dbo.hr_LeaveApplicationForm LEFT JOIN
          dbo.fl_MappingForm ON dbo.hr_LeaveApplicationForm.LAFID = dbo.fl_MappingForm.FormNo
          INNER JOIN hr_Employee ON hr_LeaveApplicationForm.EmployeeID=hr_Employee.EmployeeID
          INNER JOIN hr_LeaveType ON dbo.hr_LeaveApplicationForm.LeaveType=hr_LeaveType.LvID
          WHERE dbo.hr_LeaveApplicationForm.IsActive=1 AND hr_Employee.UserID='''+@UserID+''' AND ISNULL(dbo.fl_MappingForm.Table_Name,N''fl_LeaveApplicationForm'') = N''fl_LeaveApplicationForm'''

          IF @StartDate &lt;&gt; '' AND @EndDate &lt;&gt; ''
          BEGIN
          SET @SQL = @SQL + ' AND dbo.hr_LeaveApplicationForm.StartDate &gt;= ''' + @StartDate + ''' AND dbo.hr_LeaveApplicationForm.EndDate &lt;= ''' + @EndDate + ''''
          END
          ELSE IF @StartDate &lt;&gt; '' AND @EndDate = ''
          BEGIN
          SET @SQL = @SQL + ' AND dbo.hr_LeaveApplicationForm.StartDate &gt;= ''' + @StartDate + ''''
          END
          ELSE IF @StartDate = '' AND @EndDate &lt;&gt; ''
          BEGIN
          SET @SQL = @SQL + ' AND dbo.hr_LeaveApplicationForm.EndDate &lt;= ''' + @EndDate + ''''
          END

          IF @LeaveType &lt;&gt; '全部'
          BEGIN
          SET @SQL = @SQL + ' AND dbo.hr_LeaveApplicationForm.LeaveType=''' + @LeaveType + ''''
          END

          IF @Approve &lt;&gt; '-2'
          BEGIN
          IF @Approve = '-1'
          BEGIN
          SET @SQL = @SQL + ' AND dbo.fl_MappingForm.Approved IS NULL'
          END
          ELSE
          BEGIN
          SET @SQL = @SQL + ' AND dbo.fl_MappingForm.Approved=' + @Approve
          END
          END

          SET @SQL = @SQL + ' ORDER BY ApplicationDate DESC'

          EXEC(@SQL)
        </Sql>
        <Sql Name="Add" ConnectionName="Auth" Description="Add">
          IF NOT EXISTS (SELECT * FROM hr_LeaveApplicationForm WHERE IsActive=1 AND EmployeeID=@EmployeeID AND (StartDate&lt;=@EndDate AND EndDate&gt;=@StartDate))
          BEGIN
          INSERT INTO [dbo].[hr_LeaveApplicationForm]([LAFID],[EmployeeID],[CompanyID],[DeptID],[HireDate],[JobID],[ApplicationDate],[StartDate],[EndDate],
          [ApplicationHours],[TimeUnit],[LeaveType],[Reason],[AssociateContent],[AssociateEmployeeID],[IsActive],[CreatedUser],[CreatedTime],[ModifiedUser],[ModifiedTime])
          VALUES(@LAFID,@EmployeeID,@CompanyID,@DeptID,@HireDate,@JobID,@ApplicationDate,@StartDate,@EndDate,@ApplicationHours,@TimeUnit,@LeaveType,@Reason,
          @AssociateContent,@AssociateEmployeeID,1,@CreatedUser,@CreatedTime,@ModifiedUser,@ModifiedTime);

          SELECT dbo.hr_LeaveApplicationForm.LAFID, CONVERT(VARCHAR, dbo.hr_LeaveApplicationForm.ApplicationDate) ApplicationDate,
          CONVERT(VARCHAR(16), dbo.hr_LeaveApplicationForm.StartDate, 120) StartDate, CONVERT(VARCHAR(16), dbo.hr_LeaveApplicationForm.EndDate, 120) EndDate,
          IIF(ApplicationHours%1=0,CONVERT(VARCHAR,cast(ApplicationHours as dec(18,0))),CONVERT(VARCHAR,ApplicationHours))+IIF(TimeUnit='D','天','小时') as [ApplicationHours],
          hr_LeaveType.LeaveName,
          CASE dbo.fl_MappingForm.Approved
          WHEN 1 THEN '申请中'
          WHEN 2 THEN '已核准'
          WHEN 0 THEN '已驳回'
          ELSE '草稿'
          END Approved,ISNULL(dbo.fl_MappingForm.Approved,-1) ApproveStatus, dbo.hr_LeaveApplicationForm.Reason
          FROM dbo.hr_LeaveApplicationForm LEFT JOIN
          dbo.fl_MappingForm ON dbo.hr_LeaveApplicationForm.LAFID = dbo.fl_MappingForm.FormNo
          INNER JOIN hr_LeaveType ON dbo.hr_LeaveApplicationForm.LeaveType=hr_LeaveType.LvID
          WHERE dbo.hr_LeaveApplicationForm.LAFID = @LAFID AND ISNULL(dbo.fl_MappingForm.Table_Name,N'fl_LeaveApplicationForm') = N'fl_LeaveApplicationForm'
          END
          ELSE
          BEGIN
          RAISERROR ('该时间段与已存在数据冲突，无法保存！' ,15, 1) WITH NOWAIT
          END
        </Sql>
        <Sql Name="GetItem" ConnectionName="Auth" Description="GetItem">
          SELECT [LAFID],hr_Employee.Name EmployeeName,hr_Job.Name JobName,hr_Company.Name + ' - ' + hr_Department.Name DeptName,CONVERT(VARCHAR, [ApplicationDate]) ApplicationDate,
          CONVERT(VARCHAR(16), dbo.hr_LeaveApplicationForm.StartDate, 120) StartDate, CONVERT(VARCHAR(16), dbo.hr_LeaveApplicationForm.EndDate, 120) EndDate,
          CONVERT(VARCHAR,hr_Employee.[HireDate]) HireDate,[ApplicationHours],[TimeUnit],[LeaveType],[Reason],[AssociateContent],[AssociateEmployeeID],e1.Name AssociateEmployeeName,
          CASE [TimeUnit] WHEN 'D' THEN CONVERT(NVARCHAR,ApplicationHours) + '天' WHEN 'H' THEN CONVERT(NVARCHAR,ApplicationHours) + '小时' ELSE '' END ApplicationHoursWithUnit,
          dbo.hr_LeaveApplicationForm.EmployeeID,hr_LeaveType.LeaveName LeaveTypeName
          FROM [dbo].[hr_LeaveApplicationForm] LEFT JOIN hr_Employee ON hr_LeaveApplicationForm.EmployeeID=hr_Employee.EmployeeID
          LEFT JOIN hr_Department ON [hr_LeaveApplicationForm].DeptID = hr_Department.DeptID
          LEFT JOIN hr_Company ON hr_Company.CompanyID=hr_Department.CompanyID
          LEFT JOIN hr_Job ON hr_Employee.JobID=hr_Job.JobID
          LEFT JOIN hr_Employee e1 ON hr_LeaveApplicationForm.AssociateEmployeeID=e1.EmployeeID
          INNER JOIN hr_LeaveType ON dbo.hr_LeaveApplicationForm.LeaveType=hr_LeaveType.LvID
          WHERE dbo.hr_LeaveApplicationForm.LAFID = @LAFID
        </Sql>
        <Sql Name="Update" ConnectionName="Auth" Description="Update">
          IF NOT EXISTS (SELECT * FROM hr_LeaveApplicationForm WHERE IsActive=1 AND LAFID &lt;&gt; @LAFID AND EmployeeID=@EmployeeID AND (StartDate&lt;=@EndDate AND EndDate&gt;=@StartDate))
          BEGIN
          UPDATE [dbo].[hr_LeaveApplicationForm]
          SET [StartDate] = @StartDate,[EndDate] = @EndDate,[ApplicationHours] = @ApplicationHours,[TimeUnit]=@TimeUnit,[LeaveType] = @LeaveType,[Reason] = @Reason,
          [AssociateContent] = @AssociateContent,[AssociateEmployeeID] = @AssociateEmployeeID,[ModifiedUser] = @ModifiedUser,[ModifiedTime] = @ModifiedTime
          WHERE [LAFID] = @LAFID

          SELECT dbo.hr_LeaveApplicationForm.LAFID, CONVERT(VARCHAR, dbo.hr_LeaveApplicationForm.ApplicationDate) ApplicationDate,
          CONVERT(VARCHAR(16), dbo.hr_LeaveApplicationForm.StartDate, 120) StartDate, CONVERT(VARCHAR(16), dbo.hr_LeaveApplicationForm.EndDate, 120) EndDate,
          IIF(ApplicationHours%1=0,CONVERT(VARCHAR,cast(ApplicationHours as dec(18,0))),CONVERT(VARCHAR,ApplicationHours))+IIF(TimeUnit='D','天','小时') as [ApplicationHours],
          hr_LeaveType.LeaveName,
          CASE dbo.fl_MappingForm.Approved
          WHEN 1 THEN '申请中'
          WHEN 2 THEN '已核准'
          WHEN 0 THEN '已驳回'
          ELSE '草稿'
          END Approved,ISNULL(dbo.fl_MappingForm.Approved,-1) ApproveStatus, dbo.hr_LeaveApplicationForm.Reason
          FROM dbo.hr_LeaveApplicationForm LEFT JOIN
          dbo.fl_MappingForm ON dbo.hr_LeaveApplicationForm.LAFID = dbo.fl_MappingForm.FormNo
          INNER JOIN hr_LeaveType ON dbo.hr_LeaveApplicationForm.LeaveType=hr_LeaveType.LvID
          WHERE dbo.hr_LeaveApplicationForm.LAFID = @LAFID AND ISNULL(dbo.fl_MappingForm.Table_Name,N'fl_LeaveApplicationForm') = N'fl_LeaveApplicationForm'
          END
          ELSE
          BEGIN
          RAISERROR ('该时间段与已存在数据冲突，无法保存！' ,15, 1) WITH NOWAIT
          END
        </Sql>
        <Sql Name="QueryCount" ConnectionName="Auth" Description="查询总数">
          DECLARE @SQL NVARCHAR(2000)

          SET @SQL =
          'SELECT count(*)
          FROM dbo.hr_LeaveApplicationForm LEFT JOIN
          dbo.fl_MappingForm ON dbo.hr_LeaveApplicationForm.LAFID = dbo.fl_MappingForm.FormNo
          INNER JOIN hr_Employee ON hr_LeaveApplicationForm.EmployeeID=hr_Employee.EmployeeID
          INNER JOIN hr_LeaveType ON dbo.hr_LeaveApplicationForm.LeaveType=hr_LeaveType.LvID
          WHERE dbo.hr_LeaveApplicationForm.IsActive=1 AND hr_Employee.EmployeeID='''+@EmployeeID+''' AND ISNULL(dbo.fl_MappingForm.Table_Name,N''fl_LeaveApplicationForm'') = N''fl_LeaveApplicationForm'''

          IF @StartDate &lt;&gt; '' AND @EndDate &lt;&gt; ''
          BEGIN
          SET @SQL = @SQL + ' AND dbo.hr_LeaveApplicationForm.StartDate &gt;= ''' + @StartDate + ''' AND dbo.hr_LeaveApplicationForm.EndDate &lt;= ''' + @EndDate + ''''
          END
          ELSE IF @StartDate &lt;&gt; '' AND @EndDate = ''
          BEGIN
          SET @SQL = @SQL + ' AND dbo.hr_LeaveApplicationForm.StartDate &gt;= ''' + @StartDate + ''''
          END
          ELSE IF @StartDate = '' AND @EndDate &lt;&gt; ''
          BEGIN
          SET @SQL = @SQL + ' AND dbo.hr_LeaveApplicationForm.EndDate &lt;= ''' + @EndDate + ''''
          END

          IF @LeaveType &lt;&gt; '全部'
          BEGIN
          SET @SQL = @SQL + ' AND dbo.hr_LeaveApplicationForm.LeaveType=''' + @LeaveType + ''''
          END

          IF @Approve &lt;&gt; '-2'
          BEGIN
          IF @Approve = '-1'
          BEGIN
          SET @SQL = @SQL + ' AND dbo.fl_MappingForm.Approved IS NULL'
          END
          ELSE
          BEGIN
          SET @SQL = @SQL + ' AND dbo.fl_MappingForm.Approved=' + @Approve
          END
          END


          EXEC(@SQL)
        </Sql>
        <Sql Name="QueryPage" ConnectionName="Auth" Description="查询分页">

          DECLARE @SQL NVARCHAR(2000)
          SET @SQL =
          'SELECT la.LAFID, CONVERT(VARCHAR, la.ApplicationDate) ApplicationDate,
          CONVERT(VARCHAR(16), la.StartDate, 120) StartDate, CONVERT(VARCHAR(16), la.EndDate, 120) EndDate,
          lt.LeaveName,IIF(la.ApplicationHours%1=0,CONVERT(VARCHAR,cast(la.ApplicationHours as dec(18,0))),CONVERT(VARCHAR,la.ApplicationHours))+IIF(la.TimeUnit=''D'',''天'',''小时'') as [ApplicationHours],
          CASE m.Approved
          WHEN 1 THEN ''申请中''
          WHEN 2 THEN ''已核准''
          WHEN 0 THEN ''已驳回''
          ELSE ''草稿''
          END as Approved,ISNULL(m.Approved,-1) ApproveStatus, la.Reason
          FROM hr_LeaveApplicationForm la LEFT JOIN
          fl_MappingForm m ON la.LAFID = m.FormNo
          INNER JOIN hr_Employee e ON la.EmployeeID=e.EmployeeID
          INNER JOIN hr_LeaveType lt ON la.LeaveType=lt.LvID
          WHERE la.IsActive=1 AND e.EmployeeID='''+@EmployeeID+''' AND ISNULL(m.Table_Name,N''fl_LeaveApplicationForm'') = N''fl_LeaveApplicationForm'' '

          IF @StartDate &lt;&gt; '' AND @EndDate &lt;&gt; ''
          BEGIN
          SET @SQL = @SQL + ' AND la.StartDate &gt;= ''' + @StartDate + ''' AND la.EndDate &lt;= ''' + @EndDate + ''' '
          END
          ELSE IF @StartDate &lt;&gt; '' AND @EndDate = ''
          BEGIN
          SET @SQL = @SQL + ' AND  la.StartDate &gt;= ''' + @StartDate + ''' '
          END
          ELSE IF @StartDate = '' AND @EndDate &lt;&gt; ''
          BEGIN
          SET @SQL = @SQL + ' AND la.EndDate &lt;= ''' + @EndDate + ''' '
          END

          IF @LeaveType &lt;&gt; '全部'
          BEGIN
          SET @SQL = @SQL + ' AND la.LeaveType=''' + @LeaveType + ''' '
          END

          IF @Approve &lt;&gt; '-2'
          BEGIN
          IF @Approve = '-1'
          BEGIN
          SET @SQL = @SQL + ' AND m.Approved IS NULL '
          END
          ELSE
          BEGIN
          SET @SQL = @SQL + ' AND m.Approved=' + @Approve
          END
          END

          SET @SQL = @SQL + ' ORDER BY ApplicationDate DESC '
          SET @sql = @sql + ' OFFSET ((CAST('+@Page+' as int)-1)*CAST('+@Rows+' as int)) Rows FETCH NEXT CAST('+@Rows+' as int) ROWS ONLY '
          exec(@sql)
        </Sql>
      </Table>
      <Table Name="hr_AnnualLeave" ConnectionName="Auth" TableName="hr_AnnualLeave">
        <Sql Name="Query" ConnectionName="Auth" Description="检索查询">
          DECLARE @sql varchar(max);
          DECLARE @where varchar(2000);
          SET @where='';
          IF(len(@CompanyID)&gt;0)
          BEGIN
          IF(LEN(@where)&gt;0)
          SET @where = @where + ' AND'
          set @where= @where+' (' + @CompanyID + ')';
          END

          IF(len(@Name)&gt;0)
          BEGIN
          IF(LEN(@where)&gt;0)
          SET @where = @where + ' AND'
          set @where= @where+' (' + @Name + ')';
          END

          IF(len(@Year)&gt;0)
          BEGIN
          IF(LEN(@where)&gt;0)
          SET @where = @where + ' AND'
          set @where= @where+' (' + @Year + ')';
          END

          IF(len(@AnnualLeaveDays)&gt;0)
          BEGIN
          IF(LEN(@where)&gt;0)
          SET @where = @where + ' AND'
          set @where= @where+' (' + @AnnualLeaveDays + ')';
          END

          IF(len(@ByUsedDays)&gt;0)
          BEGIN
          IF(LEN(@where)&gt;0)
          SET @where = @where + ' AND'
          set @where= @where+' (' + @ByUsedDays + ')';
          END
          IF(@HaveDays=1)
          BEGIN
          IF(LEN(@where)&gt;0)
          SET @where = @where + ' AND '
          set @where= @where+' (RemainingDays  &gt;0 )';
          END
          IF(@HaveDays=2)
          BEGIN
          IF(LEN(@where)&gt;0)
          SET @where = @where + ' AND '
          set @where= @where+' (RemainingDays  =0 )';
          END


          SET @sql='SELECT [Year]
          ,[CompanyID]
          ,[Company]
          ,[DeptID]
          ,[Department]
          ,[EmployeeID]
          ,[Name]
          ,[HireDate]
          ,[AnnualLeaveDays]
          ,[ByUsedDays]
          ,[RemainingDays]
          ,[AutoKey]
          FROM [vhr_AnnualLeave]';

          IF(LEN(@where)&gt;0)
          BEGIN
          SET @sql=@sql+' WHERE' + @where;
          END
          execute(@sql);
        </Sql>
        <Sql Name="GetDetail" ConnectionName="Auth" Description="查询明细">
          SELECT [EmployeeID],[Year],[AnnualLeaveDays],[ByUsedDays], [AutoKey]
          FROM [hr_AnnualLeave]
          WHERE [AutoKey]=@AutoKey
        </Sql>
        <Sql Name="Add" ConnectionName="Auth" Description="新增">
          if exists(select * from [hr_AnnualLeave] where [Year]=@Year and [EmployeeID]=@EmployeeID)
          begin
          RAISERROR ('已经存在相同记录，无法保存！',15, 1) WITH NOWAIT
          end
          else
          begin
          INSERT INTO [hr_AnnualLeave]
          ([EmployeeID],[Year],[AnnualLeaveDays],[ByUsedDays],[CreatedUser],[CreatedTime],[ModifiedUser],[ModifiedTime])
          VALUES(@EmployeeID,@Year,@AnnualLeaveDays,@ByUsedDays,@CreatedUser,@CreatedTime,@ModifiedUser,@ModifiedTime);
          SELECT [Year]
          ,[CompanyID]
          ,[Company]
          ,[DeptID]
          ,[Department]
          ,[EmployeeID]
          ,[Name]
          ,[HireDate]
          ,[AnnualLeaveDays]
          ,[ByUsedDays]
          ,[RemainingDays]
          FROM [vhr_AnnualLeave]
          WHERE [AutoKey]=scope_identity()
          end
        </Sql>
        <Sql Name="GetEdit" ConnectionName="Auth" Description="查询编辑">
          SELECT [EmployeeID],[Year],[AnnualLeaveDays],[ByUsedDays], [AutoKey]
          FROM [hr_AnnualLeave]
          WHERE [AutoKey]=@AutoKey
        </Sql>
        <Sql Name="Update" ConnectionName="Auth" Description="更新">
          UPDATE [hr_AnnualLeave]
          SET [EmployeeID]=@EmployeeID,[Year]=@Year,[AnnualLeaveDays]=@AnnualLeaveDays,[ByUsedDays]=@ByUsedDays,[ModifiedUser]=@ModifiedUser,[ModifiedTime]=@ModifiedTime WHERE  [AutoKey]=@AutoKey;
          SELECT [Year]
          ,[CompanyID]
          ,[Company]
          ,[DeptID]
          ,[Department]
          ,[EmployeeID]
          ,[Name]
          ,[HireDate]
          ,[AnnualLeaveDays]
          ,[ByUsedDays]
          ,[RemainingDays]
          FROM [vhr_AnnualLeave]
          WHERE [AutoKey]=@AutoKey;
        </Sql>
        <Sql Name="Delete" ConnectionName="Auth" Description="删除">
          DECLARE @sql varchar(max);
          BEGIN TRY
          BEGIN
          DELETE FROM [hr_AnnualLeave] WHERE [AutoKey]=@AutoKey
          END
          END TRY
          BEGIN CATCH
          DECLARE @error varchar(2000);
          SET @error = ERROR_MESSAGE();
          RAISERROR(@error ,11,1);
          END CATCH
        </Sql>
        <Sql Name="Do" ConnectionName="Auth" SqlType="Scalar" Description="生成年假">EXEC [dbo].[sp_hr_AnnualLeave] @UserID</Sql>
        <Sql Name="QueryCount" ConnectionName="Auth" Description="查询总数">
          declare  @sql varchar(max)
          SET @sql='SELECT count(a.[Year])
          FROM [hr_AnnualLeave]a join
          (SELECT e2.* FROM [hr_Employee] e2 join fun_sys_GetUserDepartments('''+@UserID+''') g2 on e2.DeptID=g2.DeptID
)b on a.EmployeeID=b.EmployeeID where b.CompanyID like ''%'+@CompanyID+'%'' and a.EmployeeID like ''%'+@EmployeeID+'%'' '
          IF(len(@Year)&gt;0)
          BEGIN
          set @sql=' AND a.Year='+@Year;
          END
          IF(@HaveDays=1)
          BEGIN
          SET @sql = @sql + ' AND (a.RemainingDays&gt;0)';
          END
          else IF(@HaveDays=2)
          BEGIN
          SET @sql = @sql + ' AND (a.RemainingDays=0)';
          END
          SET @sql = @sql ;
          execute(@sql);
        </Sql>
        <Sql Name="QueryPage" ConnectionName="Auth" Description="查询页面">
          declare  @sql varchar(max)
          SET @sql='SELECT a.[Year]
          ,b.[CompanyID]
          ,b.[CompanyName]
          ,b.[DeptID]
          ,b.[DeptName]
          ,a.[EmployeeID]
          ,b.[Name]
          ,b.[HireDate]
          ,a.[AnnualLeaveDays]
          ,a.[ByUsedDays]
          ,a.[AutoKey]
          FROM [hr_AnnualLeave]a join
          (SELECT e2.*,c.Name as CompanyName,d.Name as DeptName  FROM [hr_Employee] e2 join fun_sys_GetUserDepartments('''+@UserID+''') g2 on e2.DeptID=g2.DeptID
left join [dbo].[hr_Company] c on e2.CompanyID=c.CompanyID 
    left join [dbo].[hr_Department] d on e2.DeptID=d.DeptID )b on a.EmployeeID=b.EmployeeID where b.CompanyID like ''%'+@CompanyID+'%'' and a.EmployeeID like ''%'+@EmployeeID+'%'' '
          IF(len(@Year)&gt;0)
          BEGIN
          set @sql=' AND a.Year='+@Year;
          END
          IF(@HaveDays=1)
          BEGIN
          SET @sql = @sql + ' AND (a.RemainingDays&gt;0)';
          END
          else IF(@HaveDays=2)
          BEGIN
          SET @sql = @sql + ' AND (a.RemainingDays=0)';
          END
          SET @sql=@sql+' ORDER BY a.[AutoKey]';
          SET @sql = @sql + '
          OFFSET ('+ CAST((@Page - 1) * @Rows AS varchar(10)) +') ROWS

          FETCH NEXT ' + CAST(@Rows AS varchar(10)) +' ROWS ONLY';
          execute(@sql);
        </Sql>
      </Table>
      <Table Name="hr_GoOutForm" ConnectionName="Auth" TableName="hr_GoOutForm">
        <Sql Name="Delete" ConnectionName="Auth" SqlType="Execute" Description="Delete">
          DECLARE @sql varchar(max);
          SET @sql='UPDATE [hr_GoOutForm]
          SET [ModifiedUser]='''+@ModifiedUser+''',[ModifiedTime]='''+@ModifiedTime+''',[IsActive]=0 WHERE [GOFID] in ('''+replace(@GOFIDs,',',''',''')+''') ;'
          EXEC(@sql);
        </Sql>
        <Sql Name="GetAll_Search" ConnectionName="Auth" Description="GetAll_Search">
          DECLARE @SQL NVARCHAR(2000)

          SET @SQL =
          'SELECT dbo.hr_GoOutForm.GOFID, CONVERT(VARCHAR, dbo.hr_GoOutForm.ApplicationDate) ApplicationDate,
          CONVERT(VARCHAR(16), dbo.hr_GoOutForm.StartDate, 120) StartDate, CONVERT(VARCHAR(16), dbo.hr_GoOutForm.EndDate, 120) EndDate,
          CASE [TimeUnit] WHEN ''D'' THEN CONVERT(NVARCHAR,ApplicationHours) + ''天'' WHEN ''H'' THEN CONVERT(NVARCHAR,ApplicationHours) + ''小时'' ELSE CONVERT(NVARCHAR,ApplicationHours) END ApplicationHoursWithUnit,
          CASE dbo.fl_MappingForm.Approved
          WHEN 1 THEN ''申请中''
          WHEN 2 THEN ''已核准''
          WHEN 0 THEN ''已驳回''
          ELSE ''草稿''
          END Approved,ISNULL(dbo.fl_MappingForm.Approved,-1) ApproveStatus, dbo.hr_GoOutForm.Reason
          FROM dbo.hr_GoOutForm LEFT JOIN
          dbo.fl_MappingForm ON dbo.hr_GoOutForm.GOFID = dbo.fl_MappingForm.FormNo
          INNER JOIN hr_Employee ON hr_GoOutForm.EmployeeID=hr_Employee.EmployeeID
          WHERE dbo.hr_GoOutForm.IsActive=1 AND hr_Employee.UserID='''+@UserID+''' AND ISNULL(dbo.fl_MappingForm.Table_Name,N''fl_GoOutForm'') = N''fl_GoOutForm'''

          IF @StartDate &lt;&gt; '' AND @EndDate &lt;&gt; ''
          BEGIN
          SET @SQL = @SQL + ' AND dbo.hr_GoOutForm.StartDate &gt;= ''' + @StartDate + ''' AND dbo.hr_GoOutForm.EndDate &lt;= ''' + @EndDate + ''''
          END
          ELSE IF @StartDate &lt;&gt; '' AND @EndDate = ''
          BEGIN
          SET @SQL = @SQL + ' AND dbo.hr_GoOutForm.StartDate &gt;= ''' + @StartDate + ''''
          END
          ELSE IF @StartDate = '' AND @EndDate &lt;&gt; ''
          BEGIN
          SET @SQL = @SQL + ' AND dbo.hr_GoOutForm.EndDate &lt;= ''' + @EndDate + ''''
          END

          IF @Approve &lt;&gt; '-2'
          BEGIN
          IF @Approve = '-1'
          BEGIN
          SET @SQL = @SQL + ' AND dbo.fl_MappingForm.Approved IS NULL'
          END
          ELSE
          BEGIN
          SET @SQL = @SQL + ' AND dbo.fl_MappingForm.Approved=' + @Approve
          END
          END

          SET @SQL = @SQL + ' ORDER BY ApplicationDate DESC'

          EXEC(@SQL)
        </Sql>
        <Sql Name="Add" ConnectionName="Auth" Description="Add">
          IF NOT EXISTS (SELECT * FROM hr_GoOutForm WHERE IsActive=1 AND EmployeeID=@EmployeeID AND (StartDate&lt;=@EndDate AND EndDate&gt;=@StartDate))
          BEGIN
          INSERT INTO [dbo].[hr_GoOutForm]([GOFID],[EmployeeID],[CompanyID],[DeptID],[JobID],[ApplicationDate],[StartDate],[EndDate],[ApplicationHours],[TimeUnit],[Reason],[IsActive],[CreatedUser],[CreatedTime],[ModifiedUser],[ModifiedTime])
          VALUES(@GOFID,@EmployeeID,@CompanyID,@DeptID,@JobID,@ApplicationDate,@StartDate,@EndDate,@ApplicationHours,@TimeUnit,@Reason,1,@CreatedUser,@CreatedTime,@ModifiedUser,@ModifiedTime);

          SELECT dbo.hr_GoOutForm.GOFID, CONVERT(VARCHAR, dbo.hr_GoOutForm.ApplicationDate) ApplicationDate,
          CONVERT(VARCHAR(16), dbo.hr_GoOutForm.StartDate, 120) StartDate, CONVERT(VARCHAR(16), dbo.hr_GoOutForm.EndDate, 120) EndDate,
          CASE [TimeUnit] WHEN 'D' THEN CONVERT(NVARCHAR,ApplicationHours) + '天' WHEN 'H' THEN CONVERT(NVARCHAR,ApplicationHours) + '小时' ELSE CONVERT(NVARCHAR,ApplicationHours) END ApplicationHoursWithUnit,
          CASE dbo.fl_MappingForm.Approved
          WHEN 1 THEN '申请中'
          WHEN 2 THEN '已核准'
          WHEN 0 THEN '已驳回'
          ELSE '草稿'
          END Approved,ISNULL(dbo.fl_MappingForm.Approved,-1) ApproveStatus, dbo.hr_GoOutForm.Reason
          FROM dbo.hr_GoOutForm LEFT JOIN
          dbo.fl_MappingForm ON dbo.hr_GoOutForm.GOFID = dbo.fl_MappingForm.FormNo
          WHERE dbo.hr_GoOutForm.GOFID = @GOFID AND ISNULL(dbo.fl_MappingForm.Table_Name,N'fl_GoOutForm') = N'fl_GoOutForm'
          END
          ELSE
          BEGIN
          RAISERROR ('该时间段与已存在数据冲突，无法保存！' ,15, 1) WITH NOWAIT
          END
        </Sql>
        <Sql Name="GetItem" ConnectionName="Auth" Description="GetItem">
          SELECT [GOFID],hr_Employee.Name EmployeeName,hr_Job.Name JobName,hr_Company.Name + ' - ' + hr_Department.Name DeptName,CONVERT(VARCHAR, [ApplicationDate]) ApplicationDate,
          CONVERT(VARCHAR(16), dbo.hr_GoOutForm.StartDate, 120) StartDate, CONVERT(VARCHAR(16), dbo.hr_GoOutForm.EndDate, 120) EndDate,
          [ApplicationHours],[TimeUnit],[Reason],dbo.hr_GoOutForm.EmployeeID,
          CASE [TimeUnit] WHEN 'D' THEN CONVERT(NVARCHAR,ApplicationHours) + '天' WHEN 'H' THEN CONVERT(NVARCHAR,ApplicationHours) + '小时' ELSE CONVERT(NVARCHAR,ApplicationHours) END ApplicationHoursWithUnit
          FROM [dbo].[hr_GoOutForm] LEFT JOIN hr_Employee ON hr_GoOutForm.EmployeeID=hr_Employee.EmployeeID
          LEFT JOIN hr_Department ON [hr_GoOutForm].DeptID = hr_Department.DeptID
          LEFT JOIN hr_Company ON hr_Company.CompanyID=hr_Department.CompanyID
          LEFT JOIN hr_Job ON hr_Employee.JobID=hr_Job.JobID
          WHERE dbo.hr_GoOutForm.GOFID = @GOFID
        </Sql>
        <Sql Name="Update" ConnectionName="Auth" Description="Update">
          IF NOT EXISTS (SELECT * FROM hr_GoOutForm WHERE IsActive=1 AND GOFID &lt;&gt; @GOFID AND EmployeeID=@EmployeeID AND (StartDate&lt;=@EndDate AND EndDate&gt;=@StartDate))
          BEGIN
          UPDATE [dbo].[hr_GoOutForm]
          SET [StartDate] = @StartDate,[EndDate] = @EndDate,[ApplicationHours] = @ApplicationHours,[TimeUnit]=@TimeUnit,[Reason] = @Reason,[ModifiedUser] = @ModifiedUser,[ModifiedTime] = @ModifiedTime
          WHERE [GOFID] = @GOFID

          SELECT dbo.hr_GoOutForm.GOFID, CONVERT(VARCHAR, dbo.hr_GoOutForm.ApplicationDate) ApplicationDate,
          CONVERT(VARCHAR(16), dbo.hr_GoOutForm.StartDate, 120) StartDate, CONVERT(VARCHAR(16), dbo.hr_GoOutForm.EndDate, 120) EndDate,
          CASE [TimeUnit] WHEN 'D' THEN CONVERT(NVARCHAR,ApplicationHours) + '天' WHEN 'H' THEN CONVERT(NVARCHAR,ApplicationHours) + '小时' ELSE CONVERT(NVARCHAR,ApplicationHours) END ApplicationHoursWithUnit,
          CASE dbo.fl_MappingForm.Approved
          WHEN 1 THEN '申请中'
          WHEN 2 THEN '已核准'
          WHEN 0 THEN '已驳回'
          ELSE '草稿'
          END Approved,ISNULL(dbo.fl_MappingForm.Approved,-1) ApproveStatus, dbo.hr_GoOutForm.Reason
          FROM dbo.hr_GoOutForm LEFT JOIN
          dbo.fl_MappingForm ON dbo.hr_GoOutForm.GOFID = dbo.fl_MappingForm.FormNo
          WHERE dbo.hr_GoOutForm.GOFID = @GOFID AND ISNULL(dbo.fl_MappingForm.Table_Name,N'fl_GoOutForm') = N'fl_GoOutForm'
          END
          ELSE
          BEGIN
          RAISERROR ('该时间段与已存在数据冲突，无法保存！' ,15, 1) WITH NOWAIT
          END
        </Sql>
        <Sql Name="QueryCount" ConnectionName="Auth" Description="查询总数">
          DECLARE @SQL NVARCHAR(2000)

          SET @SQL =
          'SELECT count(*)
          FROM dbo.hr_GoOutForm LEFT JOIN
          dbo.fl_MappingForm ON dbo.hr_GoOutForm.GOFID = dbo.fl_MappingForm.FormNo
          INNER JOIN hr_Employee ON hr_GoOutForm.EmployeeID=hr_Employee.EmployeeID
          WHERE dbo.hr_GoOutForm.IsActive=1 AND hr_Employee.UserID='''+@UserID+''' AND ISNULL(dbo.fl_MappingForm.Table_Name,N''fl_GoOutForm'') = N''fl_GoOutForm'''

          IF @StartDate &lt;&gt; '' AND @EndDate &lt;&gt; ''
          BEGIN
          SET @SQL = @SQL + ' AND dbo.hr_GoOutForm.StartDate &gt;= ''' + @StartDate + ''' AND dbo.hr_GoOutForm.EndDate &lt;= ''' + @EndDate + ''''
          END
          ELSE IF @StartDate &lt;&gt; '' AND @EndDate = ''
          BEGIN
          SET @SQL = @SQL + ' AND dbo.hr_GoOutForm.StartDate &gt;= ''' + @StartDate + ''''
          END
          ELSE IF @StartDate = '' AND @EndDate &lt;&gt; ''
          BEGIN
          SET @SQL = @SQL + ' AND dbo.hr_GoOutForm.EndDate &lt;= ''' + @EndDate + ''''
          END

          IF @Approve &lt;&gt; '-2'
          BEGIN
          IF @Approve = '-1'
          BEGIN
          SET @SQL = @SQL + ' AND dbo.fl_MappingForm.Approved IS NULL'
          END
          ELSE
          BEGIN
          SET @SQL = @SQL + ' AND dbo.fl_MappingForm.Approved=' + @Approve
          END
          END

          EXEC(@SQL)
        </Sql>
        <Sql Name="QueryPage" ConnectionName="Auth" Description="查询分页">
          DECLARE @SQL NVARCHAR(2000)

          SET @SQL =
          'SELECT dbo.hr_GoOutForm.GOFID, CONVERT(VARCHAR, dbo.hr_GoOutForm.ApplicationDate) ApplicationDate,
          CONVERT(VARCHAR(16), dbo.hr_GoOutForm.StartDate, 120) StartDate, CONVERT(VARCHAR(16), dbo.hr_GoOutForm.EndDate, 120) EndDate,
          CASE [TimeUnit] WHEN ''D'' THEN CONVERT(NVARCHAR,ApplicationHours) + ''天'' WHEN ''H'' THEN CONVERT(NVARCHAR,ApplicationHours) + ''小时'' ELSE CONVERT(NVARCHAR,ApplicationHours) END ApplicationHoursWithUnit,
          CASE dbo.fl_MappingForm.Approved
          WHEN 1 THEN ''申请中''
          WHEN 2 THEN ''已核准''
          WHEN 0 THEN ''已驳回''
          ELSE ''草稿''
          END Approved,ISNULL(dbo.fl_MappingForm.Approved,-1) ApproveStatus, dbo.hr_GoOutForm.Reason
          FROM dbo.hr_GoOutForm LEFT JOIN
          dbo.fl_MappingForm ON dbo.hr_GoOutForm.GOFID = dbo.fl_MappingForm.FormNo
          INNER JOIN hr_Employee ON hr_GoOutForm.EmployeeID=hr_Employee.EmployeeID
          WHERE dbo.hr_GoOutForm.IsActive=1 AND hr_Employee.UserID='''+@UserID+''' AND ISNULL(dbo.fl_MappingForm.Table_Name,N''fl_GoOutForm'') = N''fl_GoOutForm'''

          IF @StartDate &lt;&gt; '' AND @EndDate &lt;&gt; ''
          BEGIN
          SET @SQL = @SQL + ' AND dbo.hr_GoOutForm.StartDate &gt;= ''' + @StartDate + ''' AND dbo.hr_GoOutForm.EndDate &lt;= ''' + @EndDate + ''''
          END
          ELSE IF @StartDate &lt;&gt; '' AND @EndDate = ''
          BEGIN
          SET @SQL = @SQL + ' AND dbo.hr_GoOutForm.StartDate &gt;= ''' + @StartDate + ''''
          END
          ELSE IF @StartDate = '' AND @EndDate &lt;&gt; ''
          BEGIN
          SET @SQL = @SQL + ' AND dbo.hr_GoOutForm.EndDate &lt;= ''' + @EndDate + ''''
          END

          IF @Approve &lt;&gt; '-2'
          BEGIN
          IF @Approve = '-1'
          BEGIN
          SET @SQL = @SQL + ' AND dbo.fl_MappingForm.Approved IS NULL'
          END
          ELSE
          BEGIN
          SET @SQL = @SQL + ' AND dbo.fl_MappingForm.Approved=' + @Approve
          END
          END

          SET @SQL = @SQL + ' ORDER BY ApplicationDate DESC'

          SET @sql = @sql + '
          OFFSET ('+ CAST((@Page - 1) * @Rows AS varchar(10)) +') ROWS

          FETCH NEXT ' + CAST(@Rows AS varchar(10)) +' ROWS ONLY';

          EXEC(@SQL)
        </Sql>
      </Table>
      <Table Name="hr_PaidLeaveForm" ConnectionName="Auth" TableName="hr_PaidLeaveForm">
        <Sql Name="Delete" ConnectionName="Auth" SqlType="Execute" Description="Delete">
          DECLARE @sql varchar(max);
          SET @sql='UPDATE [hr_PaidLeaveForm]
          SET [ModifiedUser]='''+@ModifiedUser+''',[ModifiedTime]='''+@ModifiedTime+''',[IsActive]=0 WHERE [PLID] in ('''+replace(@PLIDs,',',''',''')+''') ;'
          EXEC(@sql);
        </Sql>
        <Sql Name="GetAll_Search" ConnectionName="Auth" Description="GetAll_Search">
          DECLARE @SQL NVARCHAR(2000)

          SET @SQL =
          'SELECT dbo.hr_PaidLeaveForm.PLID, CONVERT(VARCHAR, dbo.hr_PaidLeaveForm.ApplicationDate) ApplicationDate,
          CONVERT(VARCHAR(16), dbo.hr_PaidLeaveForm.TStartDate, 120) TStartDate, CONVERT(VARCHAR(16), dbo.hr_PaidLeaveForm.TEndDate, 120) TEndDate,
          CASE [TimeUnit] WHEN ''D'' THEN CONVERT(NVARCHAR,ApplicationHours) + ''天'' WHEN ''H'' THEN CONVERT(NVARCHAR,ApplicationHours) + ''小时'' ELSE CONVERT(NVARCHAR,ApplicationHours) END ApplicationHoursWithUnit,
          CASE dbo.fl_MappingForm.Approved
          WHEN 1 THEN ''申请中''
          WHEN 2 THEN ''已核准''
          WHEN 0 THEN ''已驳回''
          ELSE ''草稿''
          END Approved,ISNULL(dbo.fl_MappingForm.Approved,-1) ApproveStatus, dbo.hr_PaidLeaveForm.Reason
          FROM dbo.hr_PaidLeaveForm LEFT JOIN
          dbo.fl_MappingForm ON dbo.hr_PaidLeaveForm.PLID = dbo.fl_MappingForm.FormNo
          INNER JOIN hr_Employee ON hr_PaidLeaveForm.EmployeeID=hr_Employee.EmployeeID
          WHERE dbo.hr_PaidLeaveForm.IsActive=1 AND hr_Employee.UserID='''+@UserID+''' AND ISNULL(dbo.fl_MappingForm.Table_Name,N''fl_PaidLeaveForm'') = N''fl_PaidLeaveForm'''

          IF @TStartDate &lt;&gt; '' AND @TEndDate &lt;&gt; ''
          BEGIN
          SET @SQL = @SQL + ' AND dbo.hr_PaidLeaveForm.TStartDate &gt;= ''' + @TStartDate + ''' AND dbo.hr_PaidLeaveForm.TEndDate &lt;= ''' + @TEndDate + ''''
          END
          ELSE IF @TStartDate &lt;&gt; '' AND @TEndDate = ''
          BEGIN
          SET @SQL = @SQL + ' AND dbo.hr_PaidLeaveForm.TStartDate &gt;= ''' + @TStartDate + ''''
          END
          ELSE IF @TStartDate = '' AND @TEndDate &lt;&gt; ''
          BEGIN
          SET @SQL = @SQL + ' AND dbo.hr_PaidLeaveForm.TEndDate &lt;= ''' + @TEndDate + ''''
          END

          IF @Approve &lt;&gt; '-2'
          BEGIN
          IF @Approve = '-1'
          BEGIN
          SET @SQL = @SQL + ' AND dbo.fl_MappingForm.Approved IS NULL'
          END
          ELSE
          BEGIN
          SET @SQL = @SQL + ' AND dbo.fl_MappingForm.Approved=' + @Approve
          END
          END

          SET @SQL = @SQL + ' ORDER BY ApplicationDate DESC'

          EXEC(@SQL)
        </Sql>
        <Sql Name="Add" ConnectionName="Auth" Description="Add">
          IF NOT EXISTS (SELECT * FROM hr_PaidLeaveForm WHERE IsActive=1 AND EmployeeID=@EmployeeID AND (TStartDate&lt;=@TEndDate AND TEndDate&gt;=@TStartDate))
          BEGIN
          INSERT INTO [dbo].[hr_PaidLeaveForm]([PLID],[EmployeeID],[CompanyID],[DeptID],[JobID],[ApplicationDate],[TStartDate],[TEndDate],
          [ApplicationHours],[TimeUnit],[Reason],[Job],[Agent],[IsActive],[CreatedUser],[CreatedTime],[ModifiedUser],[ModifiedTime])
          VALUES(@PLID,@EmployeeID,@CompanyID,@DeptID,@JobID,@ApplicationDate,@TStartDate,@TEndDate,@ApplicationHours,@TimeUnit,@Reason,
          @Job,@Agent,1,@CreatedUser,@CreatedTime,@ModifiedUser,@ModifiedTime);

          SELECT dbo.hr_PaidLeaveForm.PLID, CONVERT(VARCHAR, dbo.hr_PaidLeaveForm.ApplicationDate) ApplicationDate,
          CONVERT(VARCHAR(16), dbo.hr_PaidLeaveForm.TStartDate, 120) TStartDate, CONVERT(VARCHAR(16), dbo.hr_PaidLeaveForm.TEndDate, 120) TEndDate,
          CASE [TimeUnit] WHEN 'D' THEN CONVERT(NVARCHAR,ApplicationHours) + '天' WHEN 'H' THEN CONVERT(NVARCHAR,ApplicationHours) + '小时' ELSE CONVERT(NVARCHAR,ApplicationHours) END ApplicationHoursWithUnit,
          CASE dbo.fl_MappingForm.Approved
          WHEN 1 THEN '申请中'
          WHEN 2 THEN '已核准'
          WHEN 0 THEN '已驳回'
          ELSE '草稿'
          END Approved,ISNULL(dbo.fl_MappingForm.Approved,-1) ApproveStatus, dbo.hr_PaidLeaveForm.Reason
          FROM dbo.hr_PaidLeaveForm LEFT JOIN
          dbo.fl_MappingForm ON dbo.hr_PaidLeaveForm.PLID = dbo.fl_MappingForm.FormNo
          WHERE dbo.hr_PaidLeaveForm.PLID = @PLID AND ISNULL(dbo.fl_MappingForm.Table_Name,N'fl_PaidLeaveForm') = N'fl_PaidLeaveForm'
          END
          ELSE
          BEGIN
          RAISERROR ('该时间段与已存在数据冲突，无法保存！' ,15, 1) WITH NOWAIT
          END
        </Sql>
        <Sql Name="GetItem" ConnectionName="Auth" Description="GetItem">
          SELECT [PLID],hr_Employee.Name EmployeeName,hr_Job.Name JobName,hr_Company.Name + ' - ' + hr_Department.Name DeptName,CONVERT(VARCHAR, [ApplicationDate]) ApplicationDate,
          CONVERT(VARCHAR(16), dbo.hr_PaidLeaveForm.TStartDate, 120) TStartDate, CONVERT(VARCHAR(16), dbo.hr_PaidLeaveForm.TEndDate, 120) TEndDate,
          [ApplicationHours],[TimeUnit],[Reason],[Job],[Agent],e1.Name AgentName,
          CASE [TimeUnit] WHEN 'D' THEN CONVERT(NVARCHAR,ApplicationHours) + '天' WHEN 'H' THEN CONVERT(NVARCHAR,ApplicationHours) + '小时' ELSE CONVERT(NVARCHAR,ApplicationHours) END ApplicationHoursWithUnit
          FROM [dbo].[hr_PaidLeaveForm] LEFT JOIN hr_Employee ON hr_PaidLeaveForm.EmployeeID=hr_Employee.EmployeeID
          LEFT JOIN hr_Department ON [hr_PaidLeaveForm].DeptID = hr_Department.DeptID
          LEFT JOIN hr_Company ON hr_Company.CompanyID=hr_Department.CompanyID
          LEFT JOIN hr_Job ON hr_Employee.JobID=hr_Job.JobID
          LEFT JOIN hr_Employee e1 ON hr_PaidLeaveForm.Agent=e1.EmployeeID
          WHERE dbo.hr_PaidLeaveForm.PLID = @PLID
        </Sql>
        <Sql Name="Update" ConnectionName="Auth" Description="Update">
          IF NOT EXISTS (SELECT * FROM hr_PaidLeaveForm WHERE IsActive=1 AND PLID &lt;&gt; @PLID AND EmployeeID=@EmployeeID AND (TStartDate&lt;=@TEndDate AND TEndDate&gt;=@TStartDate))
          BEGIN
          UPDATE [dbo].[hr_PaidLeaveForm]
          SET [TStartDate] = @TStartDate,[TEndDate] = @TEndDate,[ApplicationHours] = @ApplicationHours,[TimeUnit]=@TimeUnit,[Reason] = @Reason,
          [Job] = @Job,[Agent] = @Agent,[ModifiedUser] = @ModifiedUser,[ModifiedTime] = @ModifiedTime
          WHERE [PLID] = @PLID

          SELECT dbo.hr_PaidLeaveForm.PLID, CONVERT(VARCHAR, dbo.hr_PaidLeaveForm.ApplicationDate) ApplicationDate,
          CONVERT(VARCHAR(16), dbo.hr_PaidLeaveForm.TStartDate, 120) TStartDate, CONVERT(VARCHAR(16), dbo.hr_PaidLeaveForm.TEndDate, 120) TEndDate,
          CASE [TimeUnit] WHEN 'D' THEN CONVERT(NVARCHAR,ApplicationHours) + '天' WHEN 'H' THEN CONVERT(NVARCHAR,ApplicationHours) + '小时' ELSE CONVERT(NVARCHAR,ApplicationHours) END ApplicationHoursWithUnit,
          CASE dbo.fl_MappingForm.Approved
          WHEN 1 THEN '申请中'
          WHEN 2 THEN '已核准'
          WHEN 0 THEN '已驳回'
          ELSE '草稿'
          END Approved,ISNULL(dbo.fl_MappingForm.Approved,-1) ApproveStatus, dbo.hr_PaidLeaveForm.Reason
          FROM dbo.hr_PaidLeaveForm LEFT JOIN
          dbo.fl_MappingForm ON dbo.hr_PaidLeaveForm.PLID = dbo.fl_MappingForm.FormNo
          WHERE dbo.hr_PaidLeaveForm.PLID = @PLID AND ISNULL(dbo.fl_MappingForm.Table_Name,N'fl_PaidLeaveForm') = N'fl_PaidLeaveForm'
          END
          ELSE
          BEGIN
          RAISERROR ('该时间段与已存在数据冲突，无法保存！' ,15, 1) WITH NOWAIT
          END
        </Sql>
        <Sql Name="GetMaxApplicationHours" ConnectionName="Auth" Description="获得最大可申请调休天数">
          DECLARE @SQL NVARCHAR(1000),@Sum_PaidLeave DECIMAL(18,1),@Sum_Overtime DECIMAL(18,1)

          SET @SQL='
          SELECT @Sum_PaidLeave=ISNULL(SUM(CASE TimeUnit WHEN ''D'' THEN ApplicationHours*8 ELSE ApplicationHours END),0) FROM dbo.hr_PaidLeaveForm LEFT JOIN
          dbo.fl_MappingForm ON dbo.hr_PaidLeaveForm.PLID = dbo.fl_MappingForm.FormNo
          INNER JOIN hr_Employee ON hr_PaidLeaveForm.EmployeeID=hr_Employee.EmployeeID
          WHERE dbo.hr_PaidLeaveForm.IsActive=1 AND hr_Employee.UserID='''+@UserID+''' AND ISNULL(dbo.fl_MappingForm.Table_Name,N''fl_PaidLeaveForm'') = N''fl_PaidLeaveForm''
          AND ISNULL(dbo.fl_MappingForm.Approved,-1) &lt;&gt; 0'

          IF @PLID &lt;&gt; '0'
          SET @SQL = @SQL + ' AND hr_PaidLeaveForm.PLID &lt;&gt;''' + @PLID + ''''

          EXEC sp_executesql @SQL,N'@Sum_PaidLeave DECIMAL(18,1) OUTPUT',@Sum_PaidLeave OUTPUT

          SELECT @Sum_Overtime=ISNULL(SUM(CASE TimeUnit WHEN 'D' THEN ApplicationHours*8 ELSE ApplicationHours END),0) FROM dbo.hr_OvertimeApplicationForm LEFT JOIN
          dbo.fl_MappingForm ON dbo.hr_OvertimeApplicationForm.OAFID = dbo.fl_MappingForm.FormNo
          INNER JOIN hr_Employee ON hr_OvertimeApplicationForm.EmployeeID=hr_Employee.EmployeeID
          WHERE dbo.hr_OvertimeApplicationForm.IsActive=1 AND hr_Employee.UserID=@UserID AND ISNULL(dbo.fl_MappingForm.Table_Name,N'fl_OvertimeApplicationForm') = N'fl_OvertimeApplicationForm'
          AND dbo.fl_MappingForm.Approved=2

          SELECT CONVERT(VARCHAR,@Sum_Overtime-@Sum_PaidLeave) + N'小时'
        </Sql>
        <Sql Name="QueryCount" ConnectionName="Auth" Description="查询总数">
          DECLARE @SQL NVARCHAR(2000)

          SET @SQL =
          'SELECT count(*)
          FROM dbo.hr_PaidLeaveForm LEFT JOIN
          dbo.fl_MappingForm ON dbo.hr_PaidLeaveForm.PLID = dbo.fl_MappingForm.FormNo
          INNER JOIN hr_Employee ON hr_PaidLeaveForm.EmployeeID=hr_Employee.EmployeeID
          WHERE dbo.hr_PaidLeaveForm.IsActive=1 AND hr_Employee.UserID='''+@UserID+''' AND ISNULL(dbo.fl_MappingForm.Table_Name,N''fl_PaidLeaveForm'') = N''fl_PaidLeaveForm'''

          IF @TStartDate &lt;&gt; '' AND @TEndDate &lt;&gt; ''
          BEGIN
          SET @SQL = @SQL + ' AND dbo.hr_PaidLeaveForm.TStartDate &gt;= ''' + @TStartDate + ''' AND dbo.hr_PaidLeaveForm.TEndDate &lt;= ''' + @TEndDate + ''''
          END
          ELSE IF @TStartDate &lt;&gt; '' AND @TEndDate = ''
          BEGIN
          SET @SQL = @SQL + ' AND dbo.hr_PaidLeaveForm.TStartDate &gt;= ''' + @TStartDate + ''''
          END
          ELSE IF @TStartDate = '' AND @TEndDate &lt;&gt; ''
          BEGIN
          SET @SQL = @SQL + ' AND dbo.hr_PaidLeaveForm.TEndDate &lt;= ''' + @TEndDate + ''''
          END

          IF @Approve &lt;&gt; '-2'
          BEGIN
          IF @Approve = '-1'
          BEGIN
          SET @SQL = @SQL + ' AND dbo.fl_MappingForm.Approved IS NULL'
          END
          ELSE
          BEGIN
          SET @SQL = @SQL + ' AND dbo.fl_MappingForm.Approved=' + @Approve
          END
          END


          EXEC(@SQL)
        </Sql>
        <Sql Name="QueryPage" ConnectionName="Auth" Description="查询页面">
          DECLARE @SQL NVARCHAR(2000)

          SET @SQL =
          'SELECT dbo.hr_PaidLeaveForm.PLID, CONVERT(VARCHAR, dbo.hr_PaidLeaveForm.ApplicationDate) ApplicationDate,
          CONVERT(VARCHAR(16), dbo.hr_PaidLeaveForm.TStartDate, 120) TStartDate, CONVERT(VARCHAR(16), dbo.hr_PaidLeaveForm.TEndDate, 120) TEndDate,
          CASE [TimeUnit] WHEN ''D'' THEN CONVERT(NVARCHAR,ApplicationHours) + ''天'' WHEN ''H'' THEN CONVERT(NVARCHAR,ApplicationHours) + ''小时'' ELSE CONVERT(NVARCHAR,ApplicationHours) END ApplicationHoursWithUnit,
          CASE dbo.fl_MappingForm.Approved
          WHEN 1 THEN ''申请中''
          WHEN 2 THEN ''已核准''
          WHEN 0 THEN ''已驳回''
          ELSE ''草稿''
          END Approved,ISNULL(dbo.fl_MappingForm.Approved,-1) ApproveStatus, dbo.hr_PaidLeaveForm.Reason
          FROM dbo.hr_PaidLeaveForm LEFT JOIN
          dbo.fl_MappingForm ON dbo.hr_PaidLeaveForm.PLID = dbo.fl_MappingForm.FormNo
          INNER JOIN hr_Employee ON hr_PaidLeaveForm.EmployeeID=hr_Employee.EmployeeID
          WHERE dbo.hr_PaidLeaveForm.IsActive=1 AND hr_Employee.UserID='''+@UserID+''' AND ISNULL(dbo.fl_MappingForm.Table_Name,N''fl_PaidLeaveForm'') = N''fl_PaidLeaveForm'''

          IF @TStartDate &lt;&gt; '' AND @TEndDate &lt;&gt; ''
          BEGIN
          SET @SQL = @SQL + ' AND dbo.hr_PaidLeaveForm.TStartDate &gt;= ''' + @TStartDate + ''' AND dbo.hr_PaidLeaveForm.TEndDate &lt;= ''' + @TEndDate + ''''
          END
          ELSE IF @TStartDate &lt;&gt; '' AND @TEndDate = ''
          BEGIN
          SET @SQL = @SQL + ' AND dbo.hr_PaidLeaveForm.TStartDate &gt;= ''' + @TStartDate + ''''
          END
          ELSE IF @TStartDate = '' AND @TEndDate &lt;&gt; ''
          BEGIN
          SET @SQL = @SQL + ' AND dbo.hr_PaidLeaveForm.TEndDate &lt;= ''' + @TEndDate + ''''
          END

          IF @Approve &lt;&gt; '-2'
          BEGIN
          IF @Approve = '-1'
          BEGIN
          SET @SQL = @SQL + ' AND dbo.fl_MappingForm.Approved IS NULL'
          END
          ELSE
          BEGIN
          SET @SQL = @SQL + ' AND dbo.fl_MappingForm.Approved=' + @Approve
          END
          END

          SET @SQL = @SQL + ' ORDER BY ApplicationDate DESC'

          SET @sql = @sql + '
          OFFSET ('+ CAST((@Page - 1) * @Rows AS varchar(10)) +') ROWS

          FETCH NEXT ' + CAST(@Rows AS varchar(10)) +' ROWS ONLY';
          EXEC(@SQL)
        </Sql>
      </Table>
      <Table Name="hr_CompanyPayroll" ConnectionName="Auth" TableName="hr_CompanyPayroll">
        <Sql Name="Query" ConnectionName="Auth" Description="检索查询">
          IF LEN(@CompanyID)&gt;0
          BEGIN
          SELECT ISNULL(M.[Year],@Year) as [Year],ISNULL(M.[Month],@Month) as [Month],ISNULL(M.[TotalSalary],0) as TotalSalary,
          ISNULL(M.[EmployeeCount],0) as EmployeeCount,A.[Name] as CompanyName
          FROM [hr_Company] A
          LEFT OUTER JOIN [hr_CompanyPayroll] M ON M.[CompanyID] = A.[CompanyID]
          WHERE A.CompanyID=@CompanyID AND M.[Year]=@Year AND M.[Month]=@Month;
          END
          ELSE
          BEGIN
          SELECT ISNULL(M.[Year],@Year) as [Year],ISNULL(M.[Month],@Month) as [Month],ISNULL(M.[TotalSalary],0) as TotalSalary,
          ISNULL(M.[EmployeeCount],0) as EmployeeCount,A.[Name] as CompanyName
          FROM [hr_Company] A
          LEFT OUTER JOIN [hr_CompanyPayroll] M ON M.[CompanyID] = A.[CompanyID]
          WHERE M.[Year]=@Year AND M.[Month]=@Month;
          END
        </Sql>
        <Sql Name="Add" ConnectionName="Auth" Description="新增">
          EXEC [sp_hr_GenPayrollCalculate] @Year,@Month,@CompanyID,@UserID;

          EXEC [sp_hr_GenPayroll] @Year,@Month,@CompanyID,@UserID;

          IF LEN(@CompanyID)&gt;0
          BEGIN
          SELECT ISNULL(M.[Year],@Year) as [Year],ISNULL(M.[Month],@Month) as [Month],ISNULL(M.[TotalSalary],0) as TotalSalary,
          ISNULL(M.[EmployeeCount],0) as EmployeeCount,A.[Name] as CompanyName
          FROM [hr_Company] A
          LEFT OUTER JOIN [hr_CompanyPayroll] M ON M.[CompanyID] = A.[CompanyID]
          WHERE A.CompanyID=@CompanyID AND M.[Year]=@Year AND M.[Month]=@Month;
          END
          ELSE
          BEGIN
          SELECT ISNULL(M.[Year],@Year) as [Year],ISNULL(M.[Month],@Month) as [Month],ISNULL(M.[TotalSalary],0) as TotalSalary,
          ISNULL(M.[EmployeeCount],0) as EmployeeCount,A.[Name] as CompanyName
          FROM [hr_Company] A
          LEFT OUTER JOIN [hr_CompanyPayroll] M ON M.[CompanyID] = A.[CompanyID]
          WHERE M.[Year]=@Year AND M.[Month]=@Month;
          END
        </Sql>
        <Sql Name="QueryCount" ConnectionName="Auth" Description="查询总数">
          IF LEN(@CompanyID)&gt;0
          BEGIN
          select count(*)
          FROM
          (SELECT c.* FROM [hr_Company] c join fun_sys_GetUserCompanys(@UserID) g on c.CompanyID=g.CompanyID) A
          LEFT OUTER JOIN [hr_CompanyPayroll] M ON M.[CompanyID] = A.[CompanyID]
          WHERE A.CompanyID=@CompanyID AND M.[Year]=@Year AND M.[Month]=@Month;
          END
          ELSE
          BEGIN
          select count(*)
          FROM
          (SELECT c.* FROM [hr_Company] c join fun_sys_GetUserCompanys(@UserID) g on c.CompanyID=g.CompanyID)A
          LEFT OUTER JOIN [hr_CompanyPayroll] M ON M.[CompanyID] = A.[CompanyID]
          WHERE M.[Year]=@Year AND M.[Month]=@Month;
          END
        </Sql>
        <Sql Name="QueryPage" ConnectionName="Auth" Description="查询分页">
          IF LEN(@CompanyID)&gt;0
          BEGIN
          SELECT ISNULL(M.[Year],@Year) as [Year],ISNULL(M.[Month],@Month) as [Month],ISNULL(M.[TotalSalary],0) as TotalSalary,
          ISNULL(M.[EmployeeCount],0) as EmployeeCount,A.[Name] as CompanyName
          FROM
          (SELECT c.* FROM [hr_Company] c join fun_sys_GetUserCompanys(@UserID) g on c.CompanyID=g.CompanyID)A
          LEFT OUTER JOIN [hr_CompanyPayroll] M ON M.[CompanyID] = A.[CompanyID]
          WHERE A.CompanyID=@CompanyID AND M.[Year]=@Year AND M.[Month]=@Month order by M.[AutoKey]
          OFFSET ((CAST(@Page as int)-1)*CAST(@Rows as int)) Rows FETCH NEXT CAST(@Rows as int) ROWS ONLY;
          END
          ELSE
          BEGIN
          SELECT ISNULL(M.[Year],@Year) as [Year],ISNULL(M.[Month],@Month) as [Month],ISNULL(M.[TotalSalary],0) as TotalSalary,
          ISNULL(M.[EmployeeCount],0) as EmployeeCount,A.[Name] as CompanyName
          FROM
          (SELECT c.* FROM [hr_Company] c join fun_sys_GetUserCompanys(@UserID) g on c.CompanyID=g.CompanyID)A
          LEFT OUTER JOIN [hr_CompanyPayroll] M ON M.[CompanyID] = A.[CompanyID]
          WHERE M.[Year]=@Year AND M.[Month]=@Month order by M.[AutoKey]
          OFFSET ((CAST(@Page as int)-1)*CAST(@Rows as int)) Rows FETCH NEXT CAST(@Rows as int) ROWS ONLY;
          END
        </Sql>
      </Table>
      <Table Name="hr_Payroll" ConnectionName="Auth" TableName="hr_Payroll">
        <Sql Name="Test" ConnectionName="Auth" Description="Test" IsDynamic="true">
          var sb=new System.Text.StringBuilder();
          var lines = Regex.Split(xx,'|');
          foreach(var line in lines)
          {
          var p = Regex.Split(',');
          if(p.Length==3)
          {
          sb.AppendFormat("insert into xx (f1,f2,f3) values(\'{0}\',{1},\'{2}\')",p[0],p[1],p[2]);
          }
          }

          return "select \'" + sb.ToString().Replace("\'","\'\'") + "\' AS SQL;";
        </Sql>
        <Sql Name="Query" ConnectionName="Auth" Description="检索查询">
          SELECT M.[AutoKey],M.[Year] as Year,M.[Month] as Month,convert(varchar(20),M.[HireDate],20) as HireDate,M.[State] as State,M.[CardNo] as CardNo,M.[TotalSalary] as TotalSalary,M.[BaseSalary] as BaseSalary,M.[PostSalary] as PostSalary,M.[PerformanceOfTheBase] as PerformanceOfTheBase,M.[CoefficientOfPerformance] as CoefficientOfPerformance,M.[PerformanceSalary] as PerformanceSalary,M.[AttendanceDays] as AttendanceDays,M.[RealAttendanceDays] as RealAttendanceDays,M.[LateArrivalTimes] as LateArrivalTimes,M.[DaysSick] as DaysSick,M.[LeaveDays] as LeaveDays,M.[AbsenteeismDays] as AbsenteeismDays,M.[AbsencesDays] as AbsencesDays,M.[DailyWage] as DailyWage,M.[SmallGauge] as SmallGauge,M.[PerfectAttendance] as PerfectAttendance,M.[SubsidizedMeals] as SubsidizedMeals,M.[CommissionAmount] as CommissionAmount,M.[ReturnDeductionsAmount] as ReturnDeductionsAmount,M.[SiteDeductedAmount] as SiteDeductedAmount,M.[YDMobiKK] as YDMobiKK,M.[DXMobiKK] as DXMobiKK,M.[MembershipFee] as MembershipFee,M.[ShouldDeductOther] as ShouldDeductOther,M.[Bonus] as Bonus,M.[DeductedAmount] as DeductedAmount,M.[ShouldAddOther] as ShouldAddOther,M.[TotalAmount] as TotalAmount,M.[EndowmentInsurance] as EndowmentInsurance,M.[MedicalInsurance] as MedicalInsurance,M.[UnemploymentInsurance] as UnemploymentInsurance,M.[PersonalAccumulationFund] as PersonalAccumulationFund,M.[NoTaxSalary] as NoTaxSalary,M.[TaxExemptIncome] as TaxExemptIncome,M.[Tax] as Tax,M.[RealSalary] as RealSalary,replace(M.[DimissionDate],'1900-01-01','-') as DimissionDate,M.[Bank] as Bank,M.[BankAccount] as BankAccount,A.[Name] as EmployeeName,B.[Name] as CompanyName,C.[Name] as DeptName,D.[Name] as JobName
          FROM [hr_Payroll] M
          join
          (SELECT e2.* FROM [hr_Employee] e2 join fun_sys_GetUserDepartments(@UserID) g2 on e2.DeptID=g2.DeptID)A on M.[EmployeeID] = A.[EmployeeID]
          left outer join [hr_Company] B on M.[CompanyID] = B.[CompanyID]
          left outer join [hr_Department] C on M.[DeptID] = C.[DeptID]
          left outer join [hr_Job] D on A.[JobID] = D.[JobID]
          where M.[Year]=cast(@Year as int) and M.[Month]=cast(@Month as int) and (M.[CompanyID] like '%'+@DeptID+'%' or M.[DeptID] like '%'+@DeptID+'%') and A.[JobID] Like '%'+@JobID+'%'
          order by M.[AutoKey]
          OFFSET ((CAST(@Page as int)-1)*CAST(@Rows as int)) Rows FETCH NEXT CAST(@Rows as int) ROWS ONLY
        </Sql>
        <Sql Name="PayrollReport" ConnectionName="Auth" Description="工资报表">
          select * from (SELECT cast(row_number() OVER(PARTITION BY M.[DeptID] ORDER BY A.Name desc)as varchar(3))as rowIndex,M.State,M.[CardNo] as CardNo,M.[TotalSalary] as TotalSalary,M.[BaseSalary] as BaseSalary,M.[PostSalary] as PostSalary,M.[PerformanceOfTheBase] as PerformanceOfTheBase,M.[CoefficientOfPerformance] as CoefficientOfPerformance,M.[PerformanceSalary] as PerformanceSalary,M.[AttendanceDays] as AttendanceDays,M.[RealAttendanceDays] as RealAttendanceDays,M.[LateArrivalTimes] as LateArrivalTimes,M.[DaysSick] as DaysSick,M.[LeaveDays] as LeaveDays,M.[AbsenteeismDays] as AbsenteeismDays,M.[AbsencesDays] as AbsencesDays,M.[DailyWage] as DailyWage,M.[SmallGauge] as SmallGauge,M.[PerfectAttendance] as PerfectAttendance,M.[SubsidizedMeals] as SubsidizedMeals,M.[CommissionAmount] as CommissionAmount,M.[ReturnDeductionsAmount] as ReturnDeductionsAmount,M.[SiteDeductedAmount] as SiteDeductedAmount,M.[YDMobiKK] as YDMobiKK,M.[DXMobiKK] as DXMobiKK,M.[MembershipFee] as MembershipFee,M.[ShouldDeductOther] as ShouldDeductOther,M.[Bonus] as Bonus,M.[DeductedAmount] as DeductedAmount,M.[ShouldAddOther] as ShouldAddOther,M.[TotalAmount] as TotalAmount,M.[EndowmentInsurance] as EndowmentInsurance,M.[MedicalInsurance] as MedicalInsurance,M.[UnemploymentInsurance] as UnemploymentInsurance,M.[PersonalAccumulationFund] as PersonalAccumulationFund,M.[NoTaxSalary] as NoTaxSalary,M.[TaxExemptIncome] as TaxExemptIncome,M.[Tax] as Tax,M.[RealSalary] as RealSalary,M.[Bank] as Bank,M.[BankAccount] as BankAccount,A.[Name] as EmployeeName,B.[Name] as CompanyName,C.[Name] as DeptName,D.[Name] as JobName
          FROM [hr_Payroll] M
          left outer join [hr_Employee] A on M.[EmployeeID] = A.[EmployeeID]
          left outer join [hr_Company] B on M.[CompanyID] = B.[CompanyID]
          left outer join [hr_Department] C on M.[DeptID] = C.[DeptID]
          left outer join [hr_Job] D on M.[JobID] = D.[JobID]
          where M.[Year]+'-'+M.[Month] =@YearMonth and M.[CompanyID]=@CompanyID union
          select '合计',
          '-' State,
          '-' as CardNo,
          sum(M.[TotalSalary]) as [TotalSalary],
          sum(M.[BaseSalary]) as [BaseSalary],
          sum(M.[PostSalary]) as [PostSalary],
          sum(M.[PerformanceOfTheBase]) as PerformanceOfTheBase,
          sum(M.[CoefficientOfPerformance]) as CoefficientOfPerformance,
          sum(M.[PerformanceSalary]) as PerformanceSalary,
          sum(M.[AttendanceDays]) as AttendanceDays,
          sum(M.[RealAttendanceDays]) as RealAttendanceDays,
          sum(M.[LateArrivalTimes]) as LateArrivalTimes,
          sum(M.[DaysSick]) as DaysSick,
          sum(M.[LeaveDays]) as LeaveDays,
          sum(M.[AbsenteeismDays]) as AbsenteeismDays,
          sum(M.[AbsencesDays]) as AbsencesDays,
          sum(M.[DailyWage]) as DailyWage,
          sum(M.[SmallGauge]) as SmallGauge,
          sum(M.[PerfectAttendance]) as PerfectAttendance,
          sum(M.[SubsidizedMeals]) as SubsidizedMeals,
          sum(M.[CommissionAmount]) as CommissionAmount,
          sum(M.[ReturnDeductionsAmount]) as ReturnDeductionsAmount,
          sum(M.[SiteDeductedAmount]) as SiteDeductedAmount,
          sum(M.[YDMobiKK]) as YDMobiKK,
          sum(M.[DXMobiKK]) as DXMobiKK,
          sum(M.[MembershipFee]) as MembershipFee,
          sum(M.[ShouldDeductOther]) as ShouldDeductOther,
          sum(M.[Bonus]) as Bonus,
          sum(M.[DeductedAmount]) as DeductedAmount,
          sum(M.[ShouldAddOther]) as ShouldAddOther,
          sum(M.[TotalAmount]) as TotalAmount,
          sum(M.[EndowmentInsurance]) as EndowmentInsurance,
          sum(M.[MedicalInsurance]) as MedicalInsurance,
          sum(M.[UnemploymentInsurance]) as UnemploymentInsurance,
          sum(M.[PersonalAccumulationFund]) as PersonalAccumulationFund,
          sum(M.[NoTaxSalary]) as NoTaxSalary,
          sum(M.[TaxExemptIncome]) as TaxExemptIncome,
          sum(M.[Tax]) as Tax,
          sum(M.[RealSalary]) as RealSalary,
          '-' as Bank,
          '-' as BankAccount,
          cast(count(M.EmployeeID)as varchar(8)) as EmployeeName,
          B.[Name] as CompanyName,
          C.[Name] as DeptName,
          '-' as JobName
          from hr_Payroll M
          left outer join [hr_Employee] A on M.[EmployeeID] = A.[EmployeeID]
          left outer join [hr_Company] B on M.[CompanyID] = B.[CompanyID]
          left outer join [hr_Department] C on M.[DeptID] = C.[DeptID]
          left outer join [hr_Job] D on M.[JobID] = D.[JobID]
          where M.[Year]+'-'+M.[Month] =@YearMonth and M.[CompanyID]=@CompanyID group by M.[DeptID],B.[Name],C.[Name])a order by a.[DeptName],a.EmployeeName desc
        </Sql>
        <Sql Name="Count" ConnectionName="Auth" Description="总数">
          SELECT count(M.[AutoKey])
          FROM [hr_Payroll] M
          join
          (SELECT e2.* FROM [hr_Employee] e2 join fun_sys_GetUserDepartments(@UserID) g2 on e2.DeptID=g2.DeptID)A on M.[EmployeeID] = A.[EmployeeID]
          left outer join [hr_Company] B on M.[CompanyID] = B.[CompanyID]
          left outer join [hr_Department] C on M.[DeptID] = C.[DeptID]
          left outer join [hr_Job] D on A.[JobID] = D.[JobID]
          where M.[Year]=cast(@Year as int) and M.[Month]=cast(@Month as int) and (M.[CompanyID] like '%'+@DeptID+'%' or M.[DeptID] like '%'+@DeptID+'%') and A.[JobID] Like '%'+@JobID+'%'

        </Sql>
        <Sql Name="GetItem" ConnectionName="Auth" Description="获取编辑">
          SELECT p.[Year]+'-'+p.[Month] as [Date]
          ,p.[EmployeeID]
          ,p.[CompanyID]
          ,p.[DeptID]
          ,p.[JobID]
          ,p.[HireDate]
          ,p.[State]
          ,p.[CardNo]
          ,p.[TotalSalary]
          ,p.[BaseSalary]
          ,p.[PostSalary]
          ,p.[PerformanceOfTheBase]
          ,p.[CoefficientOfPerformance]
          ,p.[PerformanceSalary]
          ,p.[AttendanceDays]
          ,p.[RealAttendanceDays]
          ,p.[LateArrivalTimes]
          ,p.[DaysSick]
          ,p.[LeaveDays]
          ,p.[AbsenteeismDays]
          ,p.[AbsencesDays]
          ,p.[DailyWage]
          ,p.[SmallGauge]
          ,p.[PerfectAttendance]
          ,p.[SubsidizedMeals]
          ,p.[CommissionAmount]
          ,p.[ReturnDeductionsAmount]
          ,p.[SiteDeductedAmount]
          ,p.[YDMobiKK]
          ,p.[DXMobiKK]
          ,p.[MembershipFee]
          ,p.[ShouldDeductOther]
          ,p.[Bonus]
          ,p.[DeductedAmount]
          ,p.[ShouldAddOther]
          ,p.[TotalAmount]
          ,p.[EndowmentInsurance]
          ,p.[MedicalInsurance]
          ,p.[UnemploymentInsurance]
          ,p.[PersonalAccumulationFund]
          ,p.[NoTaxSalary]
          ,p.[TaxExemptIncome]
          ,p.[Tax]
          ,p.[RealSalary]
          ,p.[DimissionDate]
          ,p.[Bank]
          ,p.[BankAccount]
          ,p.[IsFaFang]
          ,p.[IsActive]
          ,p.[SortID]
          ,p.[Remark]
          ,p.[AutoKey]
          ,c.Name as [CName]
          ,d.Name as [DName]
          ,p.JobID as [JName]
          ,e.Name as [EName]
          ,e.[HireDate]
          FROM [dbo].[hr_Payroll] p
          join hr_Employee e on p.EmployeeID=e.EmployeeID
          join hr_Company c on p.CompanyID=c.CompanyID
          join hr_Department d on p.DeptID=d.DeptID
          where p.[AutoKey]=@AutoKey
        </Sql>
        <Sql Name="Update" ConnectionName="Auth" Description="更新个人工资">
          declare @change dec(18,2)
          select @change=@ShouldAddOther-[ShouldAddOther]+[ShouldDeductOther]-@ShouldDeductOther FROM hr_Payroll where [AutoKey]=@AutoKey
          UPDATE [dbo].[hr_Payroll]
          SET [CoefficientOfPerformance] =@CoefficientOfPerformance
          ,[RealSalary] =[RealSalary]+@change-[TaxExemptIncome]+@TaxExemptIncome+Tax-(SELECT TOP 1 NoTaxSalary*Tax - QuickDeduction  FROM [hr_TaxSet] WHERE TaxDn&lt;=NoTaxSalary+@change AND TaxUp&gt;NoTaxSalary+@change)
          ,[Tax]=(SELECT TOP 1 NoTaxSalary*Tax - QuickDeduction  FROM [hr_TaxSet] WHERE TaxDn&lt;=NoTaxSalary+@change AND TaxUp&gt;NoTaxSalary+@change)
          ,[TotalAmount]=[TotalAmount]+@change
          ,[NoTaxSalary]=[NoTaxSalary]+@change
          ,[ShouldDeductOther] =@ShouldDeductOther
          ,[ShouldAddOther] =@ShouldAddOther
          ,[TaxExemptIncome] =@TaxExemptIncome
          ,[Remark] =@Remark
          ,[ModifiedUser] =@ModifiedUser
          ,[ModifiedTime] =@ModifiedTime
          FROM hr_Payroll
          where [AutoKey]=@AutoKey

          declare @year int;
          declare @month int;
          declare @companyID varchar(10);
          select @year=[Year],@month=[Month],@companyID=[CompanyID] FROM [hr_Payroll] where [AutoKey]=@AutoKey
          declare @totalSalary money;

          SELECT
          @totalSalary= ISNULL(SUM(RealSalary),0)
          FROM hr_Payroll
          WHERE [Year] =@year AND [Month] =@month AND CompanyID = @companyID ;

          Update hr_CompanyPayroll
          SET TotalSalary = @totalSalary
          WHERE [Year] =@year AND [Month] =@month AND CompanyID = @companyID ;
        </Sql>
        <SqlTest SqlName="Test">
          <Parameter Key="xx" Value="p1,1,pp|p2,2,dd" />
        </SqlTest>
      </Table>
      <Table Name="hr_JiaChengTiaoLi" ConnectionName="Auth" TableName="hr_JiaChengTiaoLi">
        <Sql Name="GetEdit" ConnectionName="Auth" Description="GetEdit">
          SELECT [JCID] ,[JCName] ,[Remark],[AutoKey] FROM [hr_JiaChengTiaoLi]  WHERE JCID= @JCID
        </Sql>
        <Sql Name="UpdateTiaoli" ConnectionName="Auth" SqlType="Execute" Description="UpdateTiaoli">
          if(@DeleteCheck='on')
          begin
          DELETE FROM [hr_JiaChengTiaoLi] WHERE AutoKey=@AutoKey
          raiserror('删除成功！',16,1) with nowait
          end
          else
          begin
          if(len(@AutoKey)&gt;0)
          begin
          if exists(select * from [hr_JiaChengTiaoLi] where [JCID]=@JCID and [JCName]=@JCName and [Remark] = @Remark and [AutoKey] != @AutoKey)
          begin
          RAISERROR ('已经存在相同信息，无法保存！',15, 1) WITH NOWAIT
          end
          else

          begin
          UPDATE [hr_JiaChengTiaoLi] SET [JCName]=@JCName,[Remark]=@Remark WHERE [AutoKey]=@AutoKey;
          raiserror('更新成功！',16,1) with nowait
          end
          end
          else
          begin
          if exists(select * from [hr_JiaChengTiaoLi] where [JCID]=@JCID and [JCName]=@JCName and [Remark] = @Remark )
          begin
          RAISERROR ('已经存在相同信息，无法保存！',15, 1) WITH NOWAIT
          end
          else


          begin

          INSERT INTO [hr_JiaChengTiaoLi]
          ([JCID],[JCName],[Remark],[IsActive] ,[CreatedUser],[CreatedTime] ,[ModifiedUser],[ModifiedTime])
          VALUES(@JCID,@JCName,@Remark,@IsActive ,@CreatedUser,@CreatedTime ,@ModifiedUser,@ModifiedTime);
          raiserror('新增成功！',16,1) with nowait

          end
          end
          end
        </Sql>
        <SqlTest SqlName="GetEdit">
          <Parameter />
        </SqlTest>
      </Table>
      <Table Name="hr_JiaChengType" ConnectionName="Auth" TableName="hr_JiaChengType">
        <Sql Name="QueryCount" ConnectionName="Auth" Description="检索查询总数">
          SELECT count(a.[JCID])
          FROM [hr_JiaChengType] a
          join (SELECT c.* FROM [hr_Company] c join fun_sys_GetUserCompanys(@UserID) g on c.CompanyID=g.CompanyID)c on a.CompanyID=c.CompanyID
          where a.[CompanyID] like '%'+@CompanyID+'%'
          and a.[JCName] like '%'+@JCName+'%'
          and a.[JCType] like '%'+@JCType+'%'
          and a.[IsActive]=1
        </Sql>
        <Sql Name="QueryPage" ConnectionName="Auth" Description="检索分页查询">
          SELECT a.[JCID]
          ,a.[CompanyID]
          ,c.[Name]
          ,a.[JCName]
          ,a.[JCType]
          ,a.[JCAmont]
          ,a.[Remark]
          ,a.[IsActive]
          ,a.[CreatedUser]
          ,a.[CreatedTime]
          ,a.[ModifiedUser]
          ,a.[ModifiedTime]
          ,a.[AutoKey]
          FROM [hr_JiaChengType] a
          join (SELECT c.* FROM [hr_Company] c join fun_sys_GetUserCompanys(@UserID) g on c.CompanyID=g.CompanyID)c on a.CompanyID=c.CompanyID
          where a.[CompanyID] like '%'+@CompanyID+'%'
          and a.[JCName] like '%'+@JCName+'%'
          and a.[JCType] like '%'+@JCType+'%'
          and a.[IsActive]=1
          order by a.CompanyID
          OFFSET ((CAST(@Page as int)-1)*CAST(@Rows as int)) Rows FETCH NEXT CAST(@Rows as int) ROWS ONLY;
        </Sql>
        <Sql Name="GetDetail" ConnectionName="Auth" Description="查询明细">
          SELECT [JCID],b.[Name],b.[CompanyID],[JCName],[JCType],[JCAmont],a.[Remark],a.[IsActive]
          FROM [hr_JiaChengType] a  join [hr_Company] b on a.CompanyID=b.CompanyID
          WHERE [JCID]=@JCID
        </Sql>
        <Sql Name="Add" ConnectionName="Auth" Description="新增">
          INSERT INTO [hr_JiaChengType]
          ([JCID],[CompanyID],[JCName],[JCType],[JCAmont],[Remark],[IsActive],[CreatedUser],[CreatedTime],[ModifiedUser],[ModifiedTime])
          VALUES(@JCID,@CompanyID,@JCName,@JCType,@JCAmont,@Remark,@IsActive,@CreatedUser,@CreatedTime,@ModifiedUser,@ModifiedTime);
          SELECT [JCID],b.[Name],[JCName],[JCType],[JCAmont],a.[Remark],a.[IsActive]
          FROM [hr_JiaChengType] a  join [hr_Company] b on a.CompanyID=b.CompanyID
          WHERE a.[AutoKey]=scope_identity()
        </Sql>
        <Sql Name="GetEdit" ConnectionName="Auth" Description="查询编辑">
          SELECT [JCID],b.[Name],b.[CompanyID],[JCName],[JCType],[JCAmont],a.[Remark],a.[IsActive]
          FROM [hr_JiaChengType] a  join [hr_Company] b on a.CompanyID=b.CompanyID
          WHERE [JCID]=@JCID
        </Sql>
        <Sql Name="Update" ConnectionName="Auth" Description="更新">
          UPDATE [hr_JiaChengType]
          SET  [JCID]=@JCID,[JCName]=@JCName,[JCType]=@JCType,[JCAmont]=@JCAmont,[Remark]=@Remark,[ModifiedUser]=@ModifiedUser,[ModifiedTime]=@ModifiedTime WHERE [JCID]=@JCID;
          SELECT [JCID],b.[Name],[JCName],[JCType],[JCAmont],a.[Remark],a.[IsActive]
          FROM [hr_JiaChengType] a  join [hr_Company] b on a.CompanyID=b.CompanyID
          WHERE [JCID]=@JCID
        </Sql>
        <Sql Name="Delete" ConnectionName="Auth" Description="删除">
          declare @sql varchar(max);
          set @sql='IF exists(select JCID from hr_EmployeeJiaCheng where JCType in ('''+replace(@Keys,',',''',''')+'''))
          begin
          RAISERROR(''存在已使用奖惩类别,无法删除!'' ,16,1) with nowait
          end
          else
          begin
          UPDATE [hr_JiaChengType]
          SET [ModifiedUser]='''+@ModifiedUser+''',[ModifiedTime]='''+@ModifiedTime+''',[IsActive]=0 WHERE [JCID] in ('''+replace(@Keys,',',''',''')+''')
          end;'
          exec(@sql)
        </Sql>
        <Sql Name="GetJCTypeByCompany" SharedName="GetJCTypeByCompany" ConnectionName="Auth" Description="根据公司获取奖惩信息">
          SELECT [JCID] as ID
          ,[JCName]as Name
          FROM [hr_JiaChengType]
          where [CompanyID] like '%'+@CompanyID+'%' and IsActive=1
        </Sql>
      </Table>
    </Group>
    <Group Name="财务管理">
      <Table Name="bi_Bank" ConnectionName="Auth" TableName="bi_Bank">
        <Sql Name="Add" ConnectionName="Auth" Description="Add">
          DECLARE @IsExist INT, @ExistBank_IsActive BIT, @Tips NVARCHAR(100)
          SET @IsExist = 0
          SELECT @IsExist = 1, @ExistBank_IsActive = IsActive FROM
          [bi_Bank]
          WHERE [Account] = @Account
          IF (@IsExist = 0)
          BEGIN
          INSERT INTO [bi_Bank]
          ([BankID],[BankName],[CompanyID],[Account],[Remaining],[IsActive],[CreatedUser],[CreatedTime],[ModifiedUser],[ModifiedTime])
          VALUES(@BankID,LTRIM(RTRIM(@Name)),@CompanyID,LTRIM(RTRIM(@Account)),LTRIM(RTRIM(@Remaining)),@IsActive,@CreatedUser,@CreatedTime,@ModifiedUser,@ModifiedTime);
          SELECT [bi_Bank].[BankID],[bi_Bank].[BankName],[hr_Company].[Name] AS CompanyName,[bi_Bank].[Account],[bi_Bank].[Remaining],CASE [bi_Bank].[IsActive] WHEN 1 THEN '启用' WHEN 0 THEN '停用' END IsActive_Text,[bi_Bank].[IsActive] FROM
          [bi_Bank] LEFT JOIN [hr_Company] ON [bi_Bank].[CompanyID] = [hr_Company].[CompanyID]
          WHERE [bi_Bank].[AutoKey]=scope_identity();
          END
          ELSE
          BEGIN
          IF @ExistBank_IsActive = 0
          BEGIN
          --SET @Tips = '已存在相同卡号且该账号已经停用，不能添加。'
          SET @Tips = '已经存在相同信息，无法保存！'
          END
          ELSE
          BEGIN
          --SET @Tips = '已存在相同卡号且正在使用中，不能添加！'
          SET @Tips = '已经存在相同信息，无法保存！'
          END
          RAISERROR (@Tips ,15, 1) WITH NOWAIT
          END
        </Sql>
        <Sql Name="Update" ConnectionName="Auth" SqlType="Execute" Description="Update">
          DECLARE @IsExist INT, @ExistBank_IsActive BIT, @Tips NVARCHAR(100)
          SET @IsExist = 0
          SELECT @IsExist = 1, @ExistBank_IsActive = IsActive FROM
          [bi_Bank]
          WHERE [Account] = @Account AND [BankID] &lt;&gt; @BankID
          IF (@IsExist = 0)
          BEGIN
          UPDATE [bi_Bank]
          SET  [BankName]=LTRIM(RTRIM(@Name)),[CompanyID]=@CompanyID,[Account]=LTRIM(RTRIM(@Account)),[Remaining]=LTRIM(RTRIM(@Remaining)),[ModifiedUser]=@ModifiedUser,[ModifiedTime]=@ModifiedTime WHERE [BankID]=@BankID;
          SELECT [bi_Bank].[BankID],[bi_Bank].[BankName],[hr_Company].[Name] AS CompanyName,[bi_Bank].[Account],[bi_Bank].[Remaining],CASE [bi_Bank].[IsActive] WHEN 1 THEN '启用' WHEN 0 THEN '停用' END IsActive_Text,[bi_Bank].[IsActive] FROM
          [bi_Bank] LEFT JOIN [hr_Company] ON [bi_Bank].[CompanyID] = [hr_Company].[CompanyID]
          WHERE [BankID]=@BankID;
          END
          ELSE
          BEGIN
          IF @ExistBank_IsActive = 0
          BEGIN
          --SET @Tips = '已存在相同卡号且该账号已经停用，不能添加。'
          SET @Tips = '已经存在相同信息，无法保存！'
          END
          ELSE
          BEGIN
          --SET @Tips = '已存在相同卡号且正在使用中，不能添加！'
          SET @Tips = '已经存在相同信息，无法保存！'
          END
          RAISERROR (@Tips ,15, 1) WITH NOWAIT
          END
        </Sql>
        <Sql Name="Delete" ConnectionName="Auth" SqlType="Execute" Description="Delete">
          DECLARE @sql varchar(max);
          SET @sql='UPDATE [bi_Bank]
          SET [ModifiedUser]='''+@ModifiedUser+''',[ModifiedTime]='''+@ModifiedTime+''',[IsActive]=0 WHERE [BankID] in ('''+replace(@BankIDs,',',''',''')+''') ;'
          EXEC(@sql);
        </Sql>
        <Sql Name="GetItem" ConnectionName="Auth" SqlType="Execute" Description="GetItem">
          SELECT [bi_Bank].[BankID],[bi_Bank].[BankName],[bi_Bank].[CompanyID],[hr_Company].[Name] AS CompanyName,[bi_Bank].[Account],CONVERT(VARCHAR,[bi_Bank].[Remaining]) as [Remaining],[bi_Bank].[IsActive],
          [bi_Bank].[CreatedUser],[bi_Bank].[CreatedTime],[bi_Bank].[ModifiedUser],[bi_Bank].[ModifiedTime],[bi_Bank].[AutoKey] FROM
          [bi_Bank] LEFT JOIN [hr_Company] ON [bi_Bank].[CompanyID] = [hr_Company].[CompanyID]
          WHERE [bi_Bank].[BankID]=@BankID;
        </Sql>
        <Sql Name="GetItem_View" ConnectionName="Auth" SqlType="Execute" Description="GetItem_View">
          SELECT [bi_Bank].[BankName],[hr_Company].[Name] AS CompanyName,[Account],[bi_Bank].[Remaining],CASE [bi_Bank].[IsActive] WHEN 1 THEN '启用' WHEN 0 THEN '停用' END IsActive FROM
          [bi_Bank] LEFT JOIN [hr_Company] ON [bi_Bank].[CompanyID] = [hr_Company].[CompanyID]
          WHERE [BankID]=@BankID;
        </Sql>
        <Sql Name="GetAll" ConnectionName="Auth" SqlType="Execute" Description="GetAll">
          SELECT [BankID],[BankName],[CompanyID],[Account],[Remaining],[IsActive],[CreatedUser],[CreatedTime],[ModifiedUser],[ModifiedTime],[AutoKey] FROM [bi_Bank];
        </Sql>
        <Sql Name="GetAll_Search" ConnectionName="Auth" SqlType="Execute" Description="GetAll_Search">
          DECLARE @SQL VARCHAR(500)
          SET @SQL = '
          SELECT [bi_Bank].[BankID],[bi_Bank].[Name],[hr_Company].[Name] AS CompanyName,[bi_Bank].[Account],[bi_Bank].[Remaining],CASE [bi_Bank].[IsActive] WHEN 1 THEN ''启用'' WHEN 0 THEN ''停用'' END IsActive_Text,[bi_Bank].[IsActive]
          FROM [bi_Bank] LEFT JOIN [hr_Company] ON [bi_Bank].[CompanyID] = [hr_Company].[CompanyID]
          WHERE [bi_Bank].[Name] LIKE ''%'+LTRIM(RTRIM(@Name))+'%'''
          IF @Account &lt;&gt; ''
          BEGIN
          SET @SQL = @SQL + ' AND [bi_Bank].[Account] LIKE ''%'+LTRIM(RTRIM(@Account))+'%'''
          END
          IF @IsActive &lt;&gt; -1
          BEGIN
          SET @SQL = @SQL + ' AND [bi_Bank].IsActive=' + @IsActive
          END
          EXEC (@SQL)
        </Sql>
        <Sql Name="GetBankByCompanyID" SharedName="GetBankByCompanyID" ConnectionName="Auth" Description="根据公司编号获取银行">
          select BankID as ID,BankName,Account from bi_Bank where CompanyID=@CompanyID and IsActive=1
        </Sql>
        <Sql Name="QueryCount" ConnectionName="Auth" Description="查询总数">
          DECLARE @SQL VARCHAR(500)
          SET @SQL = '
          select count(*)
          FROM [bi_Bank] LEFT JOIN [hr_Company] ON [bi_Bank].[CompanyID] = [hr_Company].[CompanyID]
          WHERE [bi_Bank].[BankName] LIKE ''%'+LTRIM(RTRIM(@Name))+'%''  and [bi_Bank].[CompanyID] LIKE ''%'+LTRIM(RTRIM(@CompanyID))+'%'''
          IF @Account &lt;&gt; ''
          BEGIN
          SET @SQL = @SQL + ' AND [bi_Bank].[Account] LIKE ''%'+LTRIM(RTRIM(@Account))+'%'''
          END
          IF @IsActive &lt;&gt; -1
          BEGIN
          SET @SQL = @SQL + ' AND [bi_Bank].IsActive like ''%' + @IsActive+'%'''
          END
          EXEC (@SQL)
        </Sql>
        <Sql Name="QueryPage" ConnectionName="Auth" Description="查询分页">
          DECLARE @SQL VARCHAR(500)
          SET @SQL = '
          SELECT b.[BankID],b.[BankName],c.[Name] AS CompanyName,b.[Account],CONVERT(VARCHAR,b.Remaining) as [Remaining],CASE b.[IsActive] WHEN 1 THEN ''启用'' WHEN 0 THEN ''停用'' END IsActive_Text,b.[IsActive]
          FROM [bi_Bank] b LEFT JOIN [hr_Company] c ON b.[CompanyID] = c.[CompanyID]
          WHERE b.[BankName] LIKE ''%'+@Name+'%'' and b.[CompanyID] LIKE ''%'+@CompanyID+'%'''
          IF @Account &lt;&gt; ''
          BEGIN
          SET @SQL = @SQL + ' AND b.[Account] LIKE ''%'+@Account+'%'''
          END
          IF @IsActive &lt;&gt; -1
          BEGIN
          SET @SQL = @SQL + ' AND b.IsActive like ''%'+ @IsActive+'%'''
          END
          SET @SQL = @SQL + ' ORDER BY b.ModifiedTime DESC '
          SET @sql = @sql + ' OFFSET ((CAST('+@Page+' as int)-1)*CAST('+@Rows+' as int)) Rows FETCH NEXT CAST('+@Rows+' as int) ROWS ONLY'
          exec(@sql)
        </Sql>
        <Sql Name="GetBankByCom" SharedName="GetBankByCom" ConnectionName="Auth" Description="根据公司获取公司银行账号">
          select [BankID],[BankName],[Account],CONVERT(VARCHAR,Remaining) as [Remaining],[Remark],
          CASE [IsActive] WHEN 1 THEN '启用' WHEN 0 THEN '停用' END IsActive from [bi_Bank] where [CompanyID]=@CompanyID
        </Sql>
        <Sql Name="AddBank" ConnectionName="Auth" Description="新增公司银行账号">
          if exists(select * from [bi_Bank] where [Account]=@Account and [IsActive]=1 and [BankName]=@BankName)
          begin
          RAISERROR ('已经存在相同信息，无法保存！',15, 1) WITH NOWAIT
          end
          else
          --begin
          --if exists(select * from [bi_SupplierBank] where [Account]=@Account and [IsActive]!=1)
          --begin
          --update [bi_SupplierBank] set [IsActive]=1 where [Account]=@Account;
          --raiserror('新增成功！',16,1) with nowait
          --end
          --else
          begin
          insert into [bi_Bank]([BankID],[BankName],[CompanyID],[Account],[Remaining],[Remark],[IsActive],[CreatedUser],[CreatedTime],[ModifiedUser],[ModifiedTime])
          values(@BankID,@BankName,@CompanyID,@Account,@Remaining,@Remark,@IsActive,@CreatedUser,@CreatedTime,@ModifiedUser,@ModifiedTime);
          raiserror('新增成功！',16,1) with nowait
          end
        </Sql>
        <Sql Name="UpdateBank" ConnectionName="Auth" Description="更新公司银行账号">
          if exists(select * from [bi_Bank] where [BankID]!=@BankID and [IsActive]=1 and [Account]=@Account)
          begin
          RAISERROR ('已经存在相同信息，无法保存！',15, 1) WITH NOWAIT
          end
          else
          begin
          update [bi_Bank] set [BankName]=@BankName,[Account]=@Account,[Remark]=@Remark,[Remaining]=@Remaining,[ModifiedUser]=@ModifiedUser,[ModifiedTime]=@ModifiedTime where [BankID]=@BankID;
          raiserror('更新成功！',16,1) with nowait
          end
        </Sql>
        <Sql Name="DeleteBank" ConnectionName="Auth" Description="DeleteBank">
          update [bi_Bank] set [IsActive]=0 where [BankID]=@BankID;
          raiserror('该账号已停用！',16,1) with nowait
        </Sql>
        <Sql Name="ActiveBank" ConnectionName="Auth" Description="启用银行账号">update [bi_Bank] set [IsActive]=1 where [BankID]=@BankID;</Sql>
        <Sql Name="GetBankByCompany" SharedName="GetBankByCompany" ConnectionName="Auth" Description="根据多选的公司显示相应的银行账号">
          if(@UserID='U00001')
          begin
          declare @sql varchar(max)
          set @sql='select Account as Name,BankID as ID,CompanyID+BankName as PID from bi_Bank where IsActive=1 union
          select distinct BankName,CompanyID+BankName, CompanyID from bi_Bank where IsActive=1  union
          select JC,CompanyID,''000000''  from hr_Company  where IsActive=1 and CompanyID in ('''+REPLACE(@CompanyID,',',''',''')+''')
          union select ''全部银行'',''000000'','''';'
          exec(@sql)
          end
          else
          begin
          declare @sql1 varchar(max)
          set @sql1='
          with datafilter as (SELECT * FROM dbo.fSplitString((select distinct [dbo].[sys_RolePage].DataFilter
          from [dbo].[sys_User]
          inner join [dbo].[sys_UserRole] on sys_User.UserID=sys_UserRole.UserID
          inner join [dbo].[sys_RolePage] on sys_UserRole.RoleID=sys_RolePage.RoleID
          where sys_User.UserID='''+@UserID+''' and sys_RolePage.PageID=''P01017'' and sys_RolePage.DataFilter&lt;&gt;N''''),'','',1))
          select bank.Account as Name,bank.BankID as ID,bank.CompanyID+bank.BankName as PID
          from [bi_Bank] bank join (
          select b.BankID from datafilter a join [bi_Bank] b on a.Value=b.CompanyID union
          select value from datafilter a join [bi_Bank] b on a.Value=b.BankID)c on bank.BankID=c.BankID
          left join [hr_Company] d on bank.CompanyID=d.CompanyID
          union select distinct BankName,CompanyID+BankName,CompanyID from bi_Bank where IsActive=1
          union select JC,CompanyID,''000000'' from hr_Company where IsActive=1 and CompanyID in ('''+REPLACE(@CompanyID,',',''',''')+''')
          union select ''全部银行'',''000000'','''''
          exec(@sql1)
          end
        </Sql>
        <Sql Name="Query" ConnectionName="Auth" Description="检索公司银行">
          if(@UserID='U00001')
          begin
          select bank.BankID,bank.BankName,d.Name as CompanyName,bank.Account,CONVERT(VARCHAR,bank.Remaining) as
          [Remaining],CASE bank.[IsActive] WHEN 1 THEN '启用' WHEN 0 THEN '停用' END IsActive_Text,bank.[IsActive]
          from [bi_Bank] bank left join [hr_Company] d on bank.CompanyID=d.CompanyID
          where bank.BankName like '%'+@Name+'%' and d.CompanyID like '%'+@CompanyID+'%'
          order by bank.ModifiedTime desc
          OFFSET ((CAST(@Page as int)-1)*CAST(@Rows as int)) Rows FETCH NEXT CAST(@Rows as int) ROWS ONLY;
          end
          else
          begin
          with datafilter as (SELECT * FROM dbo.fSplitString((select distinct [dbo].[sys_RolePage].DataFilter
          from [dbo].[sys_User]
          inner join [dbo].[sys_UserRole] on sys_User.UserID=sys_UserRole.UserID
          inner join [dbo].[sys_RolePage] on sys_UserRole.RoleID=sys_RolePage.RoleID
          where sys_User.UserID=@UserID and sys_RolePage.PageID='P01017' and sys_RolePage.DataFilter&lt;&gt;N''),',',1))

          select bank.BankID,bank.BankName,d.Name as CompanyName,bank.Account,CONVERT(VARCHAR,bank.Remaining) as
          [Remaining],CASE bank.[IsActive] WHEN 1 THEN '启用' WHEN 0 THEN '停用' END IsActive_Text,bank.[IsActive]
          from [bi_Bank] bank join (
          select b.BankID from datafilter a join [bi_Bank] b on a.Value=b.CompanyID union
          select value from datafilter a join [bi_Bank] b on a.Value=b.BankID)c on bank.BankID=c.BankID
          left join [hr_Company] d on bank.CompanyID=d.CompanyID
          where bank.BankName like '%'+@Name+'%' and d.CompanyID like '%'+@CompanyID+'%'
          order by bank.ModifiedTime desc
          OFFSET ((CAST(@Page as int)-1)*CAST(@Rows as int)) Rows FETCH NEXT CAST(@Rows as int) ROWS ONLY;
          end
        </Sql>
        <Sql Name="QueryCount1" ConnectionName="Auth" Description="查询总数">
          if(@UserID='U00001')
          begin
          select count(*)
          from [bi_Bank] bank left join [hr_Company] d on bank.CompanyID=d.CompanyID
          where bank.BankName like '%'+@Name+'%' and d.CompanyID like '%'+@CompanyID+'%'
          end
          else
          begin
          with datafilter as (SELECT * FROM dbo.fSplitString((select distinct [dbo].[sys_RolePage].DataFilter
          from [dbo].[sys_User]
          inner join [dbo].[sys_UserRole] on sys_User.UserID=sys_UserRole.UserID
          inner join [dbo].[sys_RolePage] on sys_UserRole.RoleID=sys_RolePage.RoleID
          where sys_User.UserID=@UserID and sys_RolePage.PageID='P01017' and sys_RolePage.DataFilter&lt;&gt;N''),',',1))

          select count(*)
          from [bi_Bank] bank join (
          select b.BankID from datafilter a join [bi_Bank] b on a.Value=b.CompanyID union
          select value from datafilter a join [bi_Bank] b on a.Value=b.BankID)c on bank.BankID=c.BankID
          left join [hr_Company] d on bank.CompanyID=d.CompanyID
          where bank.BankName like '%'+@Name+'%' and d.CompanyID like '%'+@CompanyID+'%'
          end
        </Sql>
        <Sql Name="GetAccountByBankID" SharedName="GetAccountByBankID" ConnectionName="Auth" Description="GetAccountByBankID">select Account from bi_Bank where BankID=@BankID</Sql>
        <Sql Name="GetBankList" ConnectionName="Auth" Description="获取当前公司的银行列表（Combobox用）">
          select [CompanyID],[BankName] from [bi_Bank] where [CompanyID]=@CompanyID and [IsActive]=1 GROUP BY CompanyID,BankName
        </Sql>
        <Sql Name="GetBankAccountList" ConnectionName="Auth" Description="获取当前公司的银行账号列表（Combobox用）">
          select [Account] from [bi_Bank] where [CompanyID]=@CompanyID AND BankName=@BankName and [IsActive]=1
        </Sql>
      </Table>
      <Table Name="acc_Receivables" ConnectionName="Auth" TableName="acc_Receivables">
        <Sql Name="GetReceivablesByCustomer" ConnectionName="Auth" Description="获取客户收款流水（用于Combo）">
          SELECT rc.RecNum, rc.RecNum + ' ' + CONVERT(VARCHAR,r.PaymentMoney-CONVERT(DECIMAL(18,2),SUM(ISNULL(orr.ReciveAmount,0)))) + '元' Display,r.PaymentMoney-SUM(ISNULL(orr.ReciveAmount,0)) MoneyUsable FROM acc_Receivables_Customer rc
          INNER JOIN acc_Receivables r ON rc.RecNum=r.RecNum
          LEFT JOIN bi_OrderReciveRecord orr ON rc.RecNum=orr.ItemNo
          WHERE rc.IsActive=1 AND rc.CustomerID=@CustomerID
          GROUP BY rc.RecNum,r.PaymentMoney
          HAVING (r.PaymentMoney-SUM(ISNULL(orr.ReciveAmount,0))) &gt; 0
        </Sql>
        <Sql Name="QueryCount" ConnectionName="Auth" Description="查询总数">
          DECLARE @sql varchar(max);
          DECLARE @where varchar(2000);
          SET @where='';
          IF(len(@BankName)&gt;0)
          BEGIN
          IF(LEN(@where)&gt;0)
          SET @where = @where + ' AND'
          set @where= @where+' (' + @BankName+ ')';
          END

          IF(len(@CompanyID)&gt;0)
          BEGIN
          IF(LEN(@where)&gt;0)
          SET @where = @where + ' AND'
          set @where= @where+' (' + @CompanyID+ ')';
          END


          IF(len(@BankAccount)&gt;0)
          BEGIN
          IF(LEN(@where)&gt;0)
          SET @where = @where + ' AND'
          set @where= @where+' (' + @BankAccount+ ')';
          END

          IF(len(@OccurencyStartDate)&gt;0)
          BEGIN
          IF(LEN(@where)&gt;0)
          SET @where = @where + ' AND'
          set @where= @where+' (CONVERT(DATE,OccurencyDate)&gt;=CONVERT(DATE,''' +@OccurencyStartDate +'''))';
          END

          IF(len(@OccurencyEndDate)&gt;0)
          BEGIN
          IF(LEN(@where)&gt;0)
          SET @where = @where + ' AND'
          set @where= @where+' (CONVERT(DATE,OccurencyDate)&lt;=''' + @OccurencyEndDate+ ''')';
          END

          IF(len(@PaymentStartMoney)&gt;0)
          BEGIN
          IF(LEN(@where)&gt;0)
          SET @where = @where + ' AND'
          set @where= @where+' (PaymentMoney&gt;=''' + @PaymentStartMoney+''')';
          END

          IF(len(@PaymentEndMoney)&gt;0)
          BEGIN
          IF(LEN(@where)&gt;0)
          SET @where = @where + ' AND'
          set @where= @where+' (PaymentMoney&lt;=''' + @PaymentEndMoney+ ''')';
          END

          IF(LEN(@where)&gt;0)
          BEGIN
          SET @where = @where + ' AND'
          END
          set @where= @where+' (IsActive=1)';

          IF(LEN(@where)&gt;0)
          BEGIN
          SET @where = @where + ' AND'
          END
          set @where= @where+' ('+@Status+')';

          SET @sql='SELECT COUNT(*)
          FROM [acc_Receivables]';

          IF(LEN(@where)&gt;0)
          BEGIN
          SET @sql=@sql+' WHERE' + @where;
          END
          execute(@sql);
        </Sql>
        <Sql Name="QueryPage" ConnectionName="Auth" Description="分页查询">
          DECLARE @sql varchar(max);
          DECLARE @where varchar(2000);
          SET @where='';


          IF(LEN(@where)&gt;0)
          BEGIN
          SET @where = @where + ' AND'
          END
          set @where= @where+' (a.CompanyID like ''%' + @CompanyID+ '%'')';

          IF(len(@BankName)&gt;0)
          BEGIN
          IF(LEN(@where)&gt;0)
          SET @where = @where + ' AND'
          set @where= @where+' (' + @BankName+ ')';
          END


          IF(len(@BankAccount)&gt;0)
          BEGIN
          IF(LEN(@where)&gt;0)
          SET @where = @where + ' AND'
          set @where= @where+' (' + @BankAccount+ ')';
          END


          IF(len(@OccurencyStartDate)&gt;0)
          BEGIN
          IF(LEN(@where)&gt;0)
          SET @where = @where + ' AND'
          set @where= @where+' (CONVERT(DATE,OccurencyDate)&gt;=''' +@OccurencyStartDate +''')';
          END

          IF(len(@OccurencyEndDate)&gt;0)
          BEGIN
          IF(LEN(@where)&gt;0)
          SET @where = @where + ' AND'
          set @where= @where+' (CONVERT(DATE,OccurencyDate)&lt;=''' + @OccurencyEndDate+ ''')';
          END

          IF(len(@PaymentStartMoney)&gt;0)
          BEGIN
          IF(LEN(@where)&gt;0)
          SET @where = @where + ' AND'
          set @where= @where+' (PaymentMoney&gt;=''' + @PaymentStartMoney+ ''')';
          END

          IF(len(@PaymentEndMoney)&gt;0)
          BEGIN
          IF(LEN(@where)&gt;0)
          SET @where = @where + ' AND'
          set @where= @where+' (PaymentMoney&lt;=''' + @PaymentEndMoney+ ''')';
          END

          IF(LEN(@where)&gt;0)
          BEGIN
          SET @where = @where + ' AND'
          END
          set @where= @where+' (a.IsActive=1)';

          IF(LEN(@where)&gt;0)
          BEGIN
          SET @where = @where + ' AND'
          END
          set @where= @where+' ('+@Status+')';

          SET @sql='SELECT a.RecNum,b.Name,a.OccurencyDate,a.BankName,a.BankAccount,a.PaymentName,a.PaymentMoney,a.Status,a.Remark,a.AutoKey
          FROM [acc_Receivables] a  join [hr_Company] b on a.CompanyID=b.CompanyID';

          IF(LEN(@where)&gt;0)
          BEGIN
          SET @sql=@sql+' WHERE' + @where;
          END

          IF(LEN(ISNULL(@OrderBy,''))=0)
          BEGIN
          SET @sql=@sql+' ORDER BY RecNum';
          END
          ELSE
          BEGIN
          SET @sql=@sql+' ORDER BY ' + @OrderBy;
          END

          SET @sql = @sql + '
          OFFSET ('+ CAST((@Page - 1) * @Rows AS varchar(10)) +') ROWS
          FETCH NEXT ' + CAST(@Rows AS varchar(10)) +' ROWS ONLY';

          execute(@sql);
        </Sql>
        <Sql Name="GetDetail" ConnectionName="Auth" Description="查询明细">
          SELECT a.[RecNum],a.[OccurencyDate],b.[Name],a.[BankName],a.[BankAccount],a.[PaymentName],a.[PaymentMoney],a.[Remark],a.[Status],a.[IsActive], a.CompanyID as ID
          FROM [acc_Receivables] a  join [hr_Company] b on a.CompanyID=b.CompanyID
          WHERE a.[AutoKey]=@AutoKey
        </Sql>
        <Sql Name="Add" ConnectionName="Auth" Description="新增">
          declare @RecNum1 varchar(100)

          Set @RecNum1=substring(@RecNum,1,1)+replace(CONVERT(varchar(20),GETDATE(), 23),'-','')+replace(CONVERT(varchar(20),GETDATE(), 24),':','')+substring(@RecNum,2,5)

          INSERT INTO [acc_Receivables]
          ([RecNum],[OccurencyDate],[CompanyID],[BankName],[BankAccount],[PaymentName],[PaymentMoney],[Remark],[Status],[IsActive],[CreatedUser],[CreatedTime],[ModifiedUser],[ModifiedTime])
          VALUES(@RecNum1,@OccurencyDate,@CompanyID,@BankName,@BankAccount,@PaymentName,@PaymentMoney,@Remark,@Status,@IsActive,@CreatedUser,@CreatedTime,@ModifiedUser,@ModifiedTime);
          SELECT [RecNum],[OccurencyDate],[CompanyID],[BankName],[BankAccount],[PaymentName],[PaymentMoney],[Remark],[Status],[IsActive]
          FROM [acc_Receivables]
          WHERE [AutoKey]=scope_identity()
        </Sql>
        <Sql Name="GetEdit" ConnectionName="Auth" Description="查询编辑">
          SELECT a.[RecNum],a.[OccurencyDate],b.[Name],a.[BankName],a.[BankAccount],a.[PaymentName],a.[PaymentMoney],a.[Remark],a.[Status],a.[IsActive], a.CompanyID as ID,c.ReceivableType,c.CustomerID,c.ReceivabletMoney,c.Remark as bz,c.AutoKey as akey
          FROM [acc_Receivables] a  join [hr_Company] b on a.CompanyID=b.CompanyID left join acc_ReceivablesConfirmation c on a.RecNum=c.RecNum
          WHERE a.[AutoKey]=@AutoKey
        </Sql>
        <Sql Name="Update" ConnectionName="Auth" Description="更新">
          UPDATE [acc_Receivables]
          SET  [RecNum]=@RecNum,[OccurencyDate]=@OccurencyDate,[CompanyID]=@CompanyID,[BankName]=@BankName,[BankAccount]=@BankAccount,[PaymentName]=@PaymentName,[PaymentMoney]=@PaymentMoney,[Remark]=@Remark,[Status]=@Status,[IsActive]=@IsActive,[ModifiedUser]=@ModifiedUser,[ModifiedTime]=@ModifiedTime WHERE [RecNum]=@RecNum;
          SELECT [RecNum],[OccurencyDate],[CompanyID],[BankName],[BankAccount],[PaymentName],[PaymentMoney],[Remark],[Status],[IsActive]
          FROM [acc_Receivables]
          WHERE [RecNum]=@RecNum
        </Sql>
        <Sql Name="Delete" ConnectionName="Auth" Description="删除">
          DECLARE @sql varchar(max);
          BEGIN TRY
          IF(CHARINDEX(',',@Keys,0)&lt;=0)
          BEGIN
          UPDATE [acc_Receivables] SET IsActive=0
          WHERE [AutoKey]=@Keys;
          END
          ELSE
          BEGIN
          SET @sql= 'UPDATE [acc_Receivables] SET IsActive=0 WHERE [AutoKey] in (''' + REPLACE(@Keys,',',''',''') + ''')';
          EXEC(@sql);
          END
          END TRY
          BEGIN CATCH
          DECLARE @error varchar(2000);
          SET @error = ERROR_MESSAGE();
          RAISERROR(@error ,11,1);
          END CATCH
        </Sql>
        <Sql Name="ExportQuery" ConnectionName="Auth" Description="导出EX查询">
          DECLARE @sql varchar(max);
          DECLARE @where varchar(2000);
          SET @where='';
          IF(len(@BankName)&gt;0)
          BEGIN
          IF(LEN(@where)&gt;0)
          SET @where = @where + ' AND'
          set @where= @where+' (' + @BankName+ ')';
          END

          IF(len(@CompanyID)&gt;0)
          BEGIN
          IF(LEN(@where)&gt;0)
          SET @where = @where + ' AND'
          set @where= @where+' (' + @CompanyID+ ')';
          END


          IF(len(@BankAccount)&gt;0)
          BEGIN
          IF(LEN(@where)&gt;0)
          SET @where = @where + ' AND'
          set @where= @where+' (' + @BankAccount+ ')';
          END

          IF(len(@OccurencyStartDate)&gt;0)
          BEGIN
          IF(LEN(@where)&gt;0)
          SET @where = @where + ' AND'
          set @where= @where+' (CONVERT(DATE,OccurencyDate)&gt;=CONVERT(DATE,''' +@OccurencyStartDate +'''))';
          END

          IF(len(@OccurencyEndDate)&gt;0)
          BEGIN
          IF(LEN(@where)&gt;0)
          SET @where = @where + ' AND'
          set @where= @where+' (CONVERT(DATE,OccurencyDate)&lt;=''' + @OccurencyEndDate+ ''')';
          END

          IF(len(@PaymentStartMoney)&gt;0)
          BEGIN
          IF(LEN(@where)&gt;0)
          SET @where = @where + ' AND'
          set @where= @where+' (PaymentMoney&gt;=''' + @PaymentStartMoney+''')';
          END

          IF(len(@PaymentEndMoney)&gt;0)
          BEGIN
          IF(LEN(@where)&gt;0)
          SET @where = @where + ' AND'
          set @where= @where+' (PaymentMoney&lt;=''' + @PaymentEndMoney+ ''')';
          END

          IF(LEN(@where)&gt;0)
          BEGIN
          SET @where = @where + ' AND'
          END
          set @where= @where+' (a.IsActive=1)';

          IF(LEN(@where)&gt;0)
          BEGIN
          SET @where = @where + ' AND'
          END
          set @where= @where+' (a.Status=0)';

          SET @sql='SELECT a.RecNum,b.Name,a.OccurencyDate,a.BankName,a.BankAccount,a.PaymentName,a.PaymentMoney,a.Status,a.Remark
          FROM [acc_Receivables]  a  join [hr_Company] b on a.CompanyID=b.CompanyID';

          IF(LEN(@where)&gt;0)
          BEGIN
          SET @sql=@sql+' WHERE' + @where;
          END
          execute(@sql);
        </Sql>
        <Sql />
        <SqlTest SqlName="QueryPage">
          <Parameter Key="CompanyID" Value="C00005" />
          <Parameter Key="BankName" />
          <Parameter Key="BankAccount" />
          <Parameter Key="OccurencyStartDate" />
          <Parameter Key="OccurencyEndDate" />
          <Parameter Key="PaymentStartMoney" />
          <Parameter Key="PaymentEndMoney" />
        </SqlTest>
      </Table>
      <Table Name="acc_ReceivablesConfirmation" ConnectionName="Auth" TableName="acc_Receivables_Customer">
        <Sql Name="GetConfirmation" ConnectionName="Auth" Description="获取确认信息">
          SELECT b.[CustomerName],b.[CustomerID] ,[ReceivabletMoney] ,a.[Remark],a.[AutoKey] FROM [acc_ReceivablesConfirmation] a join bi_Customer b on a.CustomerID=b.CustomerID   WHERE RecNum= @RecNum
        </Sql>
        <Sql Name="UpdateConfirmation" ConnectionName="Auth" Description="更新收款确认">
          if(@DeleteCheck='on')
          begin
          DELETE FROM [acc_ReceivablesConfirmation] WHERE AutoKey=@AutoKey
          raiserror('删除成功！',16,1) with nowait
          end
          else
          begin
          if(len(@AutoKey)&gt;0)
          begin
          if exists(select * from [acc_ReceivablesConfirmation] where [RecNum]=@RecNum and [CustomerID]=@CustomerID and [AutoKey] != @AutoKey)
          begin
          RAISERROR ('已经存在相同信息，无法保存！',15, 1) WITH NOWAIT
          end
          else

          begin
          UPDATE [acc_ReceivablesConfirmation] SET [CustomerID]=@CustomerID,[ReceivabletMoney]=@ReceivabletMoney,[Remark]=@Remark WHERE [AutoKey]=@AutoKey;
          if(@AutoKey1='A')
          begin
          update [acc_Receivables] set Status=1 where RecNum=@RecNum;
          end
          raiserror('更新成功！',16,1) with nowait
          end
          end
          else
          begin
          if exists(select * from [acc_ReceivablesConfirmation] where [RecNum]=@RecNum and [CustomerID]=@CustomerID  )
          begin
          RAISERROR ('已经存在相同信息，无法保存！',15, 1) WITH NOWAIT
          end
          else


          begin
          if(len(@ReceivableType)=0)
          set @ReceivableType='业务收款'
          INSERT INTO [acc_ReceivablesConfirmation]
          ([RecCNum],[RecNum],[ConfirmDate],[CompanyID],[ReceivableType],[CustomerID],[ReceivabletMoney],[Remark],[IsActive] ,[CreatedUser],[CreatedTime] ,[ModifiedUser],[ModifiedTime])
          VALUES(@RecCNum,@RecNum,@ConfirmDate,@CompanyID,@ReceivableType,@CustomerID,@ReceivabletMoney,@Remark,@IsActive ,@CreatedUser,@CreatedTime ,@ModifiedUser,@ModifiedTime);
          if(@AutoKey1='A')
          begin
          update [acc_Receivables] set Status=1 where RecNum=@RecNum;
          end
          raiserror('新增成功！',16,1) with nowait


          end
          end
          end
        </Sql>
      </Table>
      <Table Name="bi_Payment" ConnectionName="Auth" TableName="bi_Payment">
        <Sql Name="QueryCount" ConnectionName="Auth" Description="检索查询总数">
          DECLARE @sql varchar(max);
          DECLARE @where varchar(2000);
          SET @where='';

          IF(len(@PaymentName)&gt;0)
          BEGIN
          IF(LEN(@where)&gt;0)
          SET @where = @where + ' AND'
          set @where= @where+' (PaymentName =' + @PaymentName + ')';
          END

          IF(len(@Type)&gt;0)
          BEGIN
          IF(LEN(@where)&gt;0)
          SET @where = @where + ' AND'
          set @where= @where+' (Type=' + @Type+ ')';
          END


          IF(len(@ParentID)&gt;0)
          BEGIN
          IF(LEN(@where)&gt;0)
          SET @where = @where + ' AND'
          set @where= @where+' (ParentID =' + @ParentID + ')';
          END



          IF(len(@IsActive)&gt;0)
          BEGIN
          IF(LEN(@where)&gt;0)
          SET @where = @where + ' AND'
          set @where= @where+' (IsActive =' + @IsActive + ')';
          END

          SET @sql='SELECT COUNT(*)
          FROM [bi_Payment]';

          IF(LEN(@where)&gt;0)
          BEGIN
          SET @sql=@sql+' WHERE' + @where;
          END
          execute(@sql);
        </Sql>
        <Sql Name="QueryPage" ConnectionName="Auth" Description="检索分页查询">
          DECLARE @sql varchar(max);
          DECLARE @where varchar(2000);
          SET @where='';

          IF(len(@PaymentName)&gt;0)
          BEGIN
          IF(LEN(@where)&gt;0)
          SET @where = @where + ' AND'
          set @where= @where+' (a.PaymentName =' + @PaymentName + ')';
          END

          IF(len(@Type)&gt;0)
          BEGIN
          IF(LEN(@where)&gt;0)
          SET @where = @where + ' AND'
          set @where= @where+' (a.Type=' + @Type+ ')';
          END

          IF(len(@ParentID)&gt;0)
          BEGIN
          IF(LEN(@where)&gt;0)
          SET @where = @where + ' AND'
          set @where= @where+' (a.ParentID =' + @ParentID + ')';
          END


          IF(len(@IsActive)&gt;0)
          BEGIN
          IF(LEN(@where)&gt;0)
          SET @where = @where + ' AND'
          set @where= @where+' (a.IsActive =' + @IsActive + ')';
          END

          SET @sql='SELECT a.[PaymentID],a.[PaymentName],b.[PaymentName] as ParentName,a.[Remark]
          FROM [bi_Payment] a left join  [bi_Payment] b on a.ParentID=b.PaymentID  ';

          IF(LEN(@where)&gt;0)
          BEGIN
          SET @sql=@sql+' WHERE' + @where;
          END

          IF(LEN(ISNULL(@OrderBy,''))=0)
          BEGIN
          SET @sql=@sql+' ORDER BY a.SortID ';
          END
          ELSE
          BEGIN
          SET @sql=@sql+' ORDER BY ' + @OrderBy;
          END

          SET @sql = @sql + '
          OFFSET ('+ CAST((@Page - 1) * @Rows AS varchar(10)) +') ROWS
          FETCH NEXT ' + CAST(@Rows AS varchar(10)) +' ROWS ONLY';

          execute(@sql);
        </Sql>
        <Sql Name="GetDetail" ConnectionName="Auth" Description="查询明细">
          SELECT a.[PaymentID],a.[PaymentName],b.[PaymentName] as ParentName,a.[SortID],a.[Remark]
          FROM [bi_Payment] a left join  [bi_Payment] b on a.ParentID=b.PaymentID
          WHERE a.[PaymentID]=@PaymentID
        </Sql>
        <Sql Name="Add" ConnectionName="Auth" Description="新增">
          INSERT INTO [bi_Payment]
          ([PaymentID],[PaymentName],[Type],[ParentID],[SortID],[Remark],[IsActive],[CreatedUser],[CreatedTime],[ModifiedUser],[ModifiedTime])
          VALUES(@PaymentID,@PaymentName,@Type,@ParentID,@SortID,@Remark,@IsActive,@CreatedUser,@CreatedTime,@ModifiedUser,@ModifiedTime);
          SELECT [PaymentID],[PaymentName],[Type],[ParentID],[SortID],[Remark],[IsActive]
          FROM [bi_Payment]
          WHERE [AutoKey]=scope_identity()
        </Sql>
        <Sql Name="GetEdit" ConnectionName="Auth" Description="查询编辑">
          SELECT [PaymentID],[PaymentName],[Type],[ParentID],[SortID],[Remark],[IsActive]
          FROM [bi_Payment]
          WHERE [PaymentID]=@PaymentID
        </Sql>
        <Sql Name="Update" ConnectionName="Auth" Description="更新">
          UPDATE [bi_Payment]
          SET  [PaymentID]=@PaymentID,[PaymentName]=@PaymentName,[Type]=@Type,[ParentID]=@ParentID,[SortID]=@SortID,[Remark]=@Remark,[IsActive]=@IsActive,[ModifiedUser]=@ModifiedUser,[ModifiedTime]=@ModifiedTime WHERE [PaymentID]=@PaymentID;
          SELECT [PaymentID],[PaymentName],[Type],[ParentID],[SortID],[Remark],[IsActive]
          FROM [bi_Payment]
          WHERE [PaymentID]=@PaymentID
        </Sql>
        <Sql Name="Delete" ConnectionName="Auth" Description="删除">
          DECLARE @sql varchar(max);
          BEGIN TRY
          IF(CHARINDEX(',',@Keys,0)&lt;=0)
          BEGIN
          UPDATE [bi_Payment] SET IsActive=0
          WHERE [PaymentID]=@Keys;
          END
          ELSE
          BEGIN
          SET @sql= 'UPDATE [bi_Payment] SET IsActive=0 WHERE [PaymentID] in (''' + REPLACE(@Keys,',',''',''') + ''')';
          EXEC(@sql);
          END
          END TRY
          BEGIN CATCH
          DECLARE @error varchar(2000);
          SET @error = ERROR_MESSAGE();
          RAISERROR(@error ,11,1);
          END CATCH
        </Sql>
        <Sql Name="GetPayment" SharedName="GetPayment" ConnectionName="Auth" Description="获取所有支出类型">select PaymentID,PaymentName from bi_Payment where IsActive=1 and Type=1</Sql>
        <Sql Name="ExportQuery" ConnectionName="Auth" Description="导出EX查询">
          DECLARE @sql varchar(max);
          DECLARE @where varchar(2000);
          SET @where='';

          IF(len(@PaymentName)&gt;0)
          BEGIN
          IF(LEN(@where)&gt;0)
          SET @where = @where + ' AND'
          set @where= @where+' (a.PaymentName =' + @PaymentName + ')';
          END

          IF(len(@Type)&gt;0)
          BEGIN
          IF(LEN(@where)&gt;0)
          SET @where = @where + ' AND'
          set @where= @where+' (a.Type=' + @Type+ ')';
          END

          IF(len(@ParentID)&gt;0)
          BEGIN
          IF(LEN(@where)&gt;0)
          SET @where = @where + ' AND'
          set @where= @where+' (a.ParentID =' + @ParentID + ')';
          END


          IF(len(@IsActive)&gt;0)
          BEGIN
          IF(LEN(@where)&gt;0)
          SET @where = @where + ' AND'
          set @where= @where+' (a.IsActive =' + @IsActive + ')';
          END

          SET @sql='SELECT a.[PaymentID],a.[PaymentName],b.[PaymentName] as ParentName,a.[Remark]
          FROM [bi_Payment] a left join  [bi_Payment] b on a.ParentID=b.PaymentID  ';

          IF(LEN(@where)&gt;0)
          BEGIN
          SET @sql=@sql+' WHERE' + @where;
          END
          execute(@sql);
        </Sql>
        <Sql Name="GetLoanPayment" SharedName="GetLoanPayment" ConnectionName="Auth" Description="获取所有借款用途类型">select PaymentID,PaymentName from bi_Payment where IsActive=1 and Type=2</Sql>
        <Sql Name="GetParent" SharedName="GetParent" ConnectionName="Auth" Description="获得所有支出大类">select PaymentID,PaymentName from bi_Payment where IsActive=1 and Type=1 and ParentID=''</Sql>
        <Sql Name="GetPaymentbyParentID" SharedName="GetPaymentbyParentID" ConnectionName="Auth" Description="GetPaymentbyParentID">select PaymentID,PaymentName from bi_Payment where IsActive=1 and Type=1 and ParentID=@ParentID</Sql>
      </Table>
      <Table Name="acc_LoanForm" ConnectionName="Auth" TableName="acc_LoanForm">
        <Sql Name="QueryCountSelf" ConnectionName="Auth" Description="检索查询总数(自助单据)">
          DECLARE @sql varchar(max);
          DECLARE @where varchar(2000);
          SET @where=' ISNULL(dbo.fl_MappingForm.Table_Name,N''fl_LoanForm'') = N''fl_LoanForm''';

          IF @Approve &lt;&gt; '' AND @Approve &lt;&gt; '-2'
          BEGIN
          IF @Approve = '-1'
          BEGIN
          SET @where = @where + ' AND dbo.fl_MappingForm.Approved IS NULL'
          END
          ELSE
          BEGIN
          SET @where = @where + ' AND dbo.fl_MappingForm.Approved=' + @Approve
          END
          END

          IF(len(@DeptID)&gt;0)
          BEGIN
          IF(LEN(@where)&gt;0)
          SET @where = @where + ' AND'
          set @where= @where+' (DeptID=''' + @DeptID + ''')';
          END

          IF(len(@EmployeeID)&gt;0)
          BEGIN
          IF(LEN(@where)&gt;0)
          SET @where = @where + ' AND'
          set @where= @where+' (EmployeeID=''' + @EmployeeID + ''')';
          END

          IF(len(@LoanStartDate)&gt;0)
          BEGIN
          IF(LEN(@where)&gt;0)
          SET @where = @where + ' AND'
          set @where= @where+' (CONVERT(DATE,LoanDate )&gt;=CONVERT(DATE,''' +@LoanStartDate+'''))';
          END

          IF(len(@LoanEndDate)&gt;0)
          BEGIN
          IF(LEN(@where)&gt;0)
          SET @where = @where + ' AND'
          set @where= @where+' (CONVERT(DATE,LoanDate )&lt;=CONVERT(DATE,''' +@LoanEndDate+'''))';
          END

          IF(len(@LoanStartMoney)&gt;0)
          BEGIN
          IF(LEN(@where)&gt;0)
          SET @where = @where + ' AND'
          set @where= @where+' (LoanMoney&gt;=''' + @LoanStartMoney+ ''')';
          END

          IF(len(@LoanEndMoney)&gt;0)
          BEGIN
          IF(LEN(@where)&gt;0)
          SET @where = @where + ' AND'
          set @where= @where+' (LoanMoney&gt;=''' + @LoanEndMoney+ ''')';
          END

          IF(LEN(@where)&gt;0)
          BEGIN
          SET @where = @where + ' AND'
          END
          set @where= @where+' (IsActive=1)';

          SET @sql='SELECT COUNT(*)
          FROM [acc_LoanForm] LEFT JOIN
          dbo.fl_MappingForm ON acc_LoanForm.LoanNum = dbo.fl_MappingForm.FormNo';

          IF(LEN(@where)&gt;0)
          BEGIN
          SET @sql=@sql+' WHERE' + @where;
          END
          execute(@sql);
        </Sql>
        <Sql Name="QueryPageSelf" ConnectionName="Auth" Description="检索分页查询(自助单据)">
          DECLARE @sql varchar(max);
          DECLARE @where varchar(2000);
          SET @where=' ISNULL(dbo.fl_MappingForm.Table_Name,N''fl_LoanForm'') = N''fl_LoanForm''';

          IF @Approve &lt;&gt; '' AND @Approve &lt;&gt; '-2'
          BEGIN
          IF @Approve = '-1'
          BEGIN
          SET @where = @where + ' AND dbo.fl_MappingForm.Approved IS NULL'
          END
          ELSE
          BEGIN
          SET @where = @where + ' AND dbo.fl_MappingForm.Approved=' + @Approve
          END
          END

          IF(len(@DeptID)&gt;0)
          BEGIN
          IF(LEN(@where)&gt;0)
          SET @where = @where + ' AND'
          set @where= @where+' (a.DeptID=''' + @DeptID + ''')';
          END

          IF(len(@EmployeeID)&gt;0)
          BEGIN
          IF(LEN(@where)&gt;0)
          SET @where = @where + ' AND'
          set @where= @where+' (a.EmployeeID=''' + @EmployeeID + ''')';
          END

          IF(len(@LoanStartDate)&gt;0)
          BEGIN
          IF(LEN(@where)&gt;0)
          SET @where = @where + ' AND'
          set @where= @where+' (CONVERT(DATE,LoanDate )&gt;=CONVERT(DATE,''' +@LoanStartDate+'''))';
          END

          IF(len(@LoanEndDate)&gt;0)
          BEGIN
          IF(LEN(@where)&gt;0)
          SET @where = @where + ' AND'
          set @where= @where+' (CONVERT(DATE,LoanDate )&lt;=CONVERT(DATE,''' +@LoanEndDate+'''))';
          END

          IF(len(@LoanStartMoney)&gt;0)
          BEGIN
          IF(LEN(@where)&gt;0)
          SET @where = @where + ' AND'
          set @where= @where+' (LoanMoney&gt;=''' + @LoanStartMoney+ ''')';
          END


          IF(LEN(@where)&gt;0)
          BEGIN
          SET @where = @where + ' AND'
          END
          set @where= @where+' (a.IsActive=1)';

          SET @sql='SELECT a.[LoanNum],(b.[Name]+''-''+c.[Name]) as LoanName,CONVERT(VARCHAR,CONVERT(DATE,a.[LoanDate])) LoanDate,a.[LoanMoney],(a.[PaymentMethod]+''-''+a.[PaymentUnit]) as Method,a.[Remark],
          CASE dbo.fl_MappingForm.Approved
          WHEN 1 THEN ''申请中''
          WHEN 2 THEN ''已核准''
          WHEN 0 THEN ''已驳回''
          ELSE ''草稿''
          END Approved,ISNULL(dbo.fl_MappingForm.Approved,-1) ApproveStatus
          FROM [acc_LoanForm] a join hr_Department b on a.DeptID=b.DeptID join hr_Employee c on a.EmployeeID= c.EmployeeID LEFT JOIN
          dbo.fl_MappingForm ON a.LoanNum = dbo.fl_MappingForm.FormNo';

          IF(LEN(@where)&gt;0)
          BEGIN
          SET @sql=@sql+' WHERE' + @where;
          END

          IF(LEN(ISNULL(@OrderBy,''))=0)
          BEGIN
          SET @sql=@sql+' ORDER BY LoanNum';
          END
          ELSE
          BEGIN
          SET @sql=@sql+' ORDER BY ' + @OrderBy;
          END

          SET @sql = @sql + '
          OFFSET ('+ CAST((@Page - 1) * @Rows AS varchar(10)) +') ROWS
          FETCH NEXT ' + CAST(@Rows AS varchar(10)) +' ROWS ONLY';

          execute(@sql);
        </Sql>
        <Sql Name="QueryCount" ConnectionName="Auth" Description="检索查询总数">
          DECLARE @sql varchar(max);
          DECLARE @where varchar(2000);
          SET @where='';


          IF(len(@DeptID)&gt;0)
          BEGIN
          IF(LEN(@where)&gt;0)
          SET @where = @where + ' AND'
          set @where= @where+' (DeptID=''' + @DeptID + ''')';
          END

          IF(len(@EmployeeID)&gt;0)
          BEGIN
          IF(LEN(@where)&gt;0)
          SET @where = @where + ' AND'
          set @where= @where+' (EmployeeID=''' + @EmployeeID + ''')';
          END

          IF(len(@LoanStartDate)&gt;0)
          BEGIN
          IF(LEN(@where)&gt;0)
          SET @where = @where + ' AND'
          set @where= @where+' (CONVERT(DATE,LoanDate )&gt;=CONVERT(DATE,''' +@LoanStartDate+'''))';
          END

          IF(len(@LoanEndDate)&gt;0)
          BEGIN
          IF(LEN(@where)&gt;0)
          SET @where = @where + ' AND'
          set @where= @where+' (CONVERT(DATE,LoanDate )&lt;=CONVERT(DATE,''' +@LoanEndDate+'''))';
          END

          IF(len(@LoanStartMoney)&gt;0)
          BEGIN
          IF(LEN(@where)&gt;0)
          SET @where = @where + ' AND'
          set @where= @where+' (LoanMoney&gt;=''' + @LoanStartMoney+ ''')';
          END

          IF(len(@LoanEndMoney)&gt;0)
          BEGIN
          IF(LEN(@where)&gt;0)
          SET @where = @where + ' AND'
          set @where= @where+' (LoanMoney&gt;=''' + @LoanEndMoney+ ''')';
          END

          IF(LEN(@where)&gt;0)
          BEGIN
          SET @where = @where + ' AND'
          END
          set @where= @where+' (IsActive=1)';

          SET @sql='SELECT COUNT(*)
          FROM [acc_LoanForm]';

          IF(LEN(@where)&gt;0)
          BEGIN
          SET @sql=@sql+' WHERE' + @where;
          END
          execute(@sql);
        </Sql>
        <Sql Name="QueryPage" ConnectionName="Auth" Description="检索分页查询">
          DECLARE @sql varchar(max);
          DECLARE @where varchar(2000);
          SET @where='';

          IF(len(@DeptID)&gt;0)
          BEGIN
          IF(LEN(@where)&gt;0)
          SET @where = @where + ' AND'
          set @where= @where+' (a.DeptID=''' + @DeptID + ''')';
          END

          IF(len(@EmployeeID)&gt;0)
          BEGIN
          IF(LEN(@where)&gt;0)
          SET @where = @where + ' AND'
          set @where= @where+' (a.EmployeeID=''' + @EmployeeID + ''')';
          END

          IF(len(@LoanStartDate)&gt;0)
          BEGIN
          IF(LEN(@where)&gt;0)
          SET @where = @where + ' AND'
          set @where= @where+' (CONVERT(DATE,LoanDate )&gt;=CONVERT(DATE,''' +@LoanStartDate+'''))';
          END

          IF(len(@LoanEndDate)&gt;0)
          BEGIN
          IF(LEN(@where)&gt;0)
          SET @where = @where + ' AND'
          set @where= @where+' (CONVERT(DATE,LoanDate )&lt;=CONVERT(DATE,''' +@LoanEndDate+'''))';
          END

          IF(len(@LoanStartMoney)&gt;0)
          BEGIN
          IF(LEN(@where)&gt;0)
          SET @where = @where + ' AND'
          set @where= @where+' (LoanMoney&gt;=''' + @LoanStartMoney+ ''')';
          END


          IF(LEN(@where)&gt;0)
          BEGIN
          SET @where = @where + ' AND'
          set @where= @where+' (a.IsActive=''' + @IsActive + ''')';
          END
          set @where= @where+' (a.IsActive=1)';

          SET @sql='SELECT a.[LoanNum],(b.[Name]+''-''+c.[Name]) as LoanName,CONVERT(VARCHAR,CONVERT(DATE,a.[LoanDate])) LoanDate,a.[LoanMoney],(a.[PaymentMethod]+''-''+a.[PaymentUnit]) as Method,a.[Remark]
          FROM [acc_LoanForm] a join hr_Department b on a.DeptID=b.DeptID join hr_Employee c on a.EmployeeID= c.EmployeeID';

          IF(LEN(@where)&gt;0)
          BEGIN
          SET @sql=@sql+' WHERE' + @where;
          END

          IF(LEN(ISNULL(@OrderBy,''))=0)
          BEGIN
          SET @sql=@sql+' ORDER BY LoanNum';
          END
          ELSE
          BEGIN
          SET @sql=@sql+' ORDER BY ' + @OrderBy;
          END

          SET @sql = @sql + '
          OFFSET ('+ CAST((@Page - 1) * @Rows AS varchar(10)) +') ROWS
          FETCH NEXT ' + CAST(@Rows AS varchar(10)) +' ROWS ONLY';

          execute(@sql);
        </Sql>
        <Sql Name="GetDetail" ConnectionName="Auth" Description="查询明细">SELECT a.[LoanNum],c.[Name] as DeptName,d.[Name] as EmployeeName,[LoanDate],[LoanMoney],e.[PaymentName],[PaymentDate],[PaymentMethod],[PaymentUnit],[PaymentAmount],a.[Remark],a.[IsActive] FROM [acc_LoanForm] a left join [acc_RepaymentForm] b on a.LoanNum=b.LoanNum join hr_Department c on a.DeptID=c.DeptID join hr_Employee d on a.EmployeeID=d.EmployeeID join bi_Payment e on e.PaymentID=a.PaymentID
          WHERE a.[LoanNum]=@LoanNum
        </Sql>
        <Sql Name="Add" ConnectionName="Auth" Description="新增">
          INSERT INTO [acc_LoanForm]
          ([LoanNum],[DeptID],[EmployeeID],[LoanDate],[LoanMoney],[PaymentID],[PaymentDate],[PaymentMethod],[PaymentUnit],[PaymentAmount],[Status],[Remark],[IsActive],[CreatedUser],[CreatedTime],[ModifiedUser],[ModifiedTime])
          VALUES(@LoanNum,@DeptID,@EmployeeID,@LoanDate,@LoanMoney,@PaymentID,@PaymentDate,@PaymentMethod,@PaymentUnit,@PaymentAmount,@Status,@Remark,@IsActive,@CreatedUser,@CreatedTime,@ModifiedUser,@ModifiedTime);
          SELECT [LoanNum],[DeptID],[EmployeeID],[LoanDate],[LoanMoney],[PaymentID],[PaymentDate],[PaymentMethod],[PaymentUnit],[PaymentAmount],@Status,[Remark],[IsActive]
          FROM [acc_LoanForm]
          WHERE [AutoKey]=scope_identity()
        </Sql>
        <Sql Name="GetEdit" ConnectionName="Auth" Description="查询编辑">
          SELECT [acc_LoanForm].[LoanNum],[acc_LoanForm].[DeptID],[acc_LoanForm].[EmployeeID],
          CONVERT(VARCHAR,CONVERT(DATE,[acc_LoanForm].[LoanDate])) LoanDate,[acc_LoanForm].[LoanMoney],[acc_LoanForm].[PaymentID],
          CONVERT(VARCHAR,CONVERT(DATE,[acc_LoanForm].[PaymentDate])) PaymentDate,[acc_LoanForm].[PaymentMethod],[acc_LoanForm].[PaymentUnit],
          [acc_LoanForm].[PaymentAmount],[acc_LoanForm].[Remark],[acc_LoanForm].[IsActive], CONVERT(VARCHAR,CONVERT(DATE,[acc_LoanForm].CreatedTime)) CreatedTime,
          hr_Company.Name + '-' + hr_Department.Name Dept, hr_Employee.Name EmployeeName
          FROM [acc_LoanForm] INNER JOIN hr_Employee ON acc_LoanForm.EmployeeID=hr_Employee.EmployeeID
          INNER JOIN hr_Department ON acc_LoanForm.DeptID=hr_Department.DeptID
          INNER JOIN hr_Company ON hr_Department.CompanyID=hr_Company.CompanyID
          WHERE [LoanNum]=@LoanNum
        </Sql>
        <Sql Name="Update" ConnectionName="Auth" Description="更新">
          UPDATE [acc_LoanForm]
          SET  [LoanNum]=@LoanNum,[DeptID]=@DeptID,[EmployeeID]=@EmployeeID,[LoanDate]=@LoanDate,[LoanMoney]=@LoanMoney,[PaymentID]=@PaymentID,
          [PaymentDate]=@PaymentDate,[PaymentMethod]=@PaymentMethod,[PaymentUnit]=@PaymentUnit,[PaymentAmount]=@PaymentAmount,[Remark]=@Remark,
          [IsActive]=@IsActive,[ModifiedUser]=@ModifiedUser,[ModifiedTime]=@ModifiedTime WHERE [LoanNum]=@LoanNum;
        </Sql>
        <Sql Name="Delete" ConnectionName="Auth" Description="删除">
          DECLARE @sql varchar(max);
          BEGIN TRY
          IF(CHARINDEX(',',@Keys,0)&lt;=0)
          BEGIN
          UPDATE [acc_LoanForm] SET IsActive=0
          WHERE [LoanNum]=@Keys;
          END
          ELSE
          BEGIN
          SET @sql= 'UPDATE [acc_LoanForm] SET IsActive=0 WHERE [LoanNum] in (''' + REPLACE(@Keys,',',''',''') + ''')';
          EXEC(@sql);
          END
          END TRY
          BEGIN CATCH
          DECLARE @error varchar(2000);
          SET @error = ERROR_MESSAGE();
          RAISERROR(@error ,11,1);
          END CATCH
        </Sql>
        <Sql Name="GetLoanListForReimbursement" ConnectionName="Auth" Description="填报销单时显示">
          SELECT [LoanDate],[LoanMoney] - ISNULL(SUM([acc_RePaymentForm].[RePaymentAmount]),0) [LoanMoney],[bi_Payment].[PaymentName],[PaymentMethod],[acc_LoanForm].[Remark]
          FROM [acc_LoanForm] INNER JOIN [bi_Payment] ON acc_LoanForm.PaymentID=bi_Payment.PaymentID
          LEFT JOIN [acc_RePaymentForm] ON [acc_LoanForm].LoanNum=[acc_RePaymentForm].LoanNum
          WHERE [acc_LoanForm].[EmployeeID]=@EmployeeID AND [acc_LoanForm].[IsActive]=1
          GROUP BY [LoanDate],[LoanMoney],[bi_Payment].[PaymentName],[PaymentMethod],[acc_LoanForm].[Remark]
          HAVING [LoanMoney] - ISNULL(SUM([acc_RePaymentForm].[RePaymentAmount]),0) &gt; 0
        </Sql>
        <Sql Name="GetLoanByEmployeeID" ConnectionName="Auth" Description="GetLoanByEmployeeID">SELECT a.AutoKey,[LoanNum],CONVERT(VARCHAR,CONVERT(DATE,[LoanDate])) LoanDate,[LoanMoney],([PaymentMethod]+'-'+[PaymentUnit]) as Method,a.[Remark],b.PaymentName FROM [acc_LoanForm] a join bi_Payment b on a.PaymentID=b.PaymentID where EmployeeID =@EmployeeID and a.Status=0</Sql>
      </Table>
      <Table Name="acc_RepaymentForm" ConnectionName="Auth" TableName="acc_RePaymentForm">
        <Sql Name="QueryCount" ConnectionName="Auth" Description="检索查询总数">
          DECLARE @sql varchar(max);
          DECLARE @where varchar(2000);
          SET @where='';
          IF(len(@RePaymentNum)&gt;0)
          BEGIN
          IF(LEN(@where)&gt;0)
          SET @where = @where + ' AND'
          set @where= @where+' (' + @RePaymentNum + ')';
          END

          IF(len(@LoanNum)&gt;0)
          BEGIN
          IF(LEN(@where)&gt;0)
          SET @where = @where + ' AND'
          set @where= @where+' (' + @LoanNum + ')';
          END

          IF(len(@DeptID)&gt;0)
          BEGIN
          IF(LEN(@where)&gt;0)
          SET @where = @where + ' AND'
          set @where= @where+' (' + @DeptID + ')';
          END

          IF(len(@EmployeeID)&gt;0)
          BEGIN
          IF(LEN(@where)&gt;0)
          SET @where = @where + ' AND'
          set @where= @where+' (' + @EmployeeID + ')';
          END

          IF(len(@RePaymentDate)&gt;0)
          BEGIN
          IF(LEN(@where)&gt;0)
          SET @where = @where + ' AND'
          set @where= @where+' (' + @RePaymentDate + ')';
          END

          IF(len(@RePaymentMethod)&gt;0)
          BEGIN
          IF(LEN(@where)&gt;0)
          SET @where = @where + ' AND'
          set @where= @where+' (' + @RePaymentMethod + ')';
          END

          IF(len(@RePaymentUnit)&gt;0)
          BEGIN
          IF(LEN(@where)&gt;0)
          SET @where = @where + ' AND'
          set @where= @where+' (' + @RePaymentUnit + ')';
          END

          IF(len(@RePaymentAmount)&gt;0)
          BEGIN
          IF(LEN(@where)&gt;0)
          SET @where = @where + ' AND'
          set @where= @where+' (' + @RePaymentAmount + ')';
          END

          IF(len(@Remark)&gt;0)
          BEGIN
          IF(LEN(@where)&gt;0)
          SET @where = @where + ' AND'
          set @where= @where+' (' + @Remark + ')';
          END

          IF(len(@IsActive)&gt;0)
          BEGIN
          IF(LEN(@where)&gt;0)
          SET @where = @where + ' AND'
          set @where= @where+' (' + @IsActive + ')';
          END

          SET @sql='SELECT COUNT(*)
          FROM [acc_RepaymentForm]';

          IF(LEN(@where)&gt;0)
          BEGIN
          SET @sql=@sql+' WHERE' + @where;
          END
          execute(@sql);
        </Sql>
        <Sql Name="QueryPage" ConnectionName="Auth" Description="检索分页查询">
          DECLARE @sql varchar(max);
          DECLARE @where varchar(2000);
          SET @where='';
          IF(len(@RePaymentNum)&gt;0)
          BEGIN
          IF(LEN(@where)&gt;0)
          SET @where = @where + ' AND'
          set @where= @where+' (' + @RePaymentNum + ')';
          END

          IF(len(@LoanNum)&gt;0)
          BEGIN
          IF(LEN(@where)&gt;0)
          SET @where = @where + ' AND'
          set @where= @where+' (' + @LoanNum + ')';
          END

          IF(len(@DeptID)&gt;0)
          BEGIN
          IF(LEN(@where)&gt;0)
          SET @where = @where + ' AND'
          set @where= @where+' (' + @DeptID + ')';
          END

          IF(len(@EmployeeID)&gt;0)
          BEGIN
          IF(LEN(@where)&gt;0)
          SET @where = @where + ' AND'
          set @where= @where+' (' + @EmployeeID + ')';
          END

          IF(len(@RePaymentDate)&gt;0)
          BEGIN
          IF(LEN(@where)&gt;0)
          SET @where = @where + ' AND'
          set @where= @where+' (' + @RePaymentDate + ')';
          END

          IF(len(@RePaymentMethod)&gt;0)
          BEGIN
          IF(LEN(@where)&gt;0)
          SET @where = @where + ' AND'
          set @where= @where+' (' + @RePaymentMethod + ')';
          END

          IF(len(@RePaymentUnit)&gt;0)
          BEGIN
          IF(LEN(@where)&gt;0)
          SET @where = @where + ' AND'
          set @where= @where+' (' + @RePaymentUnit + ')';
          END

          IF(len(@RePaymentAmount)&gt;0)
          BEGIN
          IF(LEN(@where)&gt;0)
          SET @where = @where + ' AND'
          set @where= @where+' (' + @RePaymentAmount + ')';
          END

          IF(len(@Remark)&gt;0)
          BEGIN
          IF(LEN(@where)&gt;0)
          SET @where = @where + ' AND'
          set @where= @where+' (' + @Remark + ')';
          END

          IF(len(@IsActive)&gt;0)
          BEGIN
          IF(LEN(@where)&gt;0)
          SET @where = @where + ' AND'
          set @where= @where+' (' + @IsActive + ')';
          END

          SET @sql='SELECT [RePaymentNum],[LoanNum],[DeptID],[EmployeeID],[RePaymentDate],[RePaymentMethod],[RePaymentUnit],[RePaymentAmount],[Remark],[IsActive]
          FROM [acc_RepaymentForm]';

          IF(LEN(@where)&gt;0)
          BEGIN
          SET @sql=@sql+' WHERE' + @where;
          END

          IF(LEN(ISNULL(@OrderBy,''))=0)
          BEGIN
          SET @sql=@sql+' ORDER BY RePaymentNum';
          END
          ELSE
          BEGIN
          SET @sql=@sql+' ORDER BY ' + @OrderBy;
          END

          SET @sql = @sql + '
          OFFSET ('+ CAST((@Page - 1) * @Rows AS varchar(10)) +') ROWS
          FETCH NEXT ' + CAST(@Rows AS varchar(10)) +' ROWS ONLY';

          execute(@sql);
        </Sql>
        <Sql Name="GetDetail" ConnectionName="Auth" Description="查询明细">
          SELECT [RePaymentNum],[LoanNum],[DeptID],[EmployeeID],[RePaymentDate],[RePaymentMethod],[RePaymentUnit],[RePaymentAmount],[Remark],[IsActive]
          FROM [acc_RepaymentForm]
          WHERE [RePaymentNum]=@RePaymentNum
        </Sql>
        <Sql Name="Add" ConnectionName="Auth" Description="新增">
          INSERT INTO [acc_RePaymentForm]
          ([RePaymentNum],[LoanNum],[DeptID],[EmployeeID],[RePaymentDate],[RePaymentMethod],[RePaymentUnit],[RePaymentAmount],[Remark],[IsActive],[CreatedUser],[CreatedTime],[ModifiedUser],[ModifiedTime])
          VALUES(@RePaymentNum,@LoanNum,@DeptID,@EmployeeID,@RePaymentDate,@RePaymentMethod,@RePaymentUnit,@RePaymentAmount,@Remark,@IsActive,@CreatedUser,@CreatedTime,@ModifiedUser,@ModifiedTime);
          SELECT [RePaymentNum],[LoanNum],[DeptID],[EmployeeID],[RePaymentDate],[RePaymentMethod],[RePaymentUnit],[RePaymentAmount],[Remark],[IsActive]
          FROM [acc_RepaymentForm]
          WHERE [AutoKey]=scope_identity()
        </Sql>
        <Sql Name="Update" ConnectionName="Auth" Description="更新">
          UPDATE [acc_RePaymentForm]
          SET  [RePaymentNum]=@RePaymentNum,[LoanNum]=@LoanNum,[DeptID]=@DeptID,[EmployeeID]=@EmployeeID,[RePaymentDate]=@RePaymentDate,[RePaymentMethod]=@RePaymentMethod,[RePaymentUnit]=@RePaymentUnit,[RePaymentAmount]=@RePaymentAmount,[Remark]=@Remark,[IsActive]=@IsActive,[ModifiedUser]=@ModifiedUser,[ModifiedTime]=@ModifiedTime WHERE [RePaymentNum]=@RePaymentNum;
          SELECT [RePaymentNum],[LoanNum],[DeptID],[EmployeeID],[RePaymentDate],[RePaymentMethod],[RePaymentUnit],[RePaymentAmount],[Remark],[IsActive]
          FROM [acc_RepaymentForm]
          WHERE [RePaymentNum]=@RePaymentNum
        </Sql>
        <Sql Name="Delete" ConnectionName="Auth" Description="删除">
          DECLARE @sql varchar(max);
          BEGIN TRY
          IF(CHARINDEX(',',@Keys,0)&lt;=0)
          BEGIN
          UPDATE [acc_RePaymentForm] SET IsActive=0
          WHERE [RePaymentNum]=@Keys;
          END
          ELSE
          BEGIN
          SET @sql= 'UPDATE [acc_RePaymentForm] SET IsActive=0 WHERE [RePaymentNum] in (''' + REPLACE(@Keys,',',''',''') + ''')';
          EXEC(@sql);
          END
          END TRY
          BEGIN CATCH
          DECLARE @error varchar(2000);
          SET @error = ERROR_MESSAGE();
          RAISERROR(@error ,11,1);
          END CATCH
        </Sql>
        <Sql Name="GetEdit" ConnectionName="Auth" Description="GetEdit">select [RePaymentNum],[RePaymentDate],[RePaymentMethod],[RePaymentAmount],[Remark],[AutoKey] from [acc_RepaymentForm] where LoanNum=@LoanNum</Sql>
        <Sql Name="UpdateRE" ConnectionName="Auth" Description="UpdateRE">
          if(@DeleteCheck='on')
          begin
          DELETE FROM [acc_RePaymentForm] WHERE AutoKey=@AutoKey
          raiserror('删除成功！',16,1) with nowait
          end
          else
          begin
          if(len(@AutoKey)&gt;0)

          begin
          UPDATE [acc_RePaymentForm] SET [RePaymentDate]=@RePaymentDate,[RePaymentMethod]=@RePaymentMethod,[RePaymentAmount]=@RePaymentAmount,[Remark]=@Remark WHERE [AutoKey]=@AutoKey;
          raiserror('更新成功！',16,1) with nowait

          end
          else
          begin

          INSERT INTO [acc_RePaymentForm]
          ([RePaymentNum],[LoanNum],[RePaymentDate],[RePaymentMethod],[RePaymentAmount],[Remark],[IsActive] ,[CreatedUser],[CreatedTime] ,[ModifiedUser],[ModifiedTime])
          VALUES(@RePaymentNum,@LoanNum,@RePaymentDate,@RePaymentMethod,@RePaymentAmount,@Remark,@IsActive ,@CreatedUser,@CreatedTime ,@ModifiedUser,@ModifiedTime);
          raiserror('新增成功！',16,1) with nowait

          end
          end
        </Sql>
      </Table>
      <Table Name="acc_ReiFundRule" ConnectionName="Auth" TableName="acc_ReiFundRule">
        <Sql Name="QueryCount" ConnectionName="Auth" Description="检索查询总数">
          DECLARE @sql varchar(max);
          DECLARE @where varchar(2000);
          SET @where='';
          IF(len(@RID)&gt;0)
          BEGIN
          IF(LEN(@where)&gt;0)
          SET @where = @where + ' AND'
          set @where= @where+' (' + @RID + ')';
          END

          IF(len(@RName)&gt;0)
          BEGIN
          IF(LEN(@where)&gt;0)
          SET @where = @where + ' AND'
          set @where= @where+' (' + @RName + ')';
          END

          IF(len(@CompanyID)&gt;0)
          BEGIN
          IF(LEN(@where)&gt;0)
          SET @where = @where + ' AND'
          set @where= @where+' (' + @CompanyID + ')';
          END

          IF(len(@IsSingle)&gt;0)
          BEGIN
          IF(LEN(@where)&gt;0)
          SET @where = @where + ' AND'
          set @where= @where+' (' + @IsSingle + ')';
          END


          IF(len(@Remark)&gt;0)
          BEGIN
          IF(LEN(@where)&gt;0)
          SET @where = @where + ' AND'
          set @where= @where+' (' + @Remark + ')';
          END

          IF(len(@IsActive)&gt;0)
          BEGIN
          IF(LEN(@where)&gt;0)
          SET @where = @where + ' AND'
          set @where= @where+' (' + @IsActive + ')';
          END

          SET @sql='SELECT COUNT(*)
          FROM [acc_ReiFundRule]';

          IF(LEN(@where)&gt;0)
          BEGIN
          SET @sql=@sql+' WHERE' + @where;
          END
          execute(@sql);
        </Sql>
        <Sql Name="QueryPage" ConnectionName="Auth" Description="检索分页查询">
          DECLARE @sql varchar(max);
          DECLARE @where varchar(2000);
          SET @where='';
          IF(len(@RID)&gt;0)
          BEGIN
          IF(LEN(@where)&gt;0)
          SET @where = @where + ' AND'
          set @where= @where+' (' + @RID + ')';
          END

          IF(len(@RName)&gt;0)
          BEGIN
          IF(LEN(@where)&gt;0)
          SET @where = @where + ' AND'
          set @where= @where+' (' + @RName + ')';
          END

          IF(len(@CompanyID)&gt;0)
          BEGIN
          IF(LEN(@where)&gt;0)
          SET @where = @where + ' AND'
          set @where= @where+' (' + @CompanyID + ')';
          END

          IF(len(@IsSingle)&gt;0)
          BEGIN
          IF(LEN(@where)&gt;0)
          SET @where = @where + ' AND'
          set @where= @where+' (' + @IsSingle + ')';
          END



          IF(len(@Remark)&gt;0)
          BEGIN
          IF(LEN(@where)&gt;0)
          SET @where = @where + ' AND'
          set @where= @where+' (' + @Remark + ')';
          END

          IF(len(@IsActive)&gt;0)
          BEGIN
          IF(LEN(@where)&gt;0)
          SET @where = @where + ' AND'
          set @where= @where+' (' + @IsActive + ')';
          END

          SET @sql='SELECT [RID],[RName],[CompanyID],[IsSingle],[DeductionLimit],[Remark],[IsActive]
          FROM [acc_ReiFundRule]';

          IF(LEN(@where)&gt;0)
          BEGIN
          SET @sql=@sql+' WHERE' + @where;
          END

          IF(LEN(ISNULL(@OrderBy,''))=0)
          BEGIN
          SET @sql=@sql+' ORDER BY RID';
          END
          ELSE
          BEGIN
          SET @sql=@sql+' ORDER BY ' + @OrderBy;
          END

          SET @sql = @sql + '
          OFFSET ('+ CAST((@Page - 1) * @Rows AS varchar(10)) +') ROWS
          FETCH NEXT ' + CAST(@Rows AS varchar(10)) +' ROWS ONLY';

          execute(@sql);
        </Sql>
        <Sql Name="GetDetail" ConnectionName="Auth" Description="查询明细">
          SELECT [RID],[RName],[CompanyID],[IsSingle],[DeductionLimit],[Remark],[IsActive]
          FROM [acc_ReiFundRule]
          WHERE [RID]=@RID
        </Sql>
        <Sql Name="Add" ConnectionName="Auth" Description="新增">
          IF(len(@DeductionLimit)=0)
          BEGIN
          set @DeductionLimit=0;
          END

          INSERT INTO [acc_ReiFundRule]
          ([RID],[RName],[CompanyID],[IsSingle],[DeductionLimit],[Remark],[IsActive],[CreatedUser],[CreatedTime],[ModifiedUser],[ModifiedTime])
          VALUES(@RID,@RName,@CompanyID,@IsSingle,@DeductionLimit,@Remark,@IsActive,@CreatedUser,@CreatedTime,@ModifiedUser,@ModifiedTime);
          SELECT [RID],[RName],[CompanyID],[IsSingle],[DeductionLimit],[Remark],[IsActive]
          FROM [acc_ReiFundRule]
          WHERE [AutoKey]=scope_identity()
        </Sql>
        <Sql Name="GetEdit" ConnectionName="Auth" Description="查询编辑">
          SELECT [RID],[RName],[CompanyID],[IsSingle],[DeductionLimit],[Remark],[IsActive]
          FROM [acc_ReiFundRule]
          WHERE [RID]=@RID
        </Sql>
        <Sql Name="Update" ConnectionName="Auth" Description="更新">
          UPDATE [acc_ReiFundRule]
          SET  [RID]=@RID,[RName]=@RName,[CompanyID]=@CompanyID,[IsSingle]=@IsSingle,[DeductionLimit]=@DeductionLimit,[Remark]=@Remark,[IsActive]=@IsActive,[ModifiedUser]=@ModifiedUser,[ModifiedTime]=@ModifiedTime WHERE [RID]=@RID;
          SELECT [RID],[RName],[CompanyID],[IsSingle],[DeductionLimit],[Remark],[IsActive]
          FROM [acc_ReiFundRule]
          WHERE [RID]=@RID
        </Sql>
        <Sql Name="Delete" ConnectionName="Auth" Description="删除">
          DECLARE @sql varchar(max);
          BEGIN TRY
          IF(CHARINDEX(',',@Keys,0)&lt;=0)
          BEGIN
          UPDATE [acc_ReiFundRule] SET IsActive=0
          WHERE [RID]=@Keys;
          END
          ELSE
          BEGIN
          SET @sql= 'UPDATE [acc_ReiFundRule] SET IsActive=0 WHERE [RID] in (''' + REPLACE(@Keys,',',''',''') + ''')';
          EXEC(@sql);
          END
          END TRY
          BEGIN CATCH
          DECLARE @error varchar(2000);
          SET @error = ERROR_MESSAGE();
          RAISERROR(@error ,11,1);
          END CATCH
        </Sql>
      </Table>
      <Table Name="acc_ReiFundRuleDetail" ConnectionName="Auth" TableName="acc_ReiFundRuleDetail">
        <Sql Name="GetEidt" ConnectionName="Auth" Description="GetEidt">select b.[PaymentName] as PaymentName,c.[PaymentName] as ParentName,b.[PaymentID] as PaymentID,b.[ParentID] as ParentID,[Deduction],a.[Remark],a.[AutoKey] from [acc_ReiFundRuleDetail] a join bi_Payment b on a.PaymentID=b.PaymentID join bi_Payment c on b.ParentID=c.PaymentID where RID=@RID</Sql>
        <Sql Name="UpdateRR" ConnectionName="Auth" Description="UpdateRR">
          if(@DeleteCheck='on')
          begin
          DELETE FROM [acc_ReiFundRuleDetail] WHERE AutoKey=@AutoKey
          raiserror('删除成功！',16,1) with nowait
          end
          else
          begin
          if(len(@AutoKey)&gt;0)

          begin
          UPDATE [acc_ReiFundRuleDetail] SET [RID]=@RID,[PaymentID]=@PaymentID,[Deduction]=@Deduction WHERE [AutoKey]=@AutoKey;
          raiserror('更新成功！',16,1) with nowait

          end
          else
          begin

          declare @NextIndex int
          set @NextIndex=0;
          select @NextIndex = max(ItemNo) FROM [acc_ReiFundRuleDetail];

          INSERT INTO [acc_ReiFundRuleDetail]
          ([RID],[ItemNo],[PaymentID],[Deduction],[IsActive] ,[CreatedUser],[CreatedTime] ,[ModifiedUser],[ModifiedTime])
          VALUES(@RID,@NextIndex+1,@PaymentID,@Deduction,@IsActive ,@CreatedUser,@CreatedTime ,@ModifiedUser,@ModifiedTime);
          raiserror('新增成功！',16,1) with nowait

          end
          end
        </Sql>
      </Table>
      <Table Name="acc_Expenditure" ConnectionName="Auth" TableName="acc_Expenditure">
        <Sql Name="QueryCount" ConnectionName="Auth" Description="检索查询总数">
          DECLARE @sql varchar(max);
          DECLARE @where varchar(2000);
          SET @where='';

          IF(len(@ExpenditureStartDate)&gt;0)
          BEGIN
          IF(LEN(@where)&gt;0)
          SET @where = @where + ' AND'
          set @where= @where+' (CONVERT(DATE,ExpenditureDate)&gt;=''' +@ExpenditureStartDate+''')';
          END

          IF(len(@ExpenditureEndDate)&gt;0)
          BEGIN
          IF(LEN(@where)&gt;0)
          SET @where = @where + ' AND'
          set @where= @where+' (CONVERT(DATE,ExpenditureDate)&lt;=''' +@ExpenditureEndDate+''')';
          END

          IF(len(@CompanyID)&gt;0)
          BEGIN
          IF(LEN(@where)&gt;0)
          SET @where = @where + ' AND'
          set @where= @where+' (' + @CompanyID + ')';
          END

          IF(len(@ApplyEmployeeID)&gt;0)
          BEGIN
          IF(LEN(@where)&gt;0)
          SET @where = @where + ' AND'
          set @where= @where+' (' + @ApplyEmployeeID+ ')';
          END

          IF(len(@BankID)&gt;0)
          BEGIN
          IF(LEN(@where)&gt;0)
          SET @where = @where + ' AND'
          set @where= @where+' (' + @BankID + ')';
          END

          IF(len(@Status)&gt;0)
          BEGIN
          IF(LEN(@where)&gt;0)
          SET @where = @where + ' AND'
          set @where= @where+' (' + @Status+ ')';
          END

          IF(len(@Account)&gt;0)
          BEGIN
          IF(LEN(@where)&gt;0)
          SET @where = @where + ' AND'
          set @where= @where+' (' + @Account + ')';
          END



          IF(len(@ExpenditureStartMoney)&gt;0)
          BEGIN
          IF(LEN(@where)&gt;0)
          SET @where = @where + ' AND'
          set @where= @where+'( ExpenditureMoney&gt;=''' +@ExpenditureStartMoney+''')';
          END

          IF(len(@ExpenditureEndMoney)&gt;0)
          BEGIN
          IF(LEN(@where)&gt;0)
          SET @where = @where + ' AND'
          set @where= @where+' (ExpenditureMoney&lt;=''' +@ExpenditureEndMoney+''')';
          END

          IF(len(@IsActive)&gt;0)
          BEGIN
          IF(LEN(@where)&gt;0)
          SET @where = @where + ' AND'
          set @where= @where+' (' + @IsActive + ')';
          END

          SET @sql='SELECT COUNT(*)
          FROM [acc_Expenditure]';

          IF(LEN(@where)&gt;0)
          BEGIN
          SET @sql=@sql+' WHERE' + @where;
          END
          execute(@sql);
        </Sql>
        <Sql Name="QueryPage" ConnectionName="Auth" Description="检索分页查询">
          DECLARE @sql varchar(max);
          DECLARE @where varchar(2000);
          SET @where='';
          IF(len(@ExpenditureStartDate)&gt;0)
          BEGIN
          IF(LEN(@where)&gt;0)
          SET @where = @where + ' AND'
          set @where= @where+' (CONVERT(DATE,a.ExpenditureDate)&gt;=''' +@ExpenditureStartDate+''')';
          END

          IF(len(@ExpenditureEndDate)&gt;0)
          BEGIN
          IF(LEN(@where)&gt;0)
          SET @where = @where + ' AND'
          set @where= @where+' (CONVERT(DATE,a.ExpenditureDate)&lt;=''' +@ExpenditureEndDate+''')';
          END

          IF(len(@CompanyID)&gt;0)
          BEGIN
          IF(LEN(@where)&gt;0)
          SET @where = @where + ' AND'
          set @where= @where+' (' + @CompanyID + ')';
          END

          IF(len(@ApplyEmployeeID)&gt;0)
          BEGIN
          IF(LEN(@where)&gt;0)
          SET @where = @where + ' AND'
          set @where= @where+' (' + @ApplyEmployeeID+ ')';
          END

          IF(len(@BankID)&gt;0)
          BEGIN
          IF(LEN(@where)&gt;0)
          SET @where = @where + ' AND'
          set @where= @where+' (' + @BankID + ')';
          END

          IF(len(@Account)&gt;0)
          BEGIN
          IF(LEN(@where)&gt;0)
          SET @where = @where + ' AND'
          set @where= @where+' (' + @Account + ')';
          END

          IF(len(@Status)&gt;0)
          BEGIN
          IF(LEN(@where)&gt;0)
          SET @where = @where + ' AND'
          set @where= @where+' (' + @Status+ ')';
          END

          IF(len(@PaymentID)&gt;0)
          BEGIN
          IF(LEN(@where)&gt;0)
          SET @where = @where + ' AND'
          set @where= @where+' (' + @PaymentID+ ')';
          END

          IF(len(@ExpenditureStartMoney)&gt;0)
          BEGIN
          IF(LEN(@where)&gt;0)
          SET @where = @where + ' AND'
          set @where= @where+'( a.ExpenditureMoney&gt;=''' +@ExpenditureStartMoney+''')';
          END

          IF(len(@ExpenditureEndMoney)&gt;0)
          BEGIN
          IF(LEN(@where)&gt;0)
          SET @where = @where + ' AND'
          set @where= @where+' (a.ExpenditureMoney&lt;=''' +@ExpenditureEndMoney+''')';
          END

          IF(len(@IsActive)&gt;0)
          BEGIN
          IF(LEN(@where)&gt;0)
          SET @where = @where + ' AND'
          set @where= @where+' (a.IsActive =' + @IsActive + ')';
          END


          SET @sql='SELECT a.[ExpenditureID],[ExpenditureDate],a.[CompanyID],[BankID],a.[Account],[PaymentName],[ExpenditureMoney],a.[Remark],case when ([Status]=1) then ''未排款''  when  ([Status]=2)  then ''已排款''  when  ([Status]=3)  then ''已作废'' end as [Status],[ApplyEmployeeID],[ApplyDeptID],[PayPlanDate],[PayEmployeeID],[PayDate],a.[IsActive],b.[PaymentID],c.Name as EmployeeName
          FROM [acc_Expenditure] a join [acc_ExpenditureDetail] b on a.ExpenditureID=b.ExpenditureID join hr_Employee c on a.ApplyEmployeeID=c.EmployeeID  ';

          IF(LEN(@where)&gt;0)
          BEGIN
          SET @sql=@sql+' WHERE' + @where;
          END

          IF(LEN(ISNULL(@OrderBy,''))=0)
          BEGIN
          SET @sql=@sql+' ORDER BY a.ExpenditureID';
          END
          ELSE
          BEGIN
          SET @sql=@sql+' ORDER BY ' + @OrderBy;
          END

          SET @sql = @sql + '  OFFSET ('+ CAST((@Page - 1) * @Rows AS varchar(10)) +') ROWS
          FETCH NEXT ' + CAST(@Rows AS varchar(10)) +' ROWS ONLY';

          execute(@sql);
        </Sql>
        <Sql Name="GetDetail" ConnectionName="Auth" Description="查询明细">
          SELECT a.[ExpenditureID],[ExpenditureDate],[CompanyID],[BankID],a.[Account],a.[PaymentName],[ExpenditureMoney],a.[Remark],[Status],[ApplyEmployeeID],[ApplyDeptID],[PayPlanDate],[PayEmployeeID],[PayDate],a.[IsActive],b.PaymentID,b.Company,b.Bank,b.Account as DAccount,b.Customer,OrderID,ProductID,ZPaymentID,IsReiFund,Tax,c.ParentID,b.SupplierID
          FROM [acc_Expenditure]  a join acc_ExpenditureDetail b on a.ExpenditureID=b.ExpenditureID left join bi_Payment c on b.ZPaymentID=c.PaymentID
          WHERE a.[ExpenditureID]=@ExpenditureID
        </Sql>
        <Sql Name="Add" ConnectionName="Auth" Description="新增">
          declare @ItemNo int
          set @ItemNo=0;
          select @ItemNo= max(ItemNo) FROM [acc_ExpenditureDetail];

          INSERT INTO [acc_Expenditure]
          ([ExpenditureID],[ExpenditureDate],[CompanyID],[BankID],[Account],[PaymentName],[ExpenditureMoney],[Remark],[Status],[ApplyEmployeeID],[ApplyDeptID],[PayPlanDate],[PayEmployeeID],[PayDate],[IsActive],[CreatedUser],[CreatedTime],[ModifiedUser],[ModifiedTime])
          VALUES(@ExpenditureID,@ExpenditureDate,@CompanyID,@BankID,@Account,@PaymentName,@ExpenditureMoney,@Remark,@Status,@ApplyEmployeeID,@ApplyDeptID,@PayPlanDate,@PayEmployeeID,@PayDate,@IsActive,@CreatedUser,@CreatedTime,@ModifiedUser,@ModifiedTime);





          INSERT INTO [acc_ExpenditureDetail]
          ([ExpenditureID],[ItemNo],[PaymentID],[SupplierID],[Company],[Bank],[Account],[Customer],[OrderID],[ProductID],[ZPaymentID],[IsReiFund],[Tax],[Remark],[IsActive],[CreatedUser],[CreatedTime],[ModifiedUser],[ModifiedTime])
          VALUES(@ExpenditureID,@ItemNo,@PaymentID,@SupplierID,@Company,@Bank,@DAccount,@Customer,@OrderID,@ProductID,@ZPaymentID,@IsReiFund,@Tax,@Remark,@IsActive,@CreatedUser,@CreatedTime,@ModifiedUser,@ModifiedTime);
          SELECT [ExpenditureID],[ExpenditureDate],[CompanyID],[BankID],[Account],[PaymentName],[ExpenditureMoney],[Remark],[Status],[ApplyEmployeeID],[ApplyDeptID],[PayPlanDate],[PayEmployeeID],[PayDate],[IsActive]
          FROM [acc_Expenditure]
          WHERE [AutoKey]=scope_identity();
          SELECT [ExpenditureID],[ItemNo],[PaymentID],[SupplierID],[Company],[Bank],[Account],[Customer],[OrderID],[ProductID],[ZPaymentID],[IsReiFund],[Tax],[Remark],[IsActive]
          FROM [acc_ExpenditureDetail]
          WHERE [AutoKey]=scope_identity();
        </Sql>
        <Sql Name="GetEdit" ConnectionName="Auth" Description="查询编辑">
          SELECT a.[ExpenditureID],[ExpenditureDate],a.[CompanyID],a.[BankID],a.[Account],a.[PaymentName],[ExpenditureMoney],a.[Remark],[Status],[ApplyEmployeeID],[ApplyDeptID],[PayPlanDate],[PayEmployeeID],[PayDate],a.[IsActive],b.PaymentID,b.Company,b.Bank,b.Account as DAccount,b.Customer,OrderID,ProductID,ZPaymentID,IsReiFund,Tax,c.ParentID,b.SupplierID,d.Name as EmployeeName,e.Name as CompanyName,f.SupplierNAME,g.CustomerName,h.PaiKuanID,PaiKuanDATE,Payer,PayMethod,PayerBank,PayerAccount,Receiver,ReceiveMethod,ReceiverBank,ReceiverAccount,ActualPaymentAmount,i.BankName as PayerBankName ,j.BankName as ReceiverBankName,k.Name as DeptName
          FROM [acc_Expenditure]  a join acc_ExpenditureDetail b on a.ExpenditureID=b.ExpenditureID left join bi_Payment c on b.ZPaymentID=c.PaymentID join hr_Employee d on a.ApplyEmployeeID=d.EmployeeID left join hr_Company e on a.CompanyID=e.CompanyID left join  bi_Supplier f on b.SupplierID=f.SupplierID left join bi_Customer g on b.Customer=g.CustomerID left join acc_PaiKuan h on a.ExpenditureID=h.ExpenditureID left join bi_Bank i on h.PayerBank=i.BankID left join bi_Bank  j on h.ReceiverBank=j.BankID left join hr_Department k on d.DeptID=k.DeptID
          WHERE a.[ExpenditureID]=@ExpenditureID
        </Sql>
        <Sql Name="Update" ConnectionName="Auth" Description="更新">
          UPDATE [acc_Expenditure]
          SET  [ExpenditureID]=@ExpenditureID,[ExpenditureDate]=@ExpenditureDate,[CompanyID]=@CompanyID,[BankID]=@BankID,[Account]=@Account,[PaymentName]=@PaymentName,[ExpenditureMoney]=@ExpenditureMoney,[Remark]=@Remark,[Status]=@Status,[ApplyEmployeeID]=@ApplyEmployeeID,[ApplyDeptID]=@ApplyDeptID,[PayPlanDate]=@PayPlanDate,[PayEmployeeID]=@PayEmployeeID,[PayDate]=@PayDate,[IsActive]=@IsActive,[ModifiedUser]=@ModifiedUser,[ModifiedTime]=@ModifiedTime WHERE [ExpenditureID]=@ExpenditureID;


          UPDATE [acc_ExpenditureDetail]
          SET  [ExpenditureID]=@ExpenditureID,[PaymentID]=@PaymentID,[SupplierID]=@SupplierID,[Company]=@Company,[Bank]=@Bank,[Account]=@DAccount,[Customer]=@Customer,[OrderID]=@OrderID,[ProductID]=@ProductID,[ZPaymentID]=@ZPaymentID,[IsReiFund]=@IsReiFund,[Tax]=@Tax,[ModifiedUser]=@ModifiedUser,[ModifiedTime]=@ModifiedTime   WHERE [ExpenditureID]=@ExpenditureID;

          SELECT [ExpenditureID],[ExpenditureDate],[CompanyID],[BankID],[Account],[PaymentName],[ExpenditureMoney],[Remark],[Status],[ApplyEmployeeID],[ApplyDeptID],[PayPlanDate],[PayEmployeeID],[PayDate],[IsActive]
          FROM [acc_Expenditure]
          WHERE [ExpenditureID]=@ExpenditureID;

          SELECT [ExpenditureID],[ItemNo],[PaymentID],[SupplierID],[Company],[Bank],[Account],[Customer],[OrderID],[ProductID],[ZPaymentID],[IsReiFund],[Tax],[Remark],[IsActive]
          FROM [acc_ExpenditureDetail]
          WHERE  [ExpenditureID]=@ExpenditureID;
        </Sql>
        <Sql Name="Delete" ConnectionName="Auth" Description="删除">
          DECLARE @sql varchar(max);
          BEGIN TRY
          IF(CHARINDEX(',',@Keys,0)&lt;=0)
          BEGIN
          UPDATE [acc_Expenditure] SET IsActive=0
          WHERE [ExpenditureID]=@Keys;
          END
          ELSE
          BEGIN
          SET @sql= 'UPDATE [acc_Expenditure] SET IsActive=0 WHERE [ExpenditureID] in (''' + REPLACE(@Keys,',',''',''') + ''')';
          EXEC(@sql);
          END
          END TRY
          BEGIN CATCH
          DECLARE @error varchar(2000);
          SET @error = ERROR_MESSAGE();
          RAISERROR(@error ,11,1);
          END CATCH
        </Sql>
        <Sql Name="ExportQuery" ConnectionName="Auth" Description="导出EX">
          DECLARE @sql varchar(max);
          DECLARE @where varchar(2000);
          SET @where='';
          IF(len(@ExpenditureStartDate)&gt;0)
          BEGIN
          IF(LEN(@where)&gt;0)
          SET @where = @where + ' AND'
          set @where= @where+' (CONVERT(DATE,a.ExpenditureDate)&gt;=''' +@ExpenditureStartDate+''')';
          END

          IF(len(@ExpenditureEndDate)&gt;0)
          BEGIN
          IF(LEN(@where)&gt;0)
          SET @where = @where + ' AND'
          set @where= @where+' (CONVERT(DATE,a.ExpenditureDate)&lt;=''' +@ExpenditureEndDate+''')';
          END

          IF(len(@CompanyID)&gt;0)
          BEGIN
          IF(LEN(@where)&gt;0)
          SET @where = @where + ' AND'
          set @where= @where+' (' + @CompanyID + ')';
          END

          IF(len(@BankID)&gt;0)
          BEGIN
          IF(LEN(@where)&gt;0)
          SET @where = @where + ' AND'
          set @where= @where+' (' + @BankID + ')';
          END

          IF(len(@Account)&gt;0)
          BEGIN
          IF(LEN(@where)&gt;0)
          SET @where = @where + ' AND'
          set @where= @where+' (' + @Account + ')';
          END

          IF(len(@PaymentID)&gt;0)
          BEGIN
          IF(LEN(@where)&gt;0)
          SET @where = @where + ' AND'
          set @where= @where+' (' + @PaymentID+ ')';
          END

          IF(len(@ExpenditureStartMoney)&gt;0)
          BEGIN
          IF(LEN(@where)&gt;0)
          SET @where = @where + ' AND'
          set @where= @where+'( a.ExpenditureMoney&gt;=''' +@ExpenditureStartMoney+''')';
          END

          IF(len(@ExpenditureEndMoney)&gt;0)
          BEGIN
          IF(LEN(@where)&gt;0)
          SET @where = @where + ' AND'
          set @where= @where+' (a.ExpenditureMoney&lt;=''' +@ExpenditureEndMoney+''')';
          END

          IF(len(@IsActive)&gt;0)
			BEGIN
          IF(LEN(@where)&gt;0)
          SET @where = @where + ' AND'
          set @where= @where+' (a.IsActive=' + @IsActive + ')';
          END

          SET @sql='SELECT a.[ExpenditureID],[ExpenditureDate],[CompanyID],[BankID],a.[Account],[PaymentName],[ExpenditureMoney],a.[Remark],b.[PaymentID],b.Company,b.SupplierID,b.Bank,b.Account as DAccount,b.Customer,b.OrderID,b.ProductID,ZPaymentID,IsReiFund,Tax
          FROM [acc_Expenditure] a join [acc_ExpenditureDetail] b on a.ExpenditureID=b.ExpenditureID  ';

          IF(LEN(@where)&gt;0)
          BEGIN
          SET @sql=@sql+' WHERE' + @where;
			END


          execute(@sql);
        </Sql>
        <Sql Name="Delete1" ConnectionName="Auth" Description="作废">
          DECLARE @sql varchar(max);
          BEGIN TRY
          IF(CHARINDEX(',',@Keys,0)&lt;=0)
          BEGIN
          UPDATE [acc_Expenditure] SET Status=3
          WHERE [ExpenditureID]=@Keys;
			END
			ELSE
			BEGIN
          SET @sql= 'UPDATE [acc_Expenditure] SET  Status=3 WHERE [ExpenditureID] in (''' + REPLACE(@Keys,',',''',''') + ''')';
          EXEC(@sql);
			END
			END TRY
			BEGIN CATCH
          DECLARE @error varchar(2000);
          SET @error = ERROR_MESSAGE();
          RAISERROR(@error ,11,1);
			END CATCH
		</Sql>
        <Sql Name="QueryCount_Personal" ConnectionName="Auth" Description="查询总数">
          DECLARE @SQL NVARCHAR(2000)

          SET @SQL =
          'SELECT COUNT(*)
          FROM dbo.acc_Expenditure LEFT JOIN
          dbo.fl_MappingForm ON dbo.acc_Expenditure.ExpenditureID = dbo.fl_MappingForm.FormNo
          INNER JOIN hr_Employee ON acc_Expenditure.[ApplyEmployeeID]=hr_Employee.EmployeeID
          WHERE dbo.acc_Expenditure.IsActive=1 AND hr_Employee.UserID='''+@UserID+''' AND ISNULL(dbo.fl_MappingForm.Table_Name,N''fl_Expenditure'') = N''fl_Expenditure'''

          IF @StartDate &lt;&gt; '' AND @EndDate &lt;&gt; ''
          BEGIN
          SET @SQL = @SQL + ' AND dbo.acc_Expenditure.ExpenditureDate BETWEEN ''' + @StartDate + ''' AND ''' + @EndDate + ''''
          END
          ELSE IF @StartDate &lt;&gt; '' AND @EndDate = ''
          BEGIN
          SET @SQL = @SQL + ' AND dbo.acc_Expenditure.ExpenditureDate &gt;= ''' + @StartDate + ''''
          END
          ELSE IF @StartDate = '' AND @EndDate &lt;&gt; ''
          BEGIN
          SET @SQL = @SQL + ' AND dbo.acc_Expenditure.ExpenditureDate &lt;= ''' + @EndDate + ''''
          END

          IF @AmountStart &lt;&gt; '' AND @AmountEnd &lt;&gt; ''
          BEGIN
          SET @SQL = @SQL + ' AND dbo.acc_Expenditure.ExpenditureMoney BETWEEN ''' + @AmountStart + ''' AND ''' + @AmountEnd + ''''
          END
          ELSE IF @AmountStart &lt;&gt; '' AND @AmountEnd = ''
          BEGIN
          SET @SQL = @SQL + ' AND dbo.acc_Expenditure.ExpenditureMoney &gt;= ''' + @AmountStart + ''''
          END
          ELSE IF @AmountStart = '' AND @AmountEnd &lt;&gt; ''
          BEGIN
          SET @SQL = @SQL + ' AND dbo.acc_Expenditure.ExpenditureMoney &lt;= ''' + @AmountEnd + ''''
          END

          IF @Approve &lt;&gt; '' AND @Approve &lt;&gt; '-2'
          BEGIN
          IF @Approve = '-1'
          BEGIN
          SET @SQL = @SQL + ' AND dbo.fl_MappingForm.Approved IS NULL'
          END
          ELSE
          BEGIN
          SET @SQL = @SQL + ' AND dbo.fl_MappingForm.Approved=' + @Approve
          END
          END

          IF @PaymentName &lt;&gt; ''
          BEGIN
          SET @SQL = @SQL + ' AND dbo.acc_Expenditure.PaymentName = ''' + @PaymentName + ''''
          END

          EXEC(@SQL)
        </Sql>
        <Sql Name="QueryPage_Personal" ConnectionName="Auth" Description="查询分页">
          DECLARE @SQL NVARCHAR(2000)

          SET @SQL =
          'SELECT dbo.acc_Expenditure.ExpenditureID, CONVERT(VARCHAR,CONVERT(DATE, dbo.acc_Expenditure.ExpenditureDate)) ExpenditureDate, CONVERT(VARCHAR, dbo.acc_Expenditure.ExpenditureMoney) ExpenditureMoney,
          CASE dbo.fl_MappingForm.Approved
          WHEN 1 THEN ''申请中''
          WHEN 2 THEN ''已核准''
          WHEN 0 THEN ''已驳回''
          ELSE ''草稿''
          END Approved,ISNULL(dbo.fl_MappingForm.Approved,-1) ApproveStatus, dbo.acc_Expenditure.Remark,dbo.acc_Expenditure.PaymentName,
          CASE [acc_ExpenditureDetail].PaymentID
          WHEN ''C07201'' THEN bi_Supplier.SupplierNAME
          WHEN ''C07202'' THEN ''''
          WHEN ''C07203'' THEN bi_Customer.CustomerName
          WHEN ''C07204'' THEN hr_Company.Name
          WHEN ''C07205'' THEN bi_Supplier.SupplierNAME
          WHEN ''C07206'' THEN ''''
          WHEN ''C07207'' THEN [acc_ExpenditureDetail].Bank
          WHEN ''C07208'' THEN [acc_ExpenditureDetail].Company
          END Receiver
          FROM dbo.acc_Expenditure LEFT JOIN
          dbo.fl_MappingForm ON dbo.acc_Expenditure.ExpenditureID = dbo.fl_MappingForm.FormNo
          INNER JOIN hr_Employee ON acc_Expenditure.[ApplyEmployeeID]=hr_Employee.EmployeeID
          INNER JOIN [dbo].[acc_ExpenditureDetail] ON [acc_Expenditure].ExpenditureID=[acc_ExpenditureDetail].ExpenditureID
          LEFT JOIN bi_Supplier ON [acc_ExpenditureDetail].Company = bi_Supplier.SupplierID
          LEFT JOIN bi_Customer ON [acc_ExpenditureDetail].Customer = bi_Customer.CustomerID
          LEFT JOIN hr_Company ON [acc_ExpenditureDetail].Company = hr_Company.CompanyID
          WHERE dbo.acc_Expenditure.IsActive=1 AND hr_Employee.UserID='''+@UserID+''' AND ISNULL(dbo.fl_MappingForm.Table_Name,N''fl_Expenditure'') = N''fl_Expenditure'''

          IF @StartDate &lt;&gt; '' AND @EndDate &lt;&gt; ''
          BEGIN
          SET @SQL = @SQL + ' AND dbo.acc_Expenditure.ExpenditureDate BETWEEN ''' + @StartDate + ''' AND ''' + @EndDate + ''''
          END
          ELSE IF @StartDate &lt;&gt; '' AND @EndDate = ''
          BEGIN
          SET @SQL = @SQL + ' AND dbo.acc_Expenditure.ExpenditureDate &gt;= ''' + @StartDate + ''''
          END
          ELSE IF @StartDate = '' AND @EndDate &lt;&gt; ''
          BEGIN
          SET @SQL = @SQL + ' AND dbo.acc_Expenditure.ExpenditureDate &lt;= ''' + @EndDate + ''''
          END

          IF @AmountStart &lt;&gt; '' AND @AmountEnd &lt;&gt; ''
          BEGIN
          SET @SQL = @SQL + ' AND dbo.acc_Expenditure.ExpenditureMoney BETWEEN ''' + @AmountStart + ''' AND ''' + @AmountEnd + ''''
          END
          ELSE IF @AmountStart &lt;&gt; '' AND @AmountEnd = ''
          BEGIN
          SET @SQL = @SQL + ' AND dbo.acc_Expenditure.ExpenditureMoney &gt;= ''' + @AmountStart + ''''
          END
          ELSE IF @AmountStart = '' AND @AmountEnd &lt;&gt; ''
          BEGIN
          SET @SQL = @SQL + ' AND dbo.acc_Expenditure.ExpenditureMoney &lt;= ''' + @AmountEnd + ''''
          END

          IF @Approve &lt;&gt; '' AND @Approve &lt;&gt; '-2'
          BEGIN
          IF @Approve = '-1'
          BEGIN
          SET @SQL = @SQL + ' AND dbo.fl_MappingForm.Approved IS NULL'
          END
          ELSE
          BEGIN
          SET @SQL = @SQL + ' AND dbo.fl_MappingForm.Approved=' + @Approve
          END
          END

          IF @PaymentName &lt;&gt; ''
          BEGIN
          SET @SQL = @SQL + ' AND dbo.acc_Expenditure.PaymentName = ''' + @PaymentName + ''''
          END

          SET @SQL = @SQL + ' ORDER BY ExpenditureDate DESC'

          SET @SQL = @SQL + '
          OFFSET ('+ CAST((@Page - 1) * @Rows AS varchar(10)) +') ROWS

          FETCH NEXT ' + CAST(@Rows AS varchar(10)) +' ROWS ONLY';

          EXEC(@SQL)
        </Sql>
        <Sql Name="Add_Personal" ConnectionName="Auth" Description="Add">
          BEGIN TRY
          BEGIN TRAN Expenditure

          INSERT INTO [dbo].[acc_Expenditure]([ExpenditureID],[ExpenditureDate],[CompanyID],[PaymentName],[ExpenditureMoney],[Remark],[Status],[ApplyEmployeeID],[ApplyDeptID],[PayPlanDate],[IsActive],[CreatedUser],[CreatedTime],[ModifiedUser],[ModifiedTime])
          VALUES(@ExpenditureID,@ExpenditureDate,@CompanyID,@PaymentName,@ExpenditureMoney,@Remark,0,@ApplyEmployeeID,@ApplyDeptID,@PayPlanDate,1,@CreatedUser,@CreatedTime,@ModifiedUser,@ModifiedTime)

          IF @OrderID_Set &lt;&gt; ''
          BEGIN
          DECLARE @SN INT,@Total INT,@OrderID VARCHAR(12),@ProductID VARCHAR(8)
          SET @SN = 1
          SET @Total = LEN(@OrderID_Set)-LEN(REPLACE(@OrderID_Set,'|','')) - 1

          WHILE @SN &lt;= @Total
          BEGIN
          SELECT @OrderID=SUBSTRING(@OrderID_Set,
          CHARINDEX('|'+CONVERT(VARCHAR,@SN)+',',@OrderID_Set)+3,
          CHARINDEX('|',@OrderID_Set,CHARINDEX('|'+CONVERT(VARCHAR,@SN)+',',@OrderID_Set)+3)-(CHARINDEX('|'+CONVERT(VARCHAR,@SN)+',',@OrderID_Set)+3))
          SELECT @ProductID=SUBSTRING(@ProductID_Set,
          CHARINDEX('|'+CONVERT(VARCHAR,@SN)+',',@ProductID_Set)+3,
          CHARINDEX('|',@ProductID_Set,CHARINDEX('|'+CONVERT(VARCHAR,@SN)+',',@ProductID_Set)+3)-(CHARINDEX('|'+CONVERT(VARCHAR,@SN)+',',@ProductID_Set)+3))

          INSERT INTO [dbo].[acc_ExpenditureDetail]([ExpenditureID],[ItemNo],[PaymentID],[Company],[Bank],[Account],[Customer],[OrderID],[ProductID],[ZPaymentID],[IsReiFund],[Tax],[Remark],[IsActive],[CreatedUser],[CreatedTime],[ModifiedUser],[ModifiedTime])
          VALUES(@ExpenditureID,@SN,@PaymentID,@Company,@Bank,@Account,@Customer,@OrderID,@ProductID,@ZPaymentID,@IsReiFund,@Tax,@Remark,1,@CreatedUser,@CreatedTime,@ModifiedUser,@ModifiedTime)

          SET @SN = @SN + 1
          END
          END
          ELSE
          BEGIN
          INSERT INTO [dbo].[acc_ExpenditureDetail]([ExpenditureID],[ItemNo],[PaymentID],[Company],[Bank],[Account],[Customer],[OrderID],[ProductID],[ZPaymentID],[IsReiFund],[Tax],[Remark],[IsActive],[CreatedUser],[CreatedTime],[ModifiedUser],[ModifiedTime])
          VALUES(@ExpenditureID,1,@PaymentID,@Company,@Bank,@Account,@Customer,'','',@ZPaymentID,@IsReiFund,@Tax,@Remark,1,@CreatedUser,@CreatedTime,@ModifiedUser,@ModifiedTime)
          END

          COMMIT TRAN Expenditure
          END TRY
          BEGIN CATCH
          ROLLBACK TRAN Expenditure
          DECLARE @ERROR NVARCHAR(MAX)
          SELECT @ERROR=ERROR_MESSAGE()
          RAISERROR (@ERROR ,15, 1) WITH NOWAIT
          END CATCH
        </Sql>
        <Sql Name="Update_Personal" ConnectionName="Auth" Description="Update">
          BEGIN TRY
          BEGIN TRAN Expenditure

          UPDATE [dbo].[acc_Expenditure]
          SET [PayPlanDate] = @PayPlanDate,[ExpenditureMoney] = @ExpenditureMoney,[PaymentName] = @PaymentName,[Remark] = @Remark,[ModifiedUser] = @ModifiedUser,[ModifiedTime] = @ModifiedTime
          WHERE [ExpenditureID] = @ExpenditureID

          IF @OrderID_Set &lt;&gt; ''
          BEGIN
          DELETE FROM acc_ExpenditureDetail WHERE [ExpenditureID] = @ExpenditureID

          DECLARE @SN INT,@Total INT,@OrderID VARCHAR(12),@ProductID VARCHAR(8)
          SET @SN = 1
          SET @Total = LEN(@OrderID_Set)-LEN(REPLACE(@OrderID_Set,'|','')) - 1

          WHILE @SN &lt;= @Total
          BEGIN
          SELECT @OrderID=SUBSTRING(@OrderID_Set,
          CHARINDEX('|'+CONVERT(VARCHAR,@SN)+',',@OrderID_Set)+3,
          CHARINDEX('|',@OrderID_Set,CHARINDEX('|'+CONVERT(VARCHAR,@SN)+',',@OrderID_Set)+3)-(CHARINDEX('|'+CONVERT(VARCHAR,@SN)+',',@OrderID_Set)+3))
          SELECT @ProductID=SUBSTRING(@ProductID,
          CHARINDEX('|'+CONVERT(VARCHAR,@SN)+',',@ProductID_Set)+3,
          CHARINDEX('|',@ProductID_Set,CHARINDEX('|'+CONVERT(VARCHAR,@SN)+',',@ProductID_Set)+3)-(CHARINDEX('|'+CONVERT(VARCHAR,@SN)+',',@ProductID_Set)+3))

          INSERT INTO [dbo].[acc_ExpenditureDetail]([ExpenditureID],[ItemNo],[PaymentID],[Company],[Bank],[Account],[Customer],[OrderID],[ProductID],[ZPaymentID],[IsReiFund],[Tax],[Remark],[IsActive],[CreatedUser],[CreatedTime],[ModifiedUser],[ModifiedTime])
          VALUES(@ExpenditureID,@SN,@PaymentID,@Company,@Bank,@Account,@Customer,@OrderID,@ProductID,@ZPaymentID,@IsReiFund,@Tax,@Remark,1,@CreatedUser,@CreatedTime,@ModifiedUser,@ModifiedTime)

          SET @SN = @SN + 1
          END
          END
          ELSE
          BEGIN
          UPDATE [dbo].[acc_ExpenditureDetail] SET [PaymentID]=@PaymentID,[Company]=@Company,[Bank]=@Bank,[Account]=@Account,[Customer]=@Customer
          ,[OrderID]='',[ProductID]='',[ZPaymentID]=@ZPaymentID,[IsReiFund]=@IsReiFund,[Tax]=@Tax,[Remark]=@Remark,[ModifiedUser]=@ModifiedUser,[ModifiedTime]=@ModifiedTime
          WHERE ExpenditureID=@ExpenditureID
          END

          COMMIT TRAN Expenditure
          END TRY
          BEGIN CATCH
          ROLLBACK TRAN Expenditure
          DECLARE @ERROR NVARCHAR(MAX)
          SELECT @ERROR=ERROR_MESSAGE()
          RAISERROR (@ERROR ,15, 1) WITH NOWAIT
          END CATCH

        </Sql>
        <Sql Name="GetItem_Personal" ConnectionName="Auth" Description="GetItem">
          SELECT TOP 1 dbo.hr_Company.Name + '-' + dbo.hr_Department.Name AS Dept, dbo.acc_Expenditure.ExpenditureDate,
          dbo.acc_Expenditure.ExpenditureID, dbo.hr_Employee.Name AS ApplyEmployeeName, dbo.acc_Expenditure.PayPlanDate,
          dbo.acc_Expenditure.ExpenditureMoney, dbo.acc_Expenditure.PaymentName, dbo.acc_Expenditure.Remark,
          dbo.acc_ExpenditureDetail.ItemNo, dbo.acc_ExpenditureDetail.PaymentID, dbo.acc_ExpenditureDetail.Company,
          dbo.acc_ExpenditureDetail.Bank, dbo.acc_ExpenditureDetail.Account, dbo.acc_ExpenditureDetail.Customer,
          CONVERT(nchar(10),dbo.acc_ExpenditureDetail.ZPaymentID) ZPaymentID, dbo.acc_ExpenditureDetail.IsReiFund,
          dbo.acc_ExpenditureDetail.Tax, bi_Payment.ParentID CostCategories
          FROM dbo.acc_Expenditure INNER JOIN
          dbo.acc_ExpenditureDetail ON
          dbo.acc_Expenditure.ExpenditureID = dbo.acc_ExpenditureDetail.ExpenditureID INNER JOIN
          dbo.hr_Employee ON dbo.acc_Expenditure.ApplyEmployeeID = dbo.hr_Employee.EmployeeID INNER JOIN
          dbo.hr_Department ON dbo.acc_Expenditure.ApplyDeptID = dbo.hr_Department.DeptID INNER JOIN
          dbo.hr_Company ON dbo.acc_Expenditure.CompanyID = dbo.hr_Company.CompanyID
          LEFT JOIN bi_Payment ON acc_ExpenditureDetail.ZPaymentID = bi_Payment.PaymentID
          WHERE dbo.acc_Expenditure.ExpenditureID = @ExpenditureID
        </Sql>
        <Sql Name="GetOrders_Personal" ConnectionName="Auth" Description="获得与付款单关联的订单信息">
          SELECT OrderID, ProductID
          FROM dbo.acc_ExpenditureDetail
          WHERE ExpenditureID = @ExpenditureID
        </Sql>
        <Sql Name="GetReOrderProduct_Personal" ConnectionName="Auth" Description="获得与付款单关联的退单信息">
          SELECT dbo.acc_ExpenditureDetail.OrderID, dbo.bi_ProductType.ProductType, dbo.bi_Product.Product,
          dbo.bi_ReOrderProduct.Amount, dbo.bi_ReOrderProduct.Remark
          FROM dbo.bi_ReOrderProduct INNER JOIN
          dbo.acc_ExpenditureDetail ON dbo.bi_ReOrderProduct.OrderID = dbo.acc_ExpenditureDetail.OrderID AND
          dbo.bi_ReOrderProduct.ProductID = dbo.acc_ExpenditureDetail.ProductID INNER JOIN
          dbo.bi_Product ON dbo.bi_ReOrderProduct.ProductID = dbo.bi_Product.ProductID INNER JOIN
          dbo.bi_ProductType ON dbo.bi_Product.ProductTypeID = dbo.bi_ProductType.ProductTypeID
          WHERE (dbo.acc_ExpenditureDetail.ExpenditureID = @ExpenditureID)
        </Sql>
        <Sql Name="GetCommissionOrderProduct_Personal" ConnectionName="Auth" Description="获得与付款单关联的返佣单信息">
          SELECT dbo.bi_Order.OrderDate, dbo.acc_ExpenditureDetail.OrderID, dbo.bi_OrderCustomer.CustomerName,
          dbo.bi_Product.Product, dbo.bi_OrderProduct.Amount
          FROM dbo.acc_ExpenditureDetail INNER JOIN
          dbo.bi_OrderProduct ON dbo.acc_ExpenditureDetail.OrderID = dbo.bi_OrderProduct.OrderID AND
          dbo.acc_ExpenditureDetail.ProductID = dbo.bi_OrderProduct.ProductID INNER JOIN
          dbo.bi_Product ON dbo.bi_OrderProduct.ProductID = dbo.bi_Product.ProductID INNER JOIN
          dbo.bi_Order ON dbo.bi_OrderProduct.OrderID = dbo.bi_Order.OrderID INNER JOIN
          dbo.bi_OrderCustomer ON dbo.bi_Order.OrderID = dbo.bi_OrderCustomer.OrderID
          WHERE (dbo.acc_ExpenditureDetail.ExpenditureID = @ExpenditureID)
        </Sql>
        <Sql Name="Delete_Personal" ConnectionName="Auth" SqlType="Execute" Description="Delete">
          DECLARE @sql varchar(max);
          SET @sql='UPDATE [acc_Expenditure]
          SET [ModifiedUser]='''+@ModifiedUser+''',[ModifiedTime]='''+@ModifiedTime+''',[IsActive]=0 WHERE [ExpenditureID] in ('''+replace(@EIDs,',',''',''')+''') ;'
          EXEC(@sql);
        </Sql>
      </Table>
      <Table Name="acc_PaiKuan" ConnectionName="Auth" TableName="acc_PaiKuan">
        <Sql Name="Update" ConnectionName="Auth" Description="Update">
          if exists(select * from [acc_PaiKuan] where [ExpenditureID]=@ExpenditureID)
          begin
          update  [acc_PaiKuan] set [PaiKuanDATE]=@PaiKuanDATE,[Payer]=@Payer,[PayMethod]=@PayMethod,[PayerBank]=@PayerBank,[PayerAccount]=@PayerAccount,[Receiver]=@Receiver,[ReceiveMethod]=@ReceiveMethod,[ReceiverBank]=@ReceiverBank,[ReceiverAccount]=@ReceiverAccount,[ActualPaymentAmount]=@ActualPaymentAmount,[Remark]=@Remark,[IsActive]=@IsActive,[ModifiedUser]=@ModifiedUser,[ModifiedTime]=@ModifiedTime where  [ExpenditureID]=@ExpenditureID
          end
          else
          begin
          INSERT INTO [acc_PaiKuan]
          ([PaiKuanID],[ExpenditureID],[PaiKuanDATE],[Payer],[PayMethod],[PayerBank],[PayerAccount],[Receiver],[ReceiveMethod],[ReceiverBank],[ReceiverAccount],[ActualPaymentAmount],[Remark],[IsActive],[CreatedUser],[CreatedTime],[ModifiedUser],[ModifiedTime])
          VALUES(@PaiKuanID,@ExpenditureID,@PaiKuanDATE,@Payer,@PayMethod,@PayerBank,@PayerAccount,@Receiver,@ReceiveMethod,@ReceiverBank,@ReceiverAccount,@ActualPaymentAmount,@Remark,@IsActive,@CreatedUser,@CreatedTime,@ModifiedUser,@ModifiedTime);
          end

          IF(len(@LoanNum)&gt;0)
          BEGIN
          IF(@ExpenditureMoney&gt;=@LoanMoney)
          BEGIN
          UPDATE [acc_LoanForm] SET  [Status]=1,[ModifiedUser]=@ModifiedUser,[ModifiedTime]=@ModifiedTime WHERE [LoanNum]=@LoanNum;
          end
          else
          BEGIN
          UPDATE [acc_LoanForm] SET  [LoanMoney]=(convert(money,@LoanMoney)-convert(money,@ExpenditureMoney)),[ModifiedUser]=@ModifiedUser,[ModifiedTime]=@ModifiedTime WHERE [LoanNum]=@LoanNum;
          end

          INSERT INTO [acc_RePaymentForm]
          ([RePaymentNum],[LoanNum],[DeptID],[EmployeeID],[RePaymentDate],[RePaymentMethod],[RePaymentUnit],[RePaymentAmount],[Remark],[IsActive],[CreatedUser],[CreatedTime],[ModifiedUser],[ModifiedTime])
          VALUES(@RePaymentNum,@LoanNum,'',@EmployeeID,@PaiKuanDATE,@PayMethod,'',@ActualPaymentAmount,@Remark,@IsActive,@CreatedUser,@CreatedTime,@ModifiedUser,@ModifiedTime);


          END

          UPDATE [acc_Expenditure]
          SET  [Status]=2,[ModifiedUser]=@ModifiedUser,[ModifiedTime]=@ModifiedTime WHERE [ExpenditureID]=@ExpenditureID;
        </Sql>
      </Table>
      <Table Name="acc_Invoice" ConnectionName="Auth" TableName="acc_Invoice">
        <Sql Name="QueryCount" ConnectionName="Auth" Description="检索查询总数">
          DECLARE @sql varchar(max);
          DECLARE @where varchar(2000);
          SET @where='';

          IF(len(@ApplicationStartDate)&gt;0)
          BEGIN
          IF(LEN(@where)&gt;0)
          SET @where = @where + ' AND'
            set @where= @where+' (CONVERT(DATE,ApplicationDate)&gt;=CONVERT(DATE,''' +@ApplicationStartDate+'''))';
          END

         IF(len(@ApplicationEndDate)&gt;0)
          BEGIN
          IF(LEN(@where)&gt;0)
          SET @where = @where + ' AND'
            set @where= @where+' (CONVERT(DATE,ApplicationDate)&lt;=CONVERT(DATE,''' +@ApplicationEndDate+'''))';
          END

          IF(len(@InvoiceStartAmount)&gt;0)
          BEGIN
          IF(LEN(@where)&gt;0)
          SET @where = @where + ' AND'
          set @where= @where+' InvoiceAmount&gt;=(''' + @InvoiceStartAmount+ ''')';
          END

          IF(len(@InvoiceEndAmount)&gt;0)
          BEGIN
          IF(LEN(@where)&gt;0)
          SET @where = @where + ' AND'
          set @where= @where+' InvoiceAmount&lt;=(''' + @InvoiceEndAmount+ ''')';
          END


          IF(len(@CustomerID)&gt;0)
          BEGIN
          IF(LEN(@where)&gt;0)
          SET @where = @where + ' AND'
          set @where= @where+' (' + @CustomerID + ')';
          END



          IF(len(@IsActive)&gt;0)
          BEGIN
          IF(LEN(@where)&gt;0)
          SET @where = @where + ' AND'
          set @where= @where+' (' + @IsActive + ')';
          END

IF(len(@Status)&gt;0)
          BEGIN
          IF(LEN(@where)&gt;0)
          SET @where = @where + ' AND'
          set @where= @where+' (' + @Status+ ')';
          END

IF(len(@InvoiceType)&gt;0)
          BEGIN
          IF(LEN(@InvoiceType)&gt;0)
          SET @where = @where + ' AND'
          set @where= @where+' (' + @InvoiceType+ ')';
          END

          SET @sql='SELECT COUNT(*)
          FROM [acc_Invoice]';

          IF(LEN(@where)&gt;0)
          BEGIN
          SET @sql=@sql+' WHERE' + @where;
          END
          execute(@sql);
        </Sql>
        <Sql Name="QueryPage" ConnectionName="Auth" Description="检索分页查询">
          DECLARE @sql varchar(max);
          DECLARE @where varchar(2000);
          SET @where='';
        IF(len(@ApplicationStartDate)&gt;0)
          BEGIN
          IF(LEN(@where)&gt;0)
          SET @where = @where + ' AND'
            set @where= @where+' (CONVERT(DATE,ApplicationDate)&gt;=CONVERT(DATE,''' +@ApplicationStartDate+'''))';
          END

         IF(len(@ApplicationEndDate)&gt;0)
          BEGIN
          IF(LEN(@where)&gt;0)
          SET @where = @where + ' AND'
            set @where= @where+' (CONVERT(DATE,ApplicationDate)&lt;=CONVERT(DATE,''' +@ApplicationEndDate+'''))';
          END

          IF(len(@InvoiceStartAmount)&gt;0)
          BEGIN
          IF(LEN(@where)&gt;0)
          SET @where = @where + ' AND'
          set @where= @where+' InvoiceAmount&gt;=(''' + @InvoiceStartAmount+ ''')';
          END

          IF(len(@InvoiceEndAmount)&gt;0)
          BEGIN
          IF(LEN(@where)&gt;0)
          SET @where = @where + ' AND'
          set @where= @where+' InvoiceAmount&lt;=(''' + @InvoiceEndAmount+ ''')';
          END


          IF(len(@CustomerID)&gt;0)
          BEGIN
          IF(LEN(@where)&gt;0)
          SET @where = @where + ' AND'
          set @where= @where+' (' + @CustomerID + ')';
          END


          IF(len(@IsActive)&gt;0)
          BEGIN
          IF(LEN(@where)&gt;0)
          SET @where = @where + ' AND'
          set @where= @where+' (' + @IsActive + ')';
          END

IF(len(@Status)&gt;0)
          BEGIN
          IF(LEN(@where)&gt;0)
          SET @where = @where + ' AND'
          set @where= @where+' (' + @Status+ ')';
          END

IF(len(@InvoiceType)&gt;0)
          BEGIN
          IF(LEN(@InvoiceType)&gt;0)
          SET @where = @where + ' AND'
          set @where= @where+' (' + @InvoiceType+ ')';
          END


          SET @sql='SELECT [InvoiceID],[InvoiceNumber],case when ([InvoiceType]='A') then '预开票申请'  when  ([InvoiceType]='B')  then '开票申请' when  ([InvoiceType]='C')  then '发票退回' when  ([InvoiceType]='D')  then '发票作废' when  ([InvoiceType]='E')  then '发票红冲' end as [InvoiceType],case when ([InvoiceRealType]='10') then '增值税专用发票'  when  ([InvoiceRealType]='20')  then '增值税普通发票'  when  ([InvoiceRealType]='30')  then '营业税发票'  end as [InvoiceRealType],[InvoiceAmount],[InvoiceRealAmount],[ReceiverInfomation],[CustomerID],[CustomerName],[Tax_RegistrationCertificate],[OpeningBank],[Account],[Address],[ContactTel],[CompanyID],[BID],[Status],[Remark],[Operator],[OperationTime],[IsActive]
          FROM [acc_Invoice]';

          IF(LEN(@where)&gt;0)
          BEGIN
          SET @sql=@sql+' WHERE' + @where;
          END

          IF(LEN(ISNULL(@OrderBy,''))=0)
          BEGIN
          SET @sql=@sql+' ORDER BY InvoiceID';
          END
          ELSE
          BEGIN
          SET @sql=@sql+' ORDER BY ' + @OrderBy;
          END

          SET @sql = @sql + '
          OFFSET ('+ CAST((@Page - 1) * @Rows AS varchar(10)) +') ROWS
          FETCH NEXT ' + CAST(@Rows AS varchar(10)) +' ROWS ONLY';

          execute(@sql);
        </Sql>
        <Sql Name="GetDetail" ConnectionName="Auth" Description="查询明细">
          SELECT [InvoiceID],[InvoiceNumber],case when ([InvoiceType]='A') then '预开票申请'  when  ([InvoiceType]='B')  then '开票申请'  end as [InvoiceType],case when ([InvoiceRealType]='10') then '增值税专用发票'  when  ([InvoiceRealType]='20')  then '增值税普通发票'  when  ([InvoiceRealType]='30')  then '营业税发票'  end as [InvoiceRealType],[InvoiceAmount],[InvoiceRealAmount],[ReceiverInfomation],[CustomerID],[CustomerName],[Tax_RegistrationCertificate],[OpeningBank],[Account],[Address],[ContactTel],[CompanyID],[BID],[Status],[Remark],[Operator],[OperationTime],[IsActive]
          FROM [acc_Invoice]
          WHERE [InvoiceID]=@InvoiceID
        </Sql>
        <Sql Name="Add" ConnectionName="Auth" Description="新增">
          INSERT INTO [acc_Invoice]
          ([InvoiceID],[InvoiceNumber],[ApplicationDate],[InvoiceType],[InvoiceRealType],[InvoiceAmount],[InvoiceRealAmount],[ReceiverInfomation],[CustomerID],[CustomerName],[Tax_RegistrationCertificate],[OpeningBank],[Account],[Address],[ContactTel],[CompanyID],[BID],[Status],[Remark],[Operator],[OperationTime],[IsActive],[CreatedUser],[CreatedTime],[ModifiedUser],[ModifiedTime])
          VALUES(@InvoiceID,@InvoiceNumber,@ApplicationDate,@InvoiceType,@InvoiceRealType,@InvoiceAmount,@InvoiceRealAmount,@ReceiverInfomation,@CustomerID,@CustomerName,@Tax_RegistrationCertificate,@OpeningBank,@Account,@Address,@ContactTel,@CompanyID,@BID,@Status,@Remark,@Operator,@OperationTime,@IsActive,@CreatedUser,@CreatedTime,@ModifiedUser,@ModifiedTime);

  INSERT INTO [acc_InvoiceDetail]
          ([InvoiceID],[InvoiceNumber],[OrderID],[OrderAmount],[Remark],[Operator],[OperationTime],[IsActive],[CreatedUser],[CreatedTime],[ModifiedUser],[ModifiedTime])
          VALUES(@InvoiceID,@InvoiceNumber,@OrderID,@ContractAmount,@Remark,@Operator,@OperationTime,@IsActive,@CreatedUser,@CreatedTime,@ModifiedUser,@ModifiedTime);

          SELECT [InvoiceID],[InvoiceNumber],[InvoiceType],[InvoiceRealType],[InvoiceAmount],[InvoiceRealAmount],[ReceiverInfomation],[CustomerID],[CustomerName],[Tax_RegistrationCertificate],[OpeningBank],[Account],[Address],[ContactTel],[CompanyID],[BID],[Status],[Remark],[Operator],[OperationTime],[IsActive]
          FROM [acc_Invoice]
          WHERE [AutoKey]=scope_identity()
        </Sql>
        <Sql Name="GetEdit" ConnectionName="Auth" Description="查询编辑">
          SELECT a.[InvoiceID],a.[InvoiceNumber],[InvoiceType],[InvoiceRealType],[InvoiceAmount],[InvoiceRealAmount],[ReceiverInfomation],[CustomerID],[CustomerName],[Tax_RegistrationCertificate],[OpeningBank],[Account],[Address],[ContactTel],[CompanyID],[BID],[Status],a.[Remark],a.[Operator],a.[OperationTime],b.OrderID,b.OrderAmount
          FROM [acc_Invoice] a join acc_InvoiceDetail b on a.InvoiceID=b.InvoiceID
          WHERE a.[InvoiceID]=@InvoiceID
        </Sql>
        <Sql Name="Update" ConnectionName="Auth" Description="更新">
          UPDATE [acc_Invoice]
          SET [InvoiceType]=@InvoiceType,[InvoiceRealType]=@InvoiceRealType,[InvoiceAmount]=@InvoiceAmount,[InvoiceRealAmount]=@InvoiceRealAmount,[ReceiverInfomation]=@ReceiverInfomation,[CustomerID]=@CustomerID,[CustomerName]=@CustomerName,[Tax_RegistrationCertificate]=@Tax_RegistrationCertificate,[OpeningBank]=@OpeningBank,[Account]=@Account,[Address]=@Address,[ContactTel]=@ContactTel,[ModifiedUser]=@ModifiedUser,[ModifiedTime]=@ModifiedTime WHERE [InvoiceID]=@InvoiceID;

UPDATE [acc_InvoiceDetail]
          SET [OrderID]=@OrderID,[OrderAmount]=@ContractAmount WHERE [InvoiceID]=@InvoiceID;

          SELECT [InvoiceID],[InvoiceNumber],[InvoiceType],[InvoiceRealType],[InvoiceAmount],[InvoiceRealAmount],[ReceiverInfomation],[CustomerID],[CustomerName],[Tax_RegistrationCertificate],[OpeningBank],[Account],[Address],[ContactTel],[CompanyID],[BID],[Status],[Remark],[Operator],[OperationTime],[IsActive]
          FROM [acc_Invoice]
          WHERE [InvoiceID]=@InvoiceID
		  </Sql>
        <Sql Name="Delete" ConnectionName="Auth" Description="删除">
          DECLARE @sql varchar(max);
          BEGIN TRY
          IF(CHARINDEX(',',@Keys,0)&lt;=0)
          BEGIN
          UPDATE [acc_Invoice] SET IsActive=0
          WHERE [InvoiceID]=@Keys;
          END
          ELSE
          BEGIN
          SET @sql= 'UPDATE [acc_Invoice] SET IsActive=0 WHERE [InvoiceID] in (''' + REPLACE(@Keys,',',''',''') + ''')';
          EXEC(@sql);
          END
          END TRY
          BEGIN CATCH
          DECLARE @error varchar(2000);
          SET @error = ERROR_MESSAGE();
          RAISERROR(@error ,11,1);
          END CATCH
        </Sql>
        <Sql Name="UpdateKP" ConnectionName="Auth" Description="开票">  UPDATE [acc_Invoice]
          SET [InvoiceNumber]=@InvoiceNumber,[Remark]=@Remark,[Status]=@Status,[ModifiedUser]=@ModifiedUser,[ModifiedTime]=@ModifiedTime WHERE [InvoiceID]=@InvoiceID;
SELECT [InvoiceID],[InvoiceNumber],[InvoiceType],[InvoiceRealType],[InvoiceAmount],[InvoiceRealAmount],[ReceiverInfomation],[CustomerID],[CustomerName],[Tax_RegistrationCertificate],[OpeningBank],[Account],[Address],[ContactTel],[CompanyID],[BID],[Status],[Remark],[Operator],[OperationTime],[IsActive]
          FROM [acc_Invoice]
          WHERE [InvoiceID]=@InvoiceID</Sql>
      </Table>
    </Group>
    <Group Name="人才管理">
      <Table Name="rc_EmailInfoes" ConnectionName="Auth" TableName="rc_EmailInfoes" />
      <Table Name="rc_EmailModels" ConnectionName="Auth" TableName="rc_EmailModels">
        <Sql Name="GetOrderEmailModel" ConnectionName="Auth" Description="获取预约邮件模板">SELECT [E_Model_Title],[E_Model_Body] FROM [dbo].[rc_EmailModels] where E_Model_Name='E00001'</Sql>
        <Sql Name="GetReportEmailModel" ConnectionName="Auth" Description="获取通知邮件模板">SELECT [E_Model_Title],[E_Model_Body] FROM [dbo].[rc_EmailModels] where E_Model_Name='E00002'</Sql>
        <Sql Name="Update" ConnectionName="Auth" SqlType="Execute" Description="Update">Update rc_EmailModels set E_Model_Body=@E_Model_Body</Sql>
      </Table>
      <Table Name="rc_ResumeInfoes" ConnectionName="Auth" TableName="rc_ResumeInfoes">
        <Sql Name="Query" ConnectionName="Auth" Description="检索查询">
          declare @dataBegin varchar(30)
          declare @dataEnd varchar(30)
          if (@Data1='')
          begin
          set @dataBegin ='1900-01-01'
          end
          else
          begin
          set @dataBegin =@Data1
          end
          if (@Data2='1900-01-01' or @Data2='')
          begin
          set @dataEnd='2100-12-31'
          end
          else
          begin
          set @dataEnd=@Data2
          end
          SELECT [RID],[Name],[Sex],[Position],[YearsOfWorking],[BirthDate],[HuKou],[CurrentResidency],[MobilePhone],[Email],[Address],[Degree],[School],[Professional],[SalaryExpected],[LastCompant], CONVERT(varchar(100), [CV_GetTime], 23) as [CV_GetTime],[PoliticsStatus],[MaritalStatus],[TypeOfEmployment],[IndustryExpected],[JobFunctionExpected],[WorkingPlaceExpected],[CurrentSituation],[SelfAssessment],[WorkingExperience],[ProjectExperience],[Education],[Training],[Certifications],[GraduatesInfo],[SocialEvents],[Language],[ProfessionalSkill],CONVERT(nvarchar(20), [ImportTime],20) as [ImportTime],
          case when [Done]=0 then '未创建预约' when  [Done]=1 then '已创建预约'  when [Done]=2 then '已转员工'   when [Done]=3 then '应聘失败' else '' end as [Done] FROM [rc_ResumeInfoes]
          where [Done] like '%'+@Done+'%'  and  [Name] like '%'+@Name+'%'  and [Position] like '%'+@Position+'%' and ([Sex] like '%'+@Key+'%' or [YearsOfWorking] like '%'+@Key+'%' or [Degree] like '%'+@Key+'%'  or [HuKou] like '%'+@Key+'%')  and  [CV_GetTime]  between  @dataBegin and @dataEnd order by Done desc
        </Sql>
        <Sql Name="GetDetail" ConnectionName="Auth" Description="查询明细">
          SELECT [RID],[Name],[Sex],[Position],[YearsOfWorking],CONVERT(nvarchar(20),[BirthDate],23) as [BirthDate],[HuKou],[CurrentResidency],[MobilePhone],[Email],[Address],[Degree],[School],[Professional],[SalaryExpected],[LastCompant],CONVERT(nvarchar(20),[CV_GetTime],23) as [CV_GetTime],[PoliticsStatus],[MaritalStatus],[TypeOfEmployment],[IndustryExpected],[JobFunctionExpected],[WorkingPlaceExpected],[CurrentSituation],[SelfAssessment],[WorkingExperience],[ProjectExperience],[Education],[Training],[Certifications],[GraduatesInfo],[SocialEvents],[Language],[ProfessionalSkill],[ImportTime],[Done]
          FROM [rc_ResumeInfoes]
          WHERE [RID]=@RID
        </Sql>
        <Sql Name="Position" SharedName="ResumePosition" ConnectionName="Auth" Description="获取简历库中的所有职位">
          SELECT  [Position] as Name ,[Position] AS ID FROM [rc_ResumeInfoes] where LEN(Position)&gt;1 group by Position union select '全部','' order by ID
        </Sql>
        <Sql Name="GetInfoToEmployee" ConnectionName="Auth" Description="获取预约者转员工相关信息">
          SELECT RID
          ,[Name]
          ,[Sex]
          ,convert(varchar(20),[BirthDate],20) as  Birthday
          ,[MobilePhone] as MobiPhone
          ,[Email] as Pemail
          ,case when [Degree]= '本科'  then '学士'  when [Degree]= '大专'  then '专科'  else  [Degree] end
          , [Degree]
          ,[School] as EduName
          ,[Professional] as Major
          ,[PoliticsStatus] as Politics
          ,[MaritalStatus] as Marriage
          ,[HuKou] as Native
          ,[CurrentResidency] as LiveAddress
          FROM [dbo].[rc_ResumeInfoes]
          where RID=@RID
        </Sql>
        <Sql Name="State" SharedName="ResumeState" ConnectionName="Auth" Description="简历状态">select '0' as ID,'未创建预约' as Name union select '1' ,'已创建预约' union select '2' ,'已转员工 ' union select '3' ,'应聘失败' union select '','全部'</Sql>
        <Sql Name="QueryCount" ConnectionName="Auth" Description="查询总数">
          declare @dataBegin varchar(30)
          declare @dataEnd varchar(30)
          if (@Data1='')
          begin
          set @dataBegin ='1900-01-01'
          end
          else
          begin
          set @dataBegin =@Data1
          end
          if (@Data2='1900-01-01' or @Data2='')
          begin
          set @dataEnd='2100-12-31'
          end
          else
          begin
          set @dataEnd=@Data2
          end
          SELECT count(*) FROM [rc_ResumeInfoes]
          where [Done] like '%'+@Done+'%'  and  [Name] like '%'+@Name+'%'  and [Position] like '%'+@Position+'%' and ([Sex] like '%'+@Key+'%' or [YearsOfWorking] like '%'+@Key+'%' or [Degree] like '%'+@Key+'%'  or [HuKou] like '%'+@Key+'%')  and  [CV_GetTime]  between  @dataBegin and @dataEnd
        </Sql>
        <Sql Name="QueryPage" ConnectionName="Auth" Description="查询分页">
          declare @dataBegin varchar(30)
          declare @dataEnd varchar(30)
          if (@Data1='')
          begin
          set @dataBegin ='1900-01-01'
          end
          else
          begin
          set @dataBegin =@Data1
          end
          if (@Data2='1900-01-01' or @Data2='')
          begin
          set @dataEnd='2100-12-31'
          end
          else
          begin
          set @dataEnd=@Data2
          end
          SELECT [RID],[Name],[Sex],[Position],[YearsOfWorking],[BirthDate],[HuKou],[CurrentResidency],[MobilePhone],[Email],[Address],[Degree],[School],[Professional],[SalaryExpected],[LastCompant], CONVERT(varchar(100), [CV_GetTime], 23) as [CV_GetTime],[PoliticsStatus],[MaritalStatus],[TypeOfEmployment],[IndustryExpected],[JobFunctionExpected],[WorkingPlaceExpected],[CurrentSituation],[SelfAssessment],[WorkingExperience],[ProjectExperience],[Education],[Training],[Certifications],[GraduatesInfo],[SocialEvents],[Language],[ProfessionalSkill],CONVERT(nvarchar(20), [ImportTime],20) as [ImportTime],
          case when [Done]=0 then '未创建预约' when  [Done]=1 then '已创建预约'  when [Done]=2 then '已转员工'   when [Done]=3 then '应聘失败' else '' end as [Done] FROM [rc_ResumeInfoes]
          where [Done] like '%'+@Done+'%'  and  [Name] like '%'+@Name+'%'  and [Position] like '%'+@Position+'%' and ([Sex] like '%'+@Key+'%' or [YearsOfWorking] like '%'+@Key+'%' or [Degree] like '%'+@Key+'%'  or [HuKou] like '%'+@Key+'%')  and  [CV_GetTime]  between  @dataBegin and @dataEnd order by Done desc  OFFSET ((CAST(@Page as int)-1)*CAST(@Rows as int)) Rows FETCH NEXT CAST(@Rows as int) ROWS ONLY;
        </Sql>
        <Sql Name="RcReport" ConnectionName="Auth" Description="应聘人才报表">

          select
          b.DeptID,
          b.CompanyID,
          c.Name as CompanyName,
          d.Name as DeptName,
          sum(case when e.RegularDate is null then 0 else 1 end)as ConversionCount,
          count(distinct a.Position) as JobCount,
          count(distinct a.Name)as RcCount,
          sum(case when a.Done='2'then 1 else 0 end) as DoneCount,
          cast(cast(sum(case when a.Done='2'then 1 else 0 end)as dec(18,2))/cast(count(a.Name)as dec(18,2))as dec(18,4))as PassPercent
          from rc_ResumeInfoes a
          join  rc_Addition b on a.Position=b.Position
          left join hr_Company c on b.CompanyID=c.CompanyID
          left join hr_Department d on b.DeptID=d.DeptID
          left join hr_Employee e on a.EmployeeID=e.EmployeeID
          where  convert(varchar(7),a.ImportTime,126)like '%'+@YearMonth+'%' and b.CompanyID=@CompanyID
          group by b.DeptID,b.CompanyID,c.Name,d.Name
        </Sql>
        <Sql Name="Delete" ConnectionName="Auth" SqlType="Execute" Description="删除简历">
          declare @sql varchar(max);
          set @sql='
          if exists(select [RID] from [rc_ResumeInfoes] where [RID] in ('''+replace(@RID,',',''',''')+''') and Done&gt;0)
          begin
          raiserror(''存在已预约信息，删除失败'',16,1) with nowait
          end
          else
          begin
          delete from [rc_ResumeInfoes] where [RID] in ('''+replace(@RID,',',''',''')+''')
          end;'
          exec(@sql);
        </Sql>
      </Table>
      <Table Name="rc_InterviewInfoes" ConnectionName="Auth" TableName="rc_InterviewInfoes">
        <Sql Name="QueryR" ConnectionName="Auth" Description="检索人才库">
          declare @dataBegin varchar(30)
          declare @dataEnd varchar(30)
          if (@Data1='')
          begin
          set @dataBegin ='1900-01-01'
          end
          else
          begin
          set @dataBegin =@Data1
          end
          if (@Data2='1900-01-01' or @Data2='')
          begin
          set @dataEnd='2100-12-31'
          end
          else
          begin
          set @dataEnd=@Data2
          end
          SELECT b.[RID],[Name],[Sex],[Position],[YearsOfWorking],[MobilePhone],[Email],CONVERT(nvarchar(20), [CV_GetTime],23) as [CV_GetTime],CONVERT(nvarchar(20), [ImportTime],20) as [ImportTime],
          case when [Done]=0 then '未创建预约' when [Done]=1 then '已创建预约'  when [Done]=2 then '已转员工'   when [Done]=3 then '应聘失败' else '' end as [Done],
          [AppointmentSponsor],
          CONVERT(nvarchar(20),[AppointmentTime],20) as AppointmentTime,
          case when [AppointmentRresult]=1 then '预约成功' when [AppointmentRresult]=2 then '预约失败'  when [AppointmentRresult]=0 then '未预约' else '' end as AppointmentRresult,
          case when CONVERT(nvarchar(20),[AuditionTime],23)='1900-01-01' then '' else CONVERT(nvarchar(20),[AuditionTime],20) end as [AuditionTime],
          [AppointmentRemark],[AppointmentReservation],
          case when [AuditionEmail]=1 then '已发送' when [AuditionEmail]=0 then '未发送' else '' end as [AuditionEmail],
          case when [AuditionRresult]=1 then '通过'  when [AuditionRresult]=2 then '未通过'  when [AuditionRresult]=0 then '未面试'  else '' end as [AuditionRresult],
          [SalaryRange],[CanReport],[AuditionRemark],
          case when [AuditRresult]=1 then '通过'  when [AuditRresult]=2 then '未通过'  when [AuditRresult]=0 then '未审核'  else '' end as [AuditRresult],
          [AuditOpinion],[Audit],
          case when [Noticed]=1 then '同意报到' when [Noticed]=2 then '不同意报到' when [Noticed]=0 then '未通知' else '' end as [Noticed],
          case when CONVERT(nvarchar(20),[ReportTime],23)='1900-01-01' then '' else CONVERT(nvarchar(20),[ReportTime],20) end as [ReportTime],
          [ReportRemark],
          case when [ReportEmail]=1 then '已发送' when [ReportEmail]=0 then '未发送' else '' end as [ReportEmail],
          case when [IsToEmployee]=2 then '已无效'  when [IsToEmployee]=1 then '已转员工' when [IsToEmployee]=0 then '未转员工' else '' end as [IsToEmployee]
          FROM [dbo].[rc_InterviewInfoes] a right join  [dbo].[rc_ResumeInfoes] b on a.RID=b.RID
          where  [Done] like '%'+@Done+'%'
          and [Name] like '%'+@Name+'%'
          and [Position] like '%'+@Position+'%'
          and [Position] in (select distinct  Position from rc_Addition where DeptID like '%'+@DeptID+'%')
          and ([Sex] like '%'+@Key+'%' or [YearsOfWorking] like '%'+@Key+'%' or [Degree] like '%'+@Key+'%'  or [HuKou] like '%'+@Key+'%')
          and  [CV_GetTime]  between  @dataBegin and @dataEnd
          order by Done desc ,AppointmentRresult desc,AuditionRresult,Noticed,CV_GetTime desc
        </Sql>
        <Sql Name="CreateYuYue" ConnectionName="Auth" SqlType="Execute" Description="创建预约">
          DECLARE @sql varchar(max);
          SET @sql= 'if exists(select * FROM  rc_ResumeInfoes where RID in (''' + REPLACE(@RID,',',''',''') + ''') and Done not in (0,3))
          begin
          RAISERROR(''已存在预约信息,预约失败'',15,1) WITH NOWAIT
          END
          ELSE
          BEGIN
          delete from  rc_InterviewInfoes where  RID in (''' + REPLACE(@RID,',',''',''') + ''')
     insert into rc_InterviewInfoes(RID,DeptID,IsActive ,AppointmentRresult,[AppointmentSponsor],[AppointmentTime],[CreatedUser],[CreatedTime],[ModifiedUser],[ModifiedTime]) 
     select RID,'''+@DeptID+''','''+@IsActive+''',0,'''+@EmployeeID+''','''+@CreatedTime+''','''+@CreatedUser+''','''+@CreatedTime+''','''+@ModifiedUser+''','''+@ModifiedTime+''' 
     from rc_ResumeInfoes where RID in (''' + REPLACE(@RID,',',''',''') + ''');
          update rc_ResumeInfoes SET Done=1 where  RID in (''' + REPLACE(@RID,',',''',''') + ''');

          SELECT a.[RID],[Name],[Sex],[Position],[YearsOfWorking],[MobilePhone],[Email],CONVERT(nvarchar(20), [CV_GetTime],23) as [CV_GetTime],CONVERT(nvarchar(20), [ImportTime],20) as [ImportTime],
          case when [Done]=1 then '''+'已创建预约'+'''  when [Done]=2 then '''+'已转员工'+''' when [Done]=3 then '''+'应聘失败'+''' else '''' end as [Done] ,
          CONVERT(nvarchar(20),[AppointmentTime],20) as AppointmentTime,
          '''+ '未预约' + '''  as  [AppointmentRresult],
          '''+ '' + '''  as [AuditionEmail],
          '''+ '' + '''  as [AuditionRresult],
          '''+ '' + '''  as [AuditRresult],
          '''+ '' + '''  as [Noticed],
          '''+ '' + '''  as [ReportEmail],
          '''+ '' + '''  as [IsToEmployee]
          from rc_ResumeInfoes a left join rc_InterviewInfoes b on a.RID=b.RID where  a.RID in (''' + REPLACE(@RID,',',''',''') + ''')
          END;'
          EXEC (@sql)
        </Sql>
        <Sql Name="Delete" ConnectionName="Auth" SqlType="Execute" Description="删除">
          DELETE FROM [rc_InterviewInfoes]
          WHERE [RID]=@RID;
        </Sql>
        <Sql Name="ResultYuYue" SharedName="ResultYuYue" ConnectionName="Auth" Description="预约结果">
          select '0' as ID,'未预约' as Name union select '1' ,'预约成功' union select '2' ,'预约失败' union select '','全部'
        </Sql>
        <Sql Name="ResultMianShi" SharedName="ResultMianShi" ConnectionName="Auth" Description="面试结果">
          select '0' as ID,'未面试' as Name union select '1' ,'面试成功' union select '2' ,'面试失败' union select '3' ,'预约失败' union select '','全部'
        </Sql>
        <Sql Name="ResultShenHe" SharedName="ResultShenHe" ConnectionName="Auth" Description="审核结果">
          select '0' as ID,'未审核' as Name union select '1' ,'审核成功' union select '2' ,'审核失败' union select '','全部'
        </Sql>
        <Sql Name="ResultBaoDao" SharedName="ResultBaoDao" ConnectionName="Auth" Description="通知报到结果">
          select '0' as ID,'未通知' as Name union select '1' ,'同意报到' union select '2' ,'不同意报到' union select '','全部'
        </Sql>
        <Sql Name="ResultToEmployee" SharedName="ResultToEmployee" ConnectionName="Auth" Description="转员工结果">
          select '0' as ID,'未转员工' as Name  union select '1' ,'已转员工' union select '2' ,'已无效' union select '','全部'
        </Sql>
        <Sql Name="Query" ConnectionName="Auth" Description="检索面试者">
          SELECT b.[RID],b.[Name],b.[Sex],b.[Position],b.[YearsOfWorking],b.[MobilePhone],b.[Email],
          case  b.[Done] when 0 then '未创建预约' when 1 then '已创建预约'  when 2 then '已转员工'   when 3 then '应聘失败' else '' end as [Done],
          a.[AppointmentSponsor],
          CONVERT(nvarchar(20),a.[AppointmentTime],20) as AppointmentTime,
          case a.[AppointmentRresult] when 1 then '预约成功' when 2 then '预约失败' when 0 then '未预约' else '' end as AppointmentRresult,
          case when CONVERT(nvarchar(20),a.[AuditionTime],23)='1900-01-01' then '' else CONVERT(nvarchar(20),a.[AuditionTime],20) end as [AuditionTime],
          a.[AppointmentRemark],
          a.[AppointmentReservation],
          case a.[AuditionEmail] when 1 then '已发送' when 0 then '未发送' else '' end as [AuditionEmail],
          case a.[AuditionRresult] when 1 then '通过'  when 2 then '未通过'  when 0 then '未面试'  else '' end as [AuditionRresult],
          a.[SalaryRange],
          a.[CanReport],
          a.[AuditionRemark],
          case a.[AuditRresult] when 1 then '通过'  when 2 then '未通过'  when 0 then '未审核'  else '' end as [AuditRresult],
          a.[AuditOpinion],
          a.[Audit],
          case a.[Noticed] when 1 then '同意报到' when 2 then '不同意报到' when 0 then '未通知' else '' end as [Noticed],
          case when CONVERT(nvarchar(20),a.[ReportTime],23)='1900-01-01' then '' else CONVERT(nvarchar(20),a.[ReportTime],20) end as [ReportTime],
          [ReportRemark],
          case a.[ReportEmail] when 1 then '已发送' when 0 then '未发送' else '' end as [ReportEmail],
          case a.[IsToEmployee] when 2 then '已无效' when 1 then '已转员工' when 0 then '未转员工' else '' end as [IsToEmployee]
          FROM [dbo].[rc_InterviewInfoes] a left join
          [dbo].[rc_ResumeInfoes] b on a.RID=b.RID
          where  ISNULL(a.AppointmentRresult,'') like '%'+@AppointmentRresult+'%'
          and ISNULL(a.AuditionRresult,'') like '%'+@AuditionRresult+'%'
          and ISNULL(a.AuditRresult,'') like '%'+@AuditRresult+'%'
          and ISNULL(a.Noticed,'') like '%'+@Noticed+'%'
          and ISNULL(a.IsToEmployee,'') like '%'+@IsToEmployee+'%'
          and b.[Name]  like '%'+@Name+'%'
          and b.[Position] like '%'+@Position+'%'
          and b.[Position] in (select distinct  Position from rc_Addition where DeptID like '%'+@DeptID+'%')
          and (b.[Sex] like '%'+@Key+'%' or [YearsOfWorking] like '%'+@Key+'%' or [Degree] like '%'+@Key+'%'  or [HuKou] like '%'+@Key+'%')
          order by a.AppointmentRresult,a.AppointmentTime desc,a.AuditionRresult,a.AuditionTime desc,a.Noticed,a.IsToEmployee,b.Done,a.ReportTime desc
        </Sql>
        <Sql Name="YesNo" SharedName="YesNo" ConnectionName="Auth" Description="结果（是/否）">
          select 1 as ID,'是' as Name union select 2 ,'否'
        </Sql>
        <Sql Name="UpdateYuYueResult" ConnectionName="Auth" SqlType="Execute" Description="录入预约结果">
          IF exists(select * from  [rc_InterviewInfoes] where [RID]=@RID and [AuditionRresult] in (1,2))
          begin
          RAISERROR('面试已结束，预约信息无法修改',15,1) WITH NOWAIT
          END
          ELSE
          BEGIN
          if(@AppointmentRresult=1 and CONVERT(nvarchar(20),CONVERT(datetime,@AuditionTime),23)='1900-01-01')
          begin
          raiserror('面试时间不能为空',16,1) with nowait
          end
          else
          begin
          if(@AppointmentRresult=1 and DATEDIFF(minute,CONVERT(datetime,@AuditionTime),GETDATE())&gt;0)
          begin
          raiserror('面试时间不能早于当前时间',16,1) with nowait
          end
          else
          begin
          declare @isActive int, @done int,@state int
          if(@AppointmentRresult=2)
          begin
          set @isActive=0
          set @done=3
          set @AuditionTime='1900-01-01'
          end
          if(@AppointmentRresult=1)
          begin
          set @isActive=1
          set @done=1
          set @state=0
          end
          UPDATE [rc_ResumeInfoes]  SET  [Done]=@done WHERE [RID]=@RID ;
          UPDATE [rc_InterviewInfoes]  SET  [AppointmentRresult]=@AppointmentRresult,[AuditionEmail]=@state,[AuditionTime]=@AuditionTime,
          [AuditionRresult]=@state,[AppointmentRemark]=@AppointmentRemark,[AppointmentReservation]=@UserID,[IsActive]=@isActive WHERE [RID]=@RID ;
          SELECT b.[RID],[Name],[Sex],[Position],[YearsOfWorking],[MobilePhone],[Email],
          case when [Done]=0 then '未创建预约' when [Done]=1 then '已创建预约'  when [Done]=2 then '已转员工'   when [Done]=3 then '应聘失败' else '' end as [Done],
          [AppointmentSponsor],
          CONVERT(nvarchar(20),[AppointmentTime],20) as AppointmentTime,
          case when [AppointmentRresult]=1 then '预约成功' when [AppointmentRresult]=2 then '预约失败'  when [AppointmentRresult]=0 then '未预约' else '' end as AppointmentRresult,
          case when CONVERT(nvarchar(20),[AuditionTime],23)='1900-01-01' then '' else CONVERT(nvarchar(20),[AuditionTime],20) end as [AuditionTime],
          [AppointmentRemark],[AppointmentReservation],
          case when [AuditionEmail]=1 then '已发送' when [AuditionEmail]=0 then '未发送' else '' end as [AuditionEmail],
          case when [AuditionRresult]=1 then '通过'  when [AuditionRresult]=2 then '未通过'  when [AuditionRresult]=0 then '未面试'  else '' end as [AuditionRresult]
          FROM [dbo].[rc_InterviewInfoes] a right join  [dbo].[rc_ResumeInfoes] b on a.RID=b.RID
          WHERE a.[RID]=@RID;
          end
          end
          end
        </Sql>
        <Sql Name="UpdateMianShiResult" ConnectionName="Auth" SqlType="Execute" Description="录入面试结果">
          IF exists(select * from [rc_InterviewInfoes] where [RID]=@RID and [AuditRresult] in (1,2))
          BEGIN
          RAISERROR('审核已结束,面试信息不能修改',15,1) WITH NOWAIT
          END
          ELSE
          BEGIN
          declare @isActive int, @state int,@done int
          set @isActive =0
          set @done =3
          if(@AuditionRresult=1)
          begin
          set @state =0
          set @isActive =1
          set @done =1
          end
          UPDATE [rc_ResumeInfoes]  SET  [Done]=@done WHERE [RID]=@RID ;
          update [rc_InterviewInfoes] set [SalaryRange]=@SalaryRange,[CanReport]=@CanReport, AuditionRresult =@AuditionRresult,[AuditionRemark]=@AuditionRemark,[AuditRresult ]=@state,[IsActive]=@isActive WHERE [RID]=@RID;

          SELECT b.[RID],[Name],[Sex],[Position],[YearsOfWorking],[MobilePhone],[Email],
          case when [Done]=0 then '未创建预约' when [Done]=1 then '已创建预约'  when [Done]=2 then '已转员工'   when [Done]=3 then '应聘失败' else '' end as [Done],
          [AppointmentSponsor],
          CONVERT(nvarchar(20),[AppointmentTime],20) as AppointmentTime,
          case when [AppointmentRresult]=1 then '预约成功' when [AppointmentRresult]=2 then '预约失败'  when [AppointmentRresult]=0 then '未预约' else '' end as AppointmentRresult,
          case when CONVERT(nvarchar(20),[AuditionTime],23)='1900-01-01' then '' else CONVERT(nvarchar(20),[AuditionTime],20) end as [AuditionTime],
          [AppointmentRemark],[AppointmentReservation],
          case when [AuditionEmail]=1 then '已发送' when [AuditionEmail]=0 then '未发送' else '' end as [AuditionEmail],
          case when [AuditionRresult]=1 then '通过'  when [AuditionRresult]=2 then '未通过'  when [AuditionRresult]=0 then '未面试'  else '' end as [AuditionRresult],
          [SalaryRange],[CanReport],[AuditionRemark],
          case when [AuditRresult]=1 then '通过'  when [AuditRresult]=2 then '未通过'  when [AuditRresult]=0 then '未审核'  else '' end as [AuditRresult],
          [AuditOpinion],[Audit],
          case when [Noticed]=1 then '同意报到' when [Noticed]=2 then '不同意报到' when [Noticed]=0 then '未通知' else '' end as [Noticed],
          case when CONVERT(nvarchar(20),[ReportTime],23)='1900-01-01' then '' else CONVERT(nvarchar(20),[ReportTime],20) end as [ReportTime],
          [ReportRemark],
          case when [ReportEmail]=1 then '已发送' when [ReportEmail]=0 then '未发送' else '' end as [ReportEmail],
          case when [IsToEmployee]=1 then '已转员工' when [IsToEmployee]=0 then '未转员工' else '' end as [IsToEmployee]
          FROM [dbo].[rc_InterviewInfoes] a right join  [dbo].[rc_ResumeInfoes] b on a.RID=b.RID
          WHERE a.[RID]=@RID;
          end
        </Sql>
        <Sql Name="UpdateShenHeResult" ConnectionName="Auth" SqlType="Execute" Description="录入审核结果">
          declare @state int,@isActive int,@done int
          set @isActive =0
          set @done =3
          if(@AuditRresult =1)
          begin
          set @state =0
          set @isActive =1
          set @done =1
          end

          UPDATE [rc_ResumeInfoes]  SET  [Done]=@done WHERE [RID]=@RID ;
          UPDATE [rc_InterviewInfoes]  SET  [AuditRresult ]=@AuditRresult ,[AuditOpinion]=@AuditOpinion,[Audit]=@UserID,[Noticed]=@state,[IsActive]=@isActive WHERE [RID]=@RID ;

          SELECT b.[RID],[Name],[Sex],[Position],[YearsOfWorking],[MobilePhone],[Email],
          case when [Done]=0 then '未创建预约' when [Done]=1 then '已创建预约'  when [Done]=2 then '已转员工'   when [Done]=3 then '应聘失败' else '' end as [Done],
          [AppointmentSponsor],
          CONVERT(nvarchar(20),[AppointmentTime],20) as AppointmentTime,
          case when [AppointmentRresult]=1 then '预约成功' when [AppointmentRresult]=2 then '预约失败'  when [AppointmentRresult]=0 then '未预约' else '' end as AppointmentRresult,
          case when CONVERT(nvarchar(20),[AuditionTime],23)='1900-01-01' then '' else CONVERT(nvarchar(20),[AuditionTime],20) end as [AuditionTime],
          [AppointmentRemark],[AppointmentReservation],
          case when [AuditionEmail]=1 then '已发送' when [AuditionEmail]=0 then '未发送' else '' end as [AuditionEmail],
          case when [AuditionRresult]=1 then '通过'  when [AuditionRresult]=2 then '未通过'  when [AuditionRresult]=0 then '未面试'  else '' end as [AuditionRresult],
          [SalaryRange],[CanReport],[AuditionRemark],
          case when [AuditRresult]=1 then '通过'  when [AuditRresult]=2 then '未通过'  when [AuditRresult]=0 then '未审核'  else '' end as [AuditRresult],
          [AuditOpinion],[Audit],
          case when [Noticed]=1 then '同意报到' when [Noticed]=2 then '不同意报到' when [Noticed]=0 then '未通知' else '' end as [Noticed],
          case when CONVERT(nvarchar(20),[ReportTime],23)='1900-01-01' then '' else CONVERT(nvarchar(20),[ReportTime],20) end as [ReportTime],
          [ReportRemark],
          case when [ReportEmail]=1 then '已发送' when [ReportEmail]=0 then '未发送' else '' end as [ReportEmail],
          case when [IsToEmployee]=1 then '已转员工' when [IsToEmployee]=0 then '未转员工' else '' end as [IsToEmployee]
          FROM [dbo].[rc_InterviewInfoes] a right join  [dbo].[rc_ResumeInfoes] b on a.RID=b.RID
          WHERE a.[RID]=@RID;
        </Sql>
        <Sql Name="UpdateBaoDaoResult" ConnectionName="Auth" SqlType="Execute" Description="录入报到结果">
          if(@Noticed=1 and CONVERT(nvarchar(20),CONVERT(datetime,@ReportTime),23)='1900-01-01')
          begin
          raiserror('报到时间不能为空',16,1) with nowait
          end
          else
          begin
          if(@Noticed=1 and DATEDIFF(minute,CONVERT(datetime,@ReportTime),GETDATE())&gt;0)
          begin
          raiserror('报到时间不能早于当前时间',16,1) with nowait
          end
          else
          begin
          declare @state int,@isActive   int,  @done int
          if(@Noticed=1)
          begin
          set @state =0
          set @isActive=1
          set @done=1
          end
          else if(@Noticed=2)
          begin
          set @isActive=0
          set @done=3
          set @ReportTime='1900-01-01'
          end
          UPDATE [rc_ResumeInfoes]  SET  [Done]=@done WHERE [RID]=@RID ;
          UPDATE [rc_InterviewInfoes]  SET  [Noticed]=@Noticed,[ReportTime]=@ReportTime,[ReportRemark]=@ReportRemark,[ReportEmail]=@state, [IsToEmployee]=@state,[IsActive]=@isActive   WHERE [RID]=@RID ;

          SELECT b.[RID],[Name],[Sex],[Position],[YearsOfWorking],[MobilePhone],[Email],
          case when [Done]=0 then '未创建预约' when [Done]=1 then '已创建预约'  when [Done]=2 then '已转员工'   when [Done]=3 then '应聘失败' else '' end as [Done],
          [AppointmentSponsor],
          CONVERT(nvarchar(20),[AppointmentTime],20) as AppointmentTime,
          case when [AppointmentRresult]=1 then '预约成功' when [AppointmentRresult]=2 then '预约失败'  when [AppointmentRresult]=0 then '未预约' else '' end as AppointmentRresult,
          case when CONVERT(nvarchar(20),[AuditionTime],23)='1900-01-01' then '' else CONVERT(nvarchar(20),[AuditionTime],20) end as [AuditionTime],
          [AppointmentRemark],[AppointmentReservation],
          case when [AuditionEmail]=1 then '已发送' when [AuditionEmail]=0 then '未发送' else '' end as [AuditionEmail],
          case when [AuditionRresult]=1 then '通过'  when [AuditionRresult]=2 then '未通过'  when [AuditionRresult]=0 then '未面试'  else '' end as [AuditionRresult],
          [SalaryRange],[CanReport],[AuditionRemark],
          case when [AuditRresult]=1 then '通过'  when [AuditRresult]=2 then '未通过'  when [AuditRresult]=0 then '未审核'  else '' end as [AuditRresult],
          [AuditOpinion],[Audit],
          case when [Noticed]=1 then '同意报到' when [Noticed]=2 then '不同意报到' when [Noticed]=0 then '未通知' else '' end as [Noticed],
          case when CONVERT(nvarchar(20),[ReportTime],23)='1900-01-01' then '' else CONVERT(nvarchar(20),[ReportTime],20) end as [ReportTime],
          [ReportRemark],
          case when [ReportEmail]=1 then '已发送' when [ReportEmail]=0 then '未发送' else '' end as [ReportEmail],
          case when [IsToEmployee]=1 then '已转员工' when [IsToEmployee]=0 then '未转员工' else '' end as [IsToEmployee]
          FROM [dbo].[rc_InterviewInfoes] a right join  [dbo].[rc_ResumeInfoes] b on a.RID=b.RID
          WHERE a.[RID]=@RID;
          end
          end

        </Sql>
        <Sql Name="GetItem" ConnectionName="Auth" SqlType="Execute" Description="获取面试信息">
          SELECT b.[RID],[Name],[Sex],[Position],[YearsOfWorking],[MobilePhone],[Email],
          case when [Done]=0 then '未创建预约' when [Done]=1 then '已创建预约'  when [Done]=2 then '已转员工'   when [Done]=3 then '应聘失败' else '' end as [Done],
          [AppointmentSponsor],
          CONVERT(nvarchar(20),[AppointmentTime],20) as AppointmentTime,
          case when [AppointmentRresult]=0 then null else [AppointmentRresult] end as [AppointmentRresult],
          case when CONVERT(nvarchar(20),[AuditionTime],23)='1900-01-01' then '' else CONVERT(nvarchar(20),[AuditionTime],20) end as [AuditionTime],
          [AppointmentRemark],[AppointmentReservation],
          [AuditionEmail],
          case when [AuditionRresult]=0 then null else [AuditionRresult] end as [AuditionRresult],
          [SalaryRange],[CanReport],[AuditionRemark],
          case when [AuditRresult]=0 then null else [AuditRresult] end as  [AuditRresult],
          [AuditOpinion],[Audit],
          case when [Noticed]=0 then null else [Noticed] end as  [Noticed],
          case when CONVERT(nvarchar(20),[ReportTime],23)='1900-01-01' then '' else CONVERT(nvarchar(20),[ReportTime],20) end as [ReportTime],
          [ReportRemark],
          [ReportEmail],
          [IsToEmployee]
          FROM [dbo].[rc_InterviewInfoes] a right join  [dbo].[rc_ResumeInfoes] b on a.RID=b.RID
          WHERE a.[RID]=@RID
        </Sql>
        <Sql Name="UpdateYuYueEmailState" ConnectionName="Auth" Description="发送预约邮件">
          UPDATE [rc_InterviewInfoes]  SET  [AuditionEmail]=1 WHERE [RID]=@RID ;

          SELECT b.[RID],[Name],[Sex],[Position],[YearsOfWorking],[MobilePhone],[Email],
          case when [Done]=0 then '未创建预约' when [Done]=1 then '已创建预约'  when [Done]=2 then '已转员工'   when [Done]=3 then '应聘失败' else '' end as [Done],
          [AppointmentSponsor],
          CONVERT(nvarchar(20),[AppointmentTime],20) as AppointmentTime,
          case when [AppointmentRresult]=1 then '预约成功' when [AppointmentRresult]=2 then '预约失败'  when [AuditionEmail]=0 then '未预约' else '' end as AppointmentRresult,
          case when CONVERT(nvarchar(20),[AuditionTime],23)='1900-01-01' then '' else CONVERT(nvarchar(20),[AuditionTime],20) end as [AuditionTime],
          [AppointmentRemark],[AppointmentReservation],
          case when [AuditionEmail]=1 then '已发送' when [AuditionEmail]=0 then '未发送' else '' end as [AuditionEmail],
          case when [AuditionRresult]=1 then '通过'  when [AuditionRresult]=2 then '未通过'  when [AuditionRresult]=0 then '未面试'  else '' end as [AuditionRresult],
          [SalaryRange],[CanReport],[AuditionRemark],
          case when [AuditRresult]=1 then '通过'  when [AuditRresult]=2 then '未通过'  when [AuditRresult]=0 then '未审核'  else '' end as [AuditRresult],
          [AuditOpinion],[Audit],
          case when [Noticed]=1 then '同意报到' when [Noticed]=2 then '不同意报到' when [Noticed]=0 then '未通知' else '' end as [Noticed],
          case when CONVERT(nvarchar(20),[ReportTime],23)='1900-01-01' then '' else CONVERT(nvarchar(20),[ReportTime],20) end as [ReportTime],
          [ReportRemark],
          case when [ReportEmail]=1 then '已发送' when [ReportEmail]=0 then '未发送' else '' end as [ReportEmail]
          FROM [dbo].[rc_InterviewInfoes] a right join  [dbo].[rc_ResumeInfoes] b on a.RID=b.RID
          WHERE a.[RID]=@RID;
        </Sql>
        <Sql Name="UpdateBaoDaoEmailState" ConnectionName="Auth" Description="发送报到邮件">
          UPDATE [rc_InterviewInfoes]  SET  [ReportEmail]=1 WHERE [RID]=@RID ;

          SELECT b.[RID],[Name],[Sex],[Position],[YearsOfWorking],[MobilePhone],[Email],
          case when [Done]=0 then '未创建预约' when [Done]=1 then '已创建预约'  when [Done]=2 then '已转员工'   when [Done]=3 then '应聘失败' else '' end as [Done],
          [AppointmentSponsor],
          CONVERT(nvarchar(20),[AppointmentTime],20) as AppointmentTime,
          case when [AppointmentRresult]=1 then '预约成功' when [AppointmentRresult]=2 then '预约失败'  when [AuditionEmail]=0 then '未预约' else '' end as AppointmentRresult,
          case when CONVERT(nvarchar(20),[AuditionTime],23)='1900-01-01' then '' else CONVERT(nvarchar(20),[AuditionTime],20) end as [AuditionTime],
          [AppointmentRemark],[AppointmentReservation],
          case when [AuditionEmail]=1 then '已发送' when [AuditionEmail]=0 then '未发送' else '' end as [AuditionEmail],
          case when [AuditionRresult]=1 then '通过'  when [AuditionRresult]=2 then '未通过'  when [AuditionRresult]=0 then '未面试'  else '' end as [AuditionRresult],
          [SalaryRange],[CanReport],[AuditionRemark],
          case when [AuditRresult]=1 then '通过'  when [AuditRresult]=2 then '未通过'  when [AuditRresult]=0 then '未审核'  else '' end as [AuditRresult],
          [AuditOpinion],[Audit],
          case when [Noticed]=1 then '同意报到' when [Noticed]=2 then '不同意报到' when [Noticed]=0 then '未通知' else '' end as [Noticed],
          case when CONVERT(nvarchar(20),[ReportTime],23)='1900-01-01' then '' else CONVERT(nvarchar(20),[ReportTime],20) end as [ReportTime],
          [ReportRemark],
          case when [ReportEmail]=1 then '已发送' when [ReportEmail]=0 then '未发送' else '' end as [ReportEmail]
          FROM [dbo].[rc_InterviewInfoes] a right join  [dbo].[rc_ResumeInfoes] b on a.RID=b.RID
          WHERE a.[RID]=@RID;
        </Sql>
        <Sql Name="GetDetail" ConnectionName="Auth" Description="查看面试各环节详细信息">
          declare @appointmentSponsor varchar(8),@appointmentReservation varchar(8),@audit varchar(8)
          select @appointmentSponsor=Name from hr_Employee a join [rc_InterviewInfoes] b on a.EmployeeID=b.AppointmentSponsor WHERE b.[RID]=@RID
          select @appointmentReservation=Name from hr_Employee a join [rc_InterviewInfoes] b on a.EmployeeID=b.AppointmentReservation WHERE b.[RID]=@RID
          select @audit=Name from hr_Employee a join [rc_InterviewInfoes] b on a.EmployeeID=b.Audit WHERE b.[RID]=@RID
          SELECT b.[RID],[Name],[Sex],[Position],[YearsOfWorking],
          @appointmentSponsor as [AppointmentSponsor],
          CONVERT(nvarchar(20),[AppointmentTime],20) as AppointmentTime,
          case when [AppointmentRresult]=1 then '预约成功' when [AppointmentRresult]=2 then '预约失败'  when [AppointmentRresult]=0 then '未预约' else '' end as AppointmentRresult,
          case when CONVERT(nvarchar(20),[AuditionTime],23)='1900-01-01' then '' else CONVERT(nvarchar(20),[AuditionTime],20) end as [AuditionTime],
          [AppointmentRemark],
          @appointmentReservation as [AppointmentReservation],
          case when [AuditionEmail]=1 then '已发送' when [AuditionEmail]=0 then '未发送' else '' end as [AuditionEmail],
          case when [AuditionRresult]=1 then '通过'  when [AuditionRresult]=2 then '未通过'  when [AuditionRresult]=0 then '未面试'  else '' end as [AuditionRresult],
          [SalaryRange],[CanReport],[AuditionRemark],
          case when [AuditRresult]=1 then '通过'  when [AuditRresult]=2 then '未通过'  when [AuditRresult]=0 then '未审核'  else '' end as [AuditRresult],
          [AuditOpinion],
          @audit as [Audit],
          case when [Noticed]=1 then '同意报到' when [Noticed]=2 then '不同意报到' when [Noticed]=0 then '未通知' else '' end as [Noticed],
          case when CONVERT(nvarchar(20),[ReportTime],23)='1900-01-01' then '' else CONVERT(nvarchar(20),[ReportTime],20) end as [ReportTime],
          [ReportRemark],
          case when [ReportEmail]=1 then '已发送' when [ReportEmail]=0 then '未发送' else '' end as [ReportEmail],
          case when [IsToEmployee]=2 then '已无效' when [IsToEmployee]=1 then '已转员工' when [IsToEmployee]=0 then '未转员工' else '' end as [IsToEmployee]
          FROM [dbo].[rc_InterviewInfoes] a right join  [dbo].[rc_ResumeInfoes] b on a.RID=b.RID
          WHERE a.[RID]=@RID
        </Sql>
        <Sql Name="UpdateToEmployee" ConnectionName="Auth" Description="应聘者转员工">
          if exists(select * FROM [dbo].[rc_InterviewInfoes] WHERE [RID]=@RID and  [IsToEmployee]=3)
          begin
          RAISERROR ('该信息已无效，无法保存！',15, 1) WITH NOWAIT
          end
          else  if exists(select * FROM [dbo].[rc_InterviewInfoes] WHERE [RID]=@RID and  [IsToEmployee]=1)
          begin
          RAISERROR ('已经存在相同信息，无法保存！',15, 1) WITH NOWAIT
          end
          else if exists(select * from hr_Employee where  [CardNo]=@CardNo  and IsActive=1)
          begin
          RAISERROR ('已经存在相同信息，无法保存！',15, 1) WITH NOWAIT
          end
          else if exists(select * from sys_User where [Email]=@Email and IsValid=1)
          begin
          raiserror('已经存在相同系统账户，无法保存！',16,1) with nowait
          end
          else if(DATEDIFF(DAY,GETDATE(),CONVERT(DATE,@Birthday))&gt;0)
          begin
          raiserror('出生日期不能晚于当前日期！',16,1) with nowait
          end
          else if(DATEDIFF(DAY,convert(date,@ConventionStartDate,20),convert(date,@ConventionEndDate,20))&lt;0)
          begin
          raiserror('实习合同终止日期必须大于实习合同起始日期！',16,1) with nowait
          end
          else if(DATEDIFF(DAY,convert(date,@ContractStartDate,20),convert(date,@ContractEndDate,20))&lt;0)
          begin
          raiserror('正式合同终止日期必须大于正式合同起始日期！',16,1) with nowait
          end
          else
          begin
          if(@CreateSysUser='on')
          begin
          declare @userID varchar(6)
          exec sp_CreateSerialCode 'User','U',6,@userID output
          insert into [sys_User]([UserID],[UserName],[FullName],[Email],[Password],[IsValid],[CreatedUser],[CreatedTime],[ModifiedUser],[ModifiedTime] )
          values(@userID,@Email,@Name,@Email,'5A38563FFCF23CF186A23CC88B28115D',1,@CreatedUser,@CreatedTime,@ModifiedUser,@ModifiedTime)
          end
          declare @employeeID varchar(6)
          exec sp_CreateSerialCode 'Employee','E',6,@employeeID output
          declare @attendance bit
          if(@IsAttendance='on')
          begin
          set  @attendance=1
          end
          else
          begin
          set  @attendance=0
          end
          INSERT INTO [hr_Employee]
          ([EmployeeID],[CompanyID],[DeptID],[JobID],[UserID],[Name],[Sex],[CardNo],[Birthday],[Nation],[Marriage],[Politics],[Native],[RegisterAddress],[Health],[Weight],[Height],
          [LiveAddress],[Telephone],[Mobiphone],[Education],[HireDate],[Email],[Pemail],[CardID],[ImoID],[ExtNum],[EduName],[Major],[FirstWorkDate],
          [EduEndDate],[Convention],[ConventionStartDate],[ConventionEndDate],[ContractOfSale],[ContractStartDate],[ContractEndDate],
          [EnName],[State],[JobState],[IsActive],[IsAttendance],[PhotoPath],[CreatedUser],[CreatedTime],[ModifiedUser],[ModifiedTime])
          VALUES(@employeeID,@CompanyID ,@DeptID,@JobID,@UserID,@Name,@Sex,@CardNo,@Birthday,@Nation,@Marriage,@Politics,@Native,@RegisterAddress,@Health,@Weight,@Height,
          @LiveAddress,@Telephone,@Mobiphone,@Education,@HireDate,@Email,@Pemail,@CardID,@ImoID,@ExtNum,@EduName,@Major,@FirstWorkDate,
          @EduEndDate,@Convention,@ConventionStartDate,@ConventionEndDate,@ContractOfSale,@ContractStartDate,@ContractEndDate,
          @EnName,@State,@JobState,1,@attendance,@PhotoPath,@CreatedUser,@CreatedTime,@ModifiedUser,@ModifiedTime);

          UPDATE [rc_ResumeInfoes] SET [EmployeeID]=@employeeID, [Done]=2 WHERE [RID]=@RID ;
          UPDATE [rc_InterviewInfoes] SET [IsToEmployee]=1, [IsActive]=1 WHERE [RID]=@RID ;

          SELECT b.[RID],[Name],[Sex],[Position],[YearsOfWorking],[MobilePhone],[Email],
          case when [Done]=0 then '未创建预约' when [Done]=1 then '已创建预约'  when [Done]=2 then '已转员工'   when [Done]=3 then '应聘失败' else '' end as [Done],
          [AppointmentSponsor],
          CONVERT(nvarchar(20),[AppointmentTime],20) as AppointmentTime,
          case when [AppointmentRresult]=1 then '预约成功' when [AppointmentRresult]=2 then '预约失败'  when [AppointmentRresult]=0 then '未预约' else '' end as AppointmentRresult,
          case when CONVERT(nvarchar(20),[AuditionTime],23)='1900-01-01' then '' else CONVERT(nvarchar(20),[AuditionTime],20) end as [AuditionTime],
          [AppointmentRemark],[AppointmentReservation],
          case when [AuditionEmail]=1 then '已发送' when [AuditionEmail]=0 then '未发送' else '' end as [AuditionEmail],
          case when [AuditionRresult]=1 then '通过'  when [AuditionRresult]=2 then '未通过'  when [AuditionRresult]=0 then '未面试'  else '' end as [AuditionRresult],
          [SalaryRange],[CanReport],[AuditionRemark],
          case when [AuditRresult]=1 then '通过'  when [AuditRresult]=2 then '未通过'  when [AuditRresult]=0 then '未审核'  else '' end as [AuditRresult],
          [AuditOpinion],[Audit],
          case when [Noticed]=1 then '同意报到' when [Noticed]=2 then '不同意报到' when [Noticed]=0 then '未通知' else '' end as [Noticed],
          case when CONVERT(nvarchar(20),[ReportTime],23)='1900-01-01' then '' else CONVERT(nvarchar(20),[ReportTime],20) end as [ReportTime],
          [ReportRemark],
          case when [ReportEmail]=1 then '已发送' when [ReportEmail]=0 then '未发送' else '' end as [ReportEmail],
          case when [IsToEmployee]=2 then '已无效'  when [IsToEmployee]=1 then '已转员工' when [IsToEmployee]=0 then '未转员工' else '' end as [IsToEmployee]
          FROM [dbo].[rc_InterviewInfoes] a right join  [dbo].[rc_ResumeInfoes] b on a.RID=b.RID
          WHERE a.[RID]=@RID;
          end


        </Sql>
        <Sql Name="ClearStaleData" ConnectionName="Auth" Description="清理过期未转员工信息">
          update [rc_ResumeInfoes] set [Done]=3 where RID in(SELECT [RID] FROM [rc_InterviewInfoes] where DATEDIFF(DAY,ReportTime,GETDATE())&gt;30 and IsToEmployee=0 and IsActive=1)
          update rc_InterviewInfoes set IsToEmployee=2,IsActive=0 output inserted.RID where DATEDIFF(DAY,ReportTime,GETDATE())&gt;30 and IsToEmployee=0 and IsActive=1
        </Sql>
        <Sql Name="QueryCount" ConnectionName="Auth" Description="查询总数（人才库）">
          declare @dataBegin varchar(30)
          declare @dataEnd varchar(30)
          if (@Data1='')
          begin
          set @dataBegin ='1900-01-01'
          end
          else
          begin
          set @dataBegin =@Data1
          end
          if (@Data2='1900-01-01' or @Data2='')
          begin
          set @dataEnd='2100-12-31'
          end
          else
          begin
          set @dataEnd=@Data2
          end
          SELECT count(*)
          FROM [dbo].[rc_InterviewInfoes] a right join  [dbo].[rc_ResumeInfoes] b on a.RID=b.RID
          where  [Done] like '%'+@Done+'%'
          and [Name] like '%'+@Name+'%'
          and [Position] like '%'+@Position+'%'
					and ([Position] in (select distinct  Position from rc_Addition where DeptID like '%'+@DeptID+'%')
     or b.RID in (SELECT [FormNo] FROM [rc_RightFormEmployees] where Table_Name='rc_ResumeInfoes' and EmployeeIDs like '%'+@EmployeeID+'%'))
          and ([Sex] like '%'+@Key+'%' or [YearsOfWorking] like '%'+@Key+'%' or [Degree] like '%'+@Key+'%'  or [HuKou] like '%'+@Key+'%')
          and  [CV_GetTime]  between  @dataBegin and @dataEnd
        </Sql>
        <Sql Name="QueryPage" ConnectionName="Auth" Description="查询分页（人才库）">
          declare @dataBegin varchar(30)
          declare @dataEnd varchar(30)
          if (@Data1='')
          begin
          set @dataBegin ='1900-01-01'
          end
          else
          begin
          set @dataBegin =@Data1
          end
          if (@Data2='1900-01-01' or @Data2='')
          begin
          set @dataEnd='2100-12-31'
          end
          else
          begin
          set @dataEnd=@Data2
          end
          SELECT b.[RID],[Name],[Sex],[Position],[YearsOfWorking],[MobilePhone],[Email],CONVERT(nvarchar(20), [CV_GetTime],23) as [CV_GetTime],CONVERT(nvarchar(20), [ImportTime],20) as [ImportTime],
          case when [Done]=0 then '未创建预约' when [Done]=1 then '已创建预约'  when [Done]=2 then '已转员工'   when [Done]=3 then '应聘失败' else '' end as [Done],
          [AppointmentSponsor],
          CONVERT(nvarchar(20),[AppointmentTime],20) as AppointmentTime,
          case when [AppointmentRresult]=1 then '预约成功' when [AppointmentRresult]=2 then '预约失败'  when [AppointmentRresult]=0 then '未预约' else '' end as AppointmentRresult,
          case when CONVERT(nvarchar(20),[AuditionTime],23)='1900-01-01' then '' else CONVERT(nvarchar(20),[AuditionTime],20) end as [AuditionTime],
          [AppointmentRemark],[AppointmentReservation],
          case when [AuditionEmail]=1 then '已发送' when [AuditionEmail]=0 then '未发送' else '' end as [AuditionEmail],
          case when [AuditionRresult]=1 then '通过'  when [AuditionRresult]=2 then '未通过'  when [AuditionRresult]=0 then '未面试'  else '' end as [AuditionRresult],
          [SalaryRange],[CanReport],[AuditionRemark],
          case when [AuditRresult]=1 then '通过'  when [AuditRresult]=2 then '未通过'  when [AuditRresult]=0 then '未审核'  else '' end as [AuditRresult],
          [AuditOpinion],[Audit],
          case when [Noticed]=1 then '同意报到' when [Noticed]=2 then '不同意报到' when [Noticed]=0 then '未通知' else '' end as [Noticed],
          case when CONVERT(nvarchar(20),[ReportTime],23)='1900-01-01' then '' else CONVERT(nvarchar(20),[ReportTime],20) end as [ReportTime],
          [ReportRemark],
          case when [ReportEmail]=1 then '已发送' when [ReportEmail]=0 then '未发送' else '' end as [ReportEmail],
          case when [IsToEmployee]=2 then '已无效'  when [IsToEmployee]=1 then '已转员工' when [IsToEmployee]=0 then '未转员工' else '' end as [IsToEmployee]
          FROM [dbo].[rc_InterviewInfoes] a right join  [dbo].[rc_ResumeInfoes] b on a.RID=b.RID
          where  [Done] like '%'+@Done+'%'
          and [Name] like '%'+@Name+'%'
          and [Position] like '%'+@Position+'%'
					and ([Position] in (select distinct  Position from rc_Addition where DeptID like '%'+@DeptID+'%')
     or b.RID in (SELECT [FormNo] FROM [rc_RightFormEmployees] where Table_Name='rc_ResumeInfoes' and EmployeeIDs like '%'+@EmployeeID+'%'))
          and ([Sex] like '%'+@Key+'%' or [YearsOfWorking] like '%'+@Key+'%' or [Degree] like '%'+@Key+'%'  or [HuKou] like '%'+@Key+'%')
          and  [CV_GetTime]  between  @dataBegin and @dataEnd
          order by Done desc ,AppointmentRresult desc,AuditionRresult,Noticed,CV_GetTime desc
          OFFSET ((CAST(@Page as int)-1)*CAST(@Rows as int)) Rows FETCH NEXT CAST(@Rows as int) ROWS ONLY;
        </Sql>
        <Sql Name="QueryCountM" ConnectionName="Auth" Description="查询总数(面试者)">
          SELECT  count(*)
          FROM [dbo].[rc_InterviewInfoes] a left join
          [dbo].[rc_ResumeInfoes] b on a.RID=b.RID
          where ISNULL(a.AppointmentRresult,'') like '%'+@AppointmentRresult+'%'
          and ISNULL(a.AuditionRresult,'') like '%'+@AuditionRresult+'%'
          and ISNULL(a.AuditRresult,'') like '%'+@AuditRresult+'%'
          and ISNULL(a.Noticed,'') like '%'+@Noticed+'%'
          and ISNULL(a.IsToEmployee,'') like '%'+@IsToEmployee+'%'
          and b.[Name]  like '%'+@Name+'%'
          and b.[Position] like '%'+@Position+'%'
					and a.[DeptID]=@DeptID
          and (b.[Sex] like '%'+@Key+'%' or [YearsOfWorking] like '%'+@Key+'%' or [Degree] like '%'+@Key+'%'  or [HuKou] like '%'+@Key+'%')
        </Sql>
        <Sql Name="QueryPageM" ConnectionName="Auth" Description="查询分页(面试者)">
          SELECT b.[RID],b.[Name],b.[Sex],b.[Position],b.[YearsOfWorking],b.[MobilePhone],b.[Email],
          case  b.[Done] when 0 then '未创建预约' when 1 then '已创建预约'  when 2 then '已转员工'   when 3 then '应聘失败' else '' end as [Done],
          a.[AppointmentSponsor],
          CONVERT(nvarchar(20),a.[AppointmentTime],20) as AppointmentTime,
          case a.[AppointmentRresult] when 1 then '预约成功' when 2 then '预约失败' when 0 then '未预约' else '' end as AppointmentRresult,
          case when CONVERT(nvarchar(20),a.[AuditionTime],23)='1900-01-01' then '' else CONVERT(nvarchar(20),a.[AuditionTime],20) end as [AuditionTime],
          a.[AppointmentRemark],
          a.[AppointmentReservation],
          case a.[AuditionEmail] when 1 then '已发送' when 0 then '未发送' else '' end as [AuditionEmail],
          case a.[AuditionRresult] when 1 then '通过'  when 2 then '未通过'  when 0 then '未面试'  else '' end as [AuditionRresult],
          a.[SalaryRange],
          a.[CanReport],
          a.[AuditionRemark],
          case a.[AuditRresult] when 1 then '通过'  when 2 then '未通过'  when 0 then '未审核'  else '' end as [AuditRresult],
          a.[AuditOpinion],
          a.[Audit],
          case a.[Noticed] when 1 then '同意报到' when 2 then '不同意报到' when 0 then '未通知' else '' end as [Noticed],
          case when CONVERT(nvarchar(20),a.[ReportTime],23)='1900-01-01' then '' else CONVERT(nvarchar(20),a.[ReportTime],20) end as [ReportTime],
          [ReportRemark],
          case a.[ReportEmail] when 1 then '已发送' when 0 then '未发送' else '' end as [ReportEmail],
          case a.[IsToEmployee] when 2 then '已无效' when 1 then '已转员工' when 0 then '未转员工' else '' end as [IsToEmployee]
          FROM [dbo].[rc_InterviewInfoes] a left join
          [dbo].[rc_ResumeInfoes] b on a.RID=b.RID
                  where ISNULL(a.AppointmentRresult,'') like '%'+@AppointmentRresult+'%'
          and ISNULL(a.AuditionRresult,'') like '%'+@AuditionRresult+'%'
          and ISNULL(a.AuditRresult,'') like '%'+@AuditRresult+'%'
          and ISNULL(a.Noticed,'') like '%'+@Noticed+'%'
          and ISNULL(a.IsToEmployee,'') like '%'+@IsToEmployee+'%'
          and b.[Name]  like '%'+@Name+'%'
          and b.[Position] like '%'+@Position+'%'
					and a.[DeptID]=@DeptID
          and (b.[Sex] like '%'+@Key+'%' or [YearsOfWorking] like '%'+@Key+'%' or [Degree] like '%'+@Key+'%'  or [HuKou] like '%'+@Key+'%')
          order by a.AppointmentRresult,a.AppointmentTime desc,a.AuditionRresult,a.AuditionTime desc,a.Noticed,a.IsToEmployee,b.Done,a.ReportTime desc
          OFFSET ((CAST(@Page as int)-1)*CAST(@Rows as int)) Rows FETCH NEXT CAST(@Rows as int) ROWS ONLY;
        </Sql>
        <Sql Name="QueryCountMishi" ConnectionName="Auth" Description="查询面试总数">
          SELECT  count(*)
          FROM [dbo].[rc_InterviewInfoes] a left join
          [dbo].[rc_ResumeInfoes] b on a.RID=b.RID
          where ((a.AppointmentRresult=1
          and ISNULL(a.AuditionRresult,'') like '%'+@AuditionRresult+'%')
          or ISNULL(a.AppointmentRresult,'') like '%'+IIF(@AuditionRresult=3,'2','-1')+'%'
          or ISNULL(a.AppointmentRresult,'') like '%'+IIF(@AuditionRresult='','2','-1')+'%')
          and ISNULL(a.AuditRresult,'') like '%'+@AuditRresult+'%'
          and ISNULL(a.Noticed,'') like '%'+@Noticed+'%'
          and ISNULL(a.IsToEmployee,'') like '%'+@IsToEmployee+'%'
          and b.[Name]  like '%'+@Name+'%'
          and b.[Position] like '%'+@Position+'%'
					and a.[DeptID]=@DeptID
          and (b.[Sex] like '%'+@Key+'%' or [YearsOfWorking] like '%'+@Key+'%' or [Degree] like '%'+@Key+'%'  or [HuKou] like '%'+@Key+'%')
        </Sql>
        <Sql Name="QueryPageMishi" ConnectionName="Auth" Description="查询面试分页">
          SELECT b.[RID],b.[Name],b.[Sex],b.[Position],b.[YearsOfWorking],b.[MobilePhone],b.[Email],
          case  b.[Done] when 0 then '未创建预约' when 1 then '已创建预约'  when 2 then '已转员工'   when 3 then '应聘失败' else '' end as [Done],
          a.[AppointmentSponsor],
          CONVERT(nvarchar(20),a.[AppointmentTime],20) as AppointmentTime,
          case a.[AppointmentRresult] when 1 then '预约成功' when 2 then '预约失败' when 0 then '未预约' else '' end as AppointmentRresult,
          case when CONVERT(nvarchar(20),a.[AuditionTime],23)='1900-01-01' then '' else CONVERT(nvarchar(20),a.[AuditionTime],20) end as [AuditionTime],
          a.[AppointmentRemark],
          a.[AppointmentReservation],
          case a.[AuditionEmail] when 1 then '已发送' when 0 then '未发送' else '' end as [AuditionEmail],
          case a.[AuditionRresult] when 1 then '通过'  when 2 then '未通过'  when 0 then '未面试'  else '' end as [AuditionRresult],
          a.[SalaryRange],
          a.[CanReport],
          a.[AuditionRemark],
          case a.[AuditRresult] when 1 then '通过'  when 2 then '未通过'  when 0 then '未审核'  else '' end as [AuditRresult],
          a.[AuditOpinion],
          a.[Audit],
          case a.[Noticed] when 1 then '同意报到' when 2 then '不同意报到' when 0 then '未通知' else '' end as [Noticed],
          case when CONVERT(nvarchar(20),a.[ReportTime],23)='1900-01-01' then '' else CONVERT(nvarchar(20),a.[ReportTime],20) end as [ReportTime],
          [ReportRemark],
          case a.[ReportEmail] when 1 then '已发送' when 0 then '未发送' else '' end as [ReportEmail],
          case a.[IsToEmployee] when 2 then '已无效' when 1 then '已转员工' when 0 then '未转员工' else '' end as [IsToEmployee]
          FROM [dbo].[rc_InterviewInfoes] a left join
          [dbo].[rc_ResumeInfoes] b on a.RID=b.RID
          where ((a.AppointmentRresult=1
          and ISNULL(a.AuditionRresult,'') like '%'+@AuditionRresult+'%')
          or ISNULL(a.AppointmentRresult,'') like '%'+IIF(@AuditionRresult=3,'2','-1')+'%'
          or ISNULL(a.AppointmentRresult,'') like '%'+IIF(@AuditionRresult='','2','-1')+'%')
          and ISNULL(a.AuditRresult,'') like '%'+@AuditRresult+'%'
          and ISNULL(a.Noticed,'') like '%'+@Noticed+'%'
          and ISNULL(a.IsToEmployee,'') like '%'+@IsToEmployee+'%'
          and b.[Name]  like '%'+@Name+'%'
          and b.[Position] like '%'+@Position+'%'
					and a.[DeptID]=@DeptID
          and (b.[Sex] like '%'+@Key+'%' or [YearsOfWorking] like '%'+@Key+'%' or [Degree] like '%'+@Key+'%'  or [HuKou] like '%'+@Key+'%')
          order by a.AppointmentRresult,a.AppointmentTime desc,a.AuditionRresult,a.AuditionTime desc,a.Noticed,a.IsToEmployee,b.Done,a.ReportTime desc
          OFFSET ((CAST(@Page as int)-1)*CAST(@Rows as int)) Rows FETCH NEXT CAST(@Rows as int) ROWS ONLY;
        </Sql>
      </Table>
      <Table Name="rc_Addition" ConnectionName="Auth" TableName="rc_Addition">
        <Sql Name="Add" ConnectionName="Auth" Description="Add">
          if exists(select * from rc_Addition where DeptID=@DeptID and Position=@Position and isnull(IsFill,0)=0 and IsActive=1)
          begin
          raiserror('本部门已存在相同人员增补信息，保存失败!',16,1)
          end
          else
          begin
          INSERT INTO [rc_Addition]
          ([AID],[CompanyID],[DeptID],[Position],[Reason],[Need],[ApplicationDate],[AvailableDate],[Sex],[Degree],[YearsOfWorking],[SalaryRange],[Duty],[Remark],[IsActive],[CreatedUser],[CreatedTime],[ModifiedUser],[ModifiedTime])
          VALUES(@AID,@CompanyID,@DeptID,@Position,@Reason,@Need,@ApplicationDate,@AvailableDate,@Sex,@Degree,@YearsOfWorking,@SalaryRange,@Duty,@Remark,@IsActive,@CreatedUser,@CreatedTime,@ModifiedUser,@ModifiedTime);
          SELECT a.[AID]
          ,case when a.[IsFill]=1 then '已结束'  when f.Approved=1 then '申请中'  when f.Approved=2 then '招聘中'  when f.Approved=0 then '已驳回' else '草稿' end as Approved
          ,c.Name+'-'+d.Name as DeptName
          ,e.Name  as  UserName
          ,a.[Position]
          ,a.[Reason]
          ,a.[Need]
          ,CONVERT(varchar(20), a.[ApplicationDate]) as [ApplicationDate]
          ,CONVERT(varchar(20), a.[AvailableDate]) as [AvailableDate]
          ,a.[Sex]
          ,a.[Degree]
          ,a.[YearsOfWorking]
          ,a.[SalaryRange]
          ,a.[Duty]
          ,a.[Remark]
          ,a.[IsFill]
          FROM [rc_Addition] a
          left join [hr_Company] c on a.CompanyID=c.CompanyID
          left join hr_Department d on a.DeptID=d.DeptID
          left join [hr_Employee] e on a.CreatedUser = e.UserID
          left join [fl_MappingForm] f on  f.Table_Name= 'fl_Addition' and f.[FormNo]= a.AID WHERE a.[AutoKey]=scope_identity();
          end
        </Sql>
        <Sql Name="Update" ConnectionName="Auth" SqlType="Execute" Description="Update">
          IF exists(select * from [dbo].[fl_MappingForm] where  Table_Name= 'rc_Addition' and FormNo=@AID and [Approved] &lt;&gt; 0)
          begin
          RAISERROR('当前表已送签,修改失败！',15,1) WITH NOWAIT
          END
          ELSE IF(DATEDIFF(day,@AvailableDate,@ApplicationDate)&gt;0)
          begin
          RAISERROR('预计到期日期不得小于申请日期！',15,1) WITH NOWAIT
          END
          ELSE
          BEGIN
          UPDATE [rc_Addition]
          SET [Position]=@Position,[Reason]=@Reason,[Need]=@Need,[AvailableDate]=@AvailableDate,[Sex]=@Sex,[Degree]=@Degree,[YearsOfWorking]=@YearsOfWorking,[SalaryRange]=@SalaryRange,[Duty]=@Duty,[Remark]=@Remark,[IsActive]=@IsActive,[ModifiedUser]=@ModifiedUser,[ModifiedTime]=@ModifiedTime WHERE [AID]=@AID;
          SELECT a.[AID]
          ,case when a.[IsFill]=1 then '已结束'  when f.Approved=1 then '申请中'  when f.Approved=2 then '招聘中'  when f.Approved=0 then '已驳回' else '草稿' end as Approved
          ,c.Name+'-'+d.Name as DeptName
          ,e.Name  as  UserName
          ,a.[Position]
          ,a.[Reason]
          ,a.[Need]
          ,CONVERT(varchar(20), a.[ApplicationDate]) as [ApplicationDate]
          ,CONVERT(varchar(20), a.[AvailableDate]) as [AvailableDate]
          ,a.[Sex]
          ,a.[Degree]
          ,a.[YearsOfWorking]
          ,a.[SalaryRange]
          ,a.[Duty]
          ,a.[Remark]
          ,a.[IsFill]
          FROM  [rc_Addition] a
          left join [hr_Company] c on a.CompanyID=c.CompanyID
          left join [hr_Department] d on a.DeptID=d.DeptID
          left join [hr_Employee] e on a.CreatedUser = e.UserID
          left join [fl_MappingForm] f on  f.Table_Name= 'fl_Addition' and f.[FormNo]= a.AID WHERE [AID]=@AID;
          END
        </Sql>
        <Sql Name="Delete" ConnectionName="Auth" SqlType="Execute" Description="Delete">
          declare @sql varchar(max);
          set @sql='
          if exists(select * from [fl_MappingForm] where Table_Name=''rc_Addition'' and Approved&lt;&gt;0 and [FormNo] in ('''+replace(@AID,',',''',''')+'''))
          begin
          raiserror(''存在已送签信息，删除失败'',16,1) with nowait
          end
          else
          begin
          UPDATE [rc_Addition]
          SET [ModifiedUser]='''+@ModifiedUser+''',[ModifiedTime]='''+@ModifiedTime+''',[IsActive]=0 WHERE [AID] in ('''+replace(@AID,',',''',''')+''') ;
          end;'
          exec(@sql);
        </Sql>
        <Sql Name="GetEdit" ConnectionName="Auth" SqlType="Execute" Description="GetEdit">
          SELECT a.[AID]
          ,a.[DeptID]
          ,a.[Position]
          ,a.[Reason]
          ,a.[Need]
          ,CONVERT(varchar(100), a.[ApplicationDate]) as [ApplicationDate]
          ,CONVERT(varchar(100), a.[AvailableDate]) as [AvailableDate]
          ,a.[Sex]
          ,a.[Degree]
          ,a.[YearsOfWorking]
          ,a.[SalaryRange]
          ,a.[Duty]
          ,a.[Remark]
          ,a.[IsActive]
          ,a.[CreatedUser]
          ,a.[CreatedTime]
          ,a.[ModifiedUser]
          ,a.[ModifiedTime]
          ,a.[AutoKey]
          ,d.Name as DeptName
          ,e.Name as UserName
          FROM [dbo].[rc_Addition] a left join [dbo].[hr_Department] d on a.DeptID = d.DeptID left join [dbo].[hr_Employee] e on a.CreatedUser = e.UserID
          where a.AID=@AID
        </Sql>
        <Sql Name="GetDetail" ConnectionName="Auth" SqlType="Execute" Description="GetDetail">
          SELECT a.[AID]
          ,a.[DeptID]
          ,a.[Position]
          ,a.[Reason]
          ,a.[Need]
          ,CONVERT(varchar(100), a.[ApplicationDate]) as [ApplicationDate]
          ,CONVERT(varchar(100), a.[AvailableDate]) as [AvailableDate]
          ,a.[Sex]
          ,a.[Degree]
          ,a.[YearsOfWorking]
          ,a.[SalaryRange]
          ,a.[Duty]
          ,a.[Remark]
          ,a.[IsActive]
          ,a.[CreatedUser]
          ,a.[CreatedTime]
          ,a.[ModifiedUser]
          ,a.[ModifiedTime]
          ,a.[AutoKey]
          ,d.Name as DeptName
          ,e.Name as UserName
          FROM [dbo].[rc_Addition] a left join [dbo].[hr_Department] d on a.DeptID = d.DeptID left join [dbo].[hr_Employee] e on a.CreatedUser = e.UserID
          where a.AID=@AID
        </Sql>
        <Sql Name="Query" ConnectionName="Auth" Description="Query">
          declare @sql varchar(max)
          set @sql='
          SELECT a.[AID]
          ,case when a.[IsFill]=1 then ''已结束''  when f.Approved=1 then ''申请中''  when f.Approved=2 then ''招聘中''  when f.Approved=0 then ''已驳回'' else ''草稿'' end as Approved
          ,c.Name+''-''+d.Name as DeptName
          ,e.Name as  UserName
          ,a.[Position]
          ,a.[Reason]
          ,a.[Need]
          ,CONVERT(varchar(20), a.[ApplicationDate]) as [ApplicationDate]
          ,CONVERT(varchar(20), a.[AvailableDate]) as [AvailableDate]
          ,a.[Sex]
          ,a.[Degree]
          ,a.[YearsOfWorking]
          ,a.[SalaryRange]
          ,a.[Duty]
          ,a.[Remark]
          ,a.[IsFill]
          FROM [rc_Addition] a
          left join [hr_Company] c on a.CompanyID=c.CompanyID
          left join [hr_Department] d on a.DeptID=d.DeptID
          left join [hr_Employee] e on a.CreatedUser = e.UserID
          left join [fl_MappingForm] f on  f.Table_Name= ''fl_Addition'' and f.[FormNo]= a.AID
          where a.[IsActive]=1
					and a.DeptID like ''%'+@DeptID+'%''
          and a.CompanyID like ''%'+@CompanyID+'%''
					and a.CreatedUser like ''%'+@CreatedUser+'%'''
          if(@AuditionRresult='草稿')
          begin
          set @sql=@sql+' and f.Approved is null'
          end
          else if(@AuditionRresult='申请中')
          begin
          set @sql=@sql+' and f.Approved=1'
          end
          else if( @AuditionRresult='招聘中')
          begin
          set @sql=@sql+' and f.Approved=2 and isnull(a.IsFill,0)!=1'
          end
          else if(@AuditionRresult='已结束')
          begin
          set @sql=@sql+'and a.IsFill=1'
          end
          set @sql=@sql+' order by DeptName,Approved,ApplicationDate desc'
          exec(@sql)
        </Sql>
        <Sql Name="SendCheck" ConnectionName="Auth" Description="送签">
          BEGIN TRANSACTION
          DECLARE @errorSun INT
          SET @errorSun=0
          declare @n int
          select @n=count(*)+1 from [fl_Addition] where [AID]=@AID
          INSERT INTO [fl_Addition]
          ([AID],[Version],[DeptID],[Position],[Reason],[Need],[ApplicationDate],[AvailableDate],[Sex],[Degree],[YearsOfWorking],
          [SalaryRange],[Duty],[Remark],[IsActive],[CreatedUser],[CreatedTime],[ModifiedUser],[ModifiedTime])
          select [AID],@n,[DeptID],[Position],[Reason],[Need],[ApplicationDate],[AvailableDate],[Sex],[Degree],[YearsOfWorking],
          [SalaryRange],[Duty],[Remark],@IsActive,@CreatedUser,@CreatedTime,@ModifiedUser,@ModifiedTime from rc_Addition where AID=@AID;
          SET @errorSun=@errorSun+@@ERROR
          declare @m int
          select @m=count(*) from [fl_MappingForm] where Table_Name='rc_Addition' and [FormNo]=@AID
          if(@m=0)
          begin
          INSERT INTO [fl_MappingForm]
          ([Table_Name],[FormNo],[Approved],[CreatedUser],[CreatedTime],[ModifiedUser],[ModifiedTime])
          VALUES('rc_Addition',@AID,1,@CreatedUser,@CreatedTime,@ModifiedUser,@ModifiedTime);
          end
          else
          begin
          update  [fl_MappingForm] set [Approved]=1  where Table_Name='rc_Addition' and [FormNo]=@AID
          end
          SET @errorSun=@errorSun+@@ERROR
          IF @errorSun !=0
          BEGIN
          ROLLBACK TRANSACTION
          END
          ELSE
          BEGIN
          COMMIT TRANSACTION
          END
          SELECT a.[AID]
          ,case when a.[IsFill]=1 then '已结束'  when f.Approved=1 then '申请中'  when f.Approved=2 then '招聘中'  when f.Approved=0 then '已驳回' else '草稿' end as Approved
          ,c.Name+'-'+d.Name as DeptName
          ,e.Name as UserName
          ,a.[Position]
          ,a.[Reason]
          ,a.[Need]
          ,CONVERT(varchar(20), a.[ApplicationDate]) as [ApplicationDate]
          ,CONVERT(varchar(20), a.[AvailableDate]) as [AvailableDate]
          ,a.[Sex]
          ,a.[Degree]
          ,a.[YearsOfWorking]
          ,a.[SalaryRange]
          ,a.[Duty]
          ,a.[Remark]
          ,a.[IsFill]
          FROM [rc_Addition] a
          left join [hr_Company] c on a.CompanyID=c.CompanyID
          left join [hr_Department] d on a.DeptID=d.DeptID
          left join [hr_Employee] e on a.CreatedUser = e.UserID
          left join [fl_MappingForm] f on  f.Table_Name= 'fl_Addition' and f.FormNo= a.AID WHERE a.[AID]=@AID;
        </Sql>
        <Sql Name="GetPosition" SharedName="LGetPosition" ConnectionName="Auth" Description="获取职位列表">
          SELECT  [Position] as ID,[Position] AS Name FROM [rc_Addition] where DeptID like '%'+@DeptID+'%' group by Position order by Position;
        </Sql>
        <Sql Name="GetDutyByPosition" ConnectionName="Auth" Description="根据职位获取最新职位职责">select top 1 [Duty]  from rc_Addition where Position=@Position  order by AID desc</Sql>
        <Sql Name="CheckLog" ConnectionName="Auth" Description="送签追踪">
          declare @n int,@log nvarchar(500)
          select @n=count(*) FROM [fl_Addition] WHERE [AID]=@AID
          select @log=CONVERT(varchar(30),aa.CreatedTime,20)+','+isnull(a.Name,'')+','+isnull(b.Name,'')+',呈送'
          FROM [fl_Addition] aa left  join  [hr_Employee] a on aa.CreatedUser=a.UserID
          join [hr_Job] b on a.JobID=b.JobID
          WHERE [AID]=@AID and [Version]=@n

          SELECT a.[AID]
          ,case when a.[IsFill]=1 then '已结束'  when f.Approved=1 then '申请中'  when f.Approved=2 then '招聘中'  when f.Approved=0 then '已驳回' else '草稿' end as Approved
          ,d.Name as DeptName
          ,e.Name as UserName
          ,a.[Position]
          ,a.[Reason]
          ,a.[Need]
          ,CONVERT(varchar(20), a.[ApplicationDate]) as [ApplicationDate]
          ,CONVERT(varchar(20),a.[AvailableDate]) as [AvailableDate]
          ,a.[Sex]
          ,a.[Degree]
          ,a.[YearsOfWorking]
          ,a.[SalaryRange]
          ,a.[Duty]
          ,a.[Remark]
          ,a.[IsFill]
          ,@log as CheckLog
          FROM [rc_Addition] a
          left join hr_Department d on a.DeptID=d.DeptID
          left join [hr_Employee] e on a.CreatedUser = e.UserID
          left join [dbo].[fl_MappingForm] f on  f.Table_Name= 'fl_Addition' and f.[FormNo]= a.AID WHERE a.[AID]=@AID;
        </Sql>
        <Sql Name="Over" ConnectionName="Auth" Description="结束招聘">
          declare @sql varchar(max);
          set @sql='
          UPDATE [rc_Addition]
          SET [ModifiedUser]='''+@ModifiedUser+''',[ModifiedTime]='''+@ModifiedTime+''',[IsFill]=1 WHERE [AID] in ('''+replace(@AID,',',''',''')+''') ;
          update [rc_InterviewInfoes] set IsToEmployee=2
          where IsActive=1
          and isnull(IsToEmployee,0) &lt;&gt; 1
          and RID in (SELECT [RID] FROM [rc_ResumeInfoes] where [Position] in (select distinct  Position from rc_Addition where [AID] in ('''+replace(@AID,',',''',''')+''')))
          SELECT a.[AID]
          ,case when a.[IsFill]=1 then ''已结束''  when f.Approved=1 then ''申请中''  when f.Approved=2 then ''招聘中''  when f.Approved=0 then ''已驳回'' else ''草稿'' end as Approved
          ,c.Name+''-''+d.Name as DeptName
          ,e.Name as UserName
          ,a.[Position]
          ,a.[Reason]
          ,a.[Need]
          ,CONVERT(varchar(20), a.[ApplicationDate]) as [ApplicationDate]
          ,CONVERT(varchar(20), a.[AvailableDate]) as [AvailableDate]
          ,a.[Sex]
          ,a.[Degree]
          ,a.[YearsOfWorking]
          ,a.[SalaryRange]
          ,a.[Duty]
          ,a.[Remark]
          ,a.[IsFill]
          FROM [rc_Addition] a
          left join [hr_Company] c on a.CompanyID=c.CompanyID
          left join [hr_Department] d on a.DeptID=d.DeptID
          left join [hr_Employee] e on a.CreatedUser = e.UserID
          left join [fl_MappingForm] f on  f.Table_Name= ''fl_Addition'' and f.FormNo= a.AID  WHERE [AID] in ('''+replace(@AID,',',''',''')+''')'
          exec(@sql);
        </Sql>
        <Sql Name="QueryHr" ConnectionName="Auth" Description="人事检索">
          declare @sql varchar(max)
          set @sql='
          SELECT a.[AID]
          ,case when a.[IsFill]=1 then ''已结束''  when f.Approved=1 then ''申请中''  when f.Approved=2 then ''招聘中''  when f.Approved=0 then ''已驳回'' else ''草稿'' end as Approved
          ,c.Name+''-''+d.Name as DeptName
          ,e.Name as  UserName
          ,a.[Position]
          ,a.[Reason]
          ,a.[Need]
          ,CONVERT(varchar(20), a.[ApplicationDate]) as [ApplicationDate]
          ,CONVERT(varchar(20), a.[AvailableDate]) as [AvailableDate]
          ,a.[Sex]
          ,a.[Degree]
          ,a.[YearsOfWorking]
          ,a.[SalaryRange]
          ,a.[Duty]
          ,a.[Remark]
          ,a.[IsFill]
          FROM [rc_Addition] a join
          (SELECT e2.* FROM [hr_Employee] e2 join fun_sys_GetUserDepartments('''+@UserID+''') g2 on e2.DeptID=g2.DeptID)e on a.CreatedUser = e.UserID
          left join [hr_Company] c on a.CompanyID=c.CompanyID
          left join [hr_Department] d on a.DeptID=d.DeptID
          left join [fl_MappingForm] f on  f.Table_Name= ''fl_Addition'' and f.[FormNo]= a.AID
          where a.[IsActive]=1 and a.DeptID like ''%'+@DeptID+'%''and a.CompanyID like ''%'+@CompanyID+'%'' and f.Approved=2'
          if( @AuditionRresult='招聘中')
          begin
          set @sql=@sql+' and isnull(a.IsFill,0)!=1'
          end
          else if(@AuditionRresult='已结束')
          begin
          set @sql=@sql+'and a.IsFill=1'
          end
          set @sql=@sql+' order by DeptName,Approved,ApplicationDate desc'
          exec(@sql)
        </Sql>
        <Sql Name="QueryCount" ConnectionName="Auth" Description="查询总数">
          declare @sql varchar(max)
          set @sql='
          SELECT count([AID])
          FROM [rc_Addition] a
          left join [hr_Company] c on a.CompanyID=c.CompanyID
          left join [hr_Department] d on a.DeptID=d.DeptID
          left join [hr_Employee] e on a.CreatedUser = e.UserID
          left join [fl_MappingForm] f on  f.Table_Name= ''fl_Addition'' and f.[FormNo]= a.AID
          where a.[IsActive]=1
					and a.CompanyID like ''%'+@CompanyID+'%''
          and a.DeptID like ''%'+@DeptID+'%''
          and a.Position like ''%'+@Position+'%''
					and a.CreatedUser like ''%'+@CreatedUser+'%'''
          if(@AuditionRresult='草稿')
          begin
          set @sql=@sql+' and f.Approved is null'
          end
          else if(@AuditionRresult='申请中')
          begin
          set @sql=@sql+' and f.Approved=1'
          end
          else if( @AuditionRresult='招聘中')
          begin
          set @sql=@sql+' and f.Approved=2 and isnull(a.IsFill,0)!=1'
          end
          else if(@AuditionRresult='已结束')
          begin
          set @sql=@sql+'and a.IsFill=1'
          end
          exec(@sql)

        </Sql>
        <Sql Name="QueryPage" ConnectionName="Auth" Description="查询分页">

          declare @sql varchar(max)
          set @sql='
          SELECT a.[AID]
          ,case when a.[IsFill]=1 then ''已结束''  when f.Approved=1 then ''申请中''  when f.Approved=2 then ''招聘中''  when f.Approved=0 then ''已驳回'' else ''草稿'' end as Approved
          ,c.Name+''-''+d.Name as DeptName
          ,e.Name as  UserName
          ,a.[Position]
          ,a.[Reason]
          ,a.[Need]
          ,CONVERT(varchar(20), a.[ApplicationDate]) as [ApplicationDate]
          ,CONVERT(varchar(20), a.[AvailableDate]) as [AvailableDate]
          ,a.[Sex]
          ,a.[Degree]
          ,a.[YearsOfWorking]
          ,a.[SalaryRange]
          ,a.[Duty]
          ,a.[Remark]
          ,a.[IsFill]
          FROM [rc_Addition] a
          left join [hr_Company] c on a.CompanyID=c.CompanyID
          left join [hr_Department] d on a.DeptID=d.DeptID
          left join [hr_Employee] e on a.CreatedUser = e.UserID
          left join [fl_MappingForm] f on  f.Table_Name= ''fl_Addition'' and f.[FormNo]= a.AID
          where a.[IsActive]=1
					and a.CompanyID like ''%'+@CompanyID+'%''
          and a.DeptID like ''%'+@DeptID+'%''
          and a.Position like ''%'+@Position+'%''
					and a.CreatedUser like ''%'+@CreatedUser+'%'''
          if(@AuditionRresult='草稿')
          begin
          set @sql=@sql+' and f.Approved is null'
          end
          else if(@AuditionRresult='申请中')
          begin
          set @sql=@sql+' and f.Approved=1'
          end
          else if( @AuditionRresult='招聘中')
          begin
          set @sql=@sql+' and f.Approved=2 and isnull(a.IsFill,0)!=1'
          end
          else if(@AuditionRresult='已结束')
          begin
          set @sql=@sql+'and a.IsFill=1'
          end
          set @sql=@sql+' order by ApplicationDate desc'

          SET @sql = @sql + '
          OFFSET ('+ CAST((@Page - 1) * @Rows AS varchar(10)) +') ROWS

          FETCH NEXT ' + CAST(@Rows AS varchar(10)) +' ROWS ONLY';

          exec(@sql)
        </Sql>
        <Sql Name="QueryCountHr" ConnectionName="Auth" Description="人事查询总数">
          declare @sql varchar(max)
          set @sql='
          SELECT count([AID])
          FROM [rc_Addition] a
          join (SELECT e2.* FROM [hr_Employee] e2 join fun_sys_GetUserDepartments('''+@UserID+''') g2 on e2.DeptID=g2.DeptID)e on a.CreatedUser = e.UserID
          left join [hr_Company] c on a.CompanyID=c.CompanyID
          left join [hr_Department] d on a.DeptID=d.DeptID
          left join [fl_MappingForm] f on  f.Table_Name= ''fl_Addition'' and f.[FormNo]= a.AID
          where a.[IsActive]=1 and (a.DeptID like ''%'+@DeptID+'%'' or a.CompanyID like ''%'+@DeptID+'%'') and f.Approved=2'
          if( @AuditionRresult='招聘中')
          begin
          set @sql=@sql+' and isnull(a.IsFill,0)!=1'
          end
          else if(@AuditionRresult='已结束')
          begin
          set @sql=@sql+'and a.IsFill=1'
          end
          exec(@sql)
        </Sql>
        <Sql Name="QueryPageHr" ConnectionName="Auth" Description="人事查询分页">
          declare @sql varchar(max)
          set @sql='
          SELECT a.[AID]
          ,case when a.[IsFill]=1 then ''已结束''  when f.Approved=1 then ''申请中''  when f.Approved=2 then ''招聘中''  when f.Approved=0 then ''已驳回'' else ''草稿'' end as Approved
          ,c.Name+''-''+d.Name as DeptName
          ,e.Name as  UserName
          ,a.[Position]
          ,a.[Reason]
          ,a.[Need]
          ,CONVERT(varchar(20), a.[ApplicationDate]) as [ApplicationDate]
          ,CONVERT(varchar(20), a.[AvailableDate]) as [AvailableDate]
          ,a.[Sex]
          ,a.[Degree]
          ,a.[YearsOfWorking]
          ,a.[SalaryRange]
          ,a.[Duty]
          ,a.[Remark]
          ,a.[IsFill]
          FROM [rc_Addition] a
          join (SELECT e2.* FROM [hr_Employee] e2 join fun_sys_GetUserDepartments('''+@UserID+''') g2 on e2.DeptID=g2.DeptID)e on a.CreatedUser = e.UserID
          left join [hr_Company] c on a.CompanyID=c.CompanyID
          left join [hr_Department] d on a.DeptID=d.DeptID
          left join [fl_MappingForm] f on  f.Table_Name= ''fl_Addition'' and f.[FormNo]= a.AID
          where a.[IsActive]=1 and (a.DeptID like ''%'+@DeptID+'%'' or a.CompanyID like ''%'+@DeptID+'%'')  and f.Approved=2'
          if( @AuditionRresult='招聘中')
          begin
          set @sql=@sql+' and isnull(a.IsFill,0)!=1'
          end
          else if(@AuditionRresult='已结束')
          begin
          set @sql=@sql+'and a.IsFill=1'
          end
          set @sql=@sql+' order by a.[ApplicationDate] desc'
          SET @sql = @sql + '
          OFFSET ('+ CAST((@Page - 1) * @Rows AS varchar(10)) +') ROWS
          FETCH NEXT ' + CAST(@Rows AS varchar(10)) +' ROWS ONLY';
          exec(@sql)
        </Sql>
        <Sql Name="RcReport" ConnectionName="Auth" Description="应聘人才统计报表" />
      </Table>
      <Table Name="rc_RightFormEmployees" ConnectionName="Auth" TableName="rc_RightFormEmployees">
        <Sql Name="GetItem" ConnectionName="Auth" Description="获取信息">
          if exists(SELECT *  FROM [rc_RightFormEmployees] where [Table_Name]=@Table_Name and [FormNo]=@FormNo)
          begin
          SELECT [Table_Name] , [FormNo] ,[EmployeeIDs] ,[CreatedUser] ,[CreatedTime] ,[ModifiedUser] ,[ModifiedTime]
          FROM [rc_RightFormEmployees] where [Table_Name]=@Table_Name and [FormNo]=@FormNo
          end
          else
          begin
          SELECT @FormNo as [FormNo], '' as [EmployeeIDs]
          end
        </Sql>
        <Sql Name="UpdateOrAdd" ConnectionName="Auth" SqlType="Execute" Description="更新信息">
          if exists(SELECT * FROM [rc_RightFormEmployees] where [Table_Name]=@Table_Name and [FormNo]=@FormNo)
          begin
          UPDATE [dbo].[rc_RightFormEmployees]
          SET [EmployeeIDs] = @EmployeeIDs
          ,[ModifiedUser] = @ModifiedUser
          ,[ModifiedTime] = @ModifiedTime
          WHERE [Table_Name] = @Table_Name and [FormNo] = @FormNo
          end
          else
          begin
          INSERT INTO [dbo].[rc_RightFormEmployees]
          ([Table_Name]
          ,[FormNo]
          ,[EmployeeIDs]
          ,[CreatedUser]
          ,[CreatedTime]
          ,[ModifiedUser]
          ,[ModifiedTime])
          VALUES
          (@Table_Name
          ,@FormNo
          ,@EmployeeIDs
          ,@CreatedUser
          ,@CreatedTime
          ,@ModifiedUser
          ,@ModifiedTime )
          end
        </Sql>
      </Table>
    </Group>
    <Group Name="OA衔接">
      <Table Name="fl_ApproveFlow" ConnectionName="Auth" TableName="fl_ApproveFlow">
        <Sql Name="GetApproveFlow" ConnectionName="Auth" Description="GetApproveFlow">
          DECLARE @LastConfirm_Stat VARCHAR(1),@LastConfirm_Time DATETIME

          SELECT @LastConfirm_Stat = Confirm_Stat,@LastConfirm_Time = DATEADD(MS, 100, Confirm_Time) FROM dbo.fl_ApproveState WHERE FormNo=@ID

          DECLARE @SQL NVARCHAR(2000)
          SET @SQL='
          SELECT   dbo.fl_ApproveState.AutoKey, dbo.fl_ApproveState.FormID, dbo.fl_ApproveState.FormNo,
          dbo.fl_ApproveState.EmployeeID, hr_Employee_1.Name AS EmployeeName, dbo.fl_ApproveState.Employee_Sort,
          dbo.fl_ApproveState.DeptID, dbo.hr_Department.Name AS DepartmentName, dbo.fl_ApproveState.JobID,
          dbo.hr_Job.Name AS JobName, dbo.fl_ApproveState.Confirm_Class,
          CASE dbo.fl_ApproveState.Confirm_Stat
          WHEN ''S'' THEN ''送签''
          WHEN ''A'' THEN ''签核''
          WHEN ''X'' THEN ''待签''
          WHEN ''R'' THEN ''驳回''
          END Confirm_Stat,
          dbo.fl_ApproveState.Confirm_Time, dbo.hr_Company.Name AS CompanyName, dbo.fl_ApproveState.Suggestion
          FROM dbo.fl_ApproveState LEFT OUTER JOIN
          dbo.hr_Company RIGHT OUTER JOIN
          dbo.hr_Department ON dbo.hr_Company.CompanyID = dbo.hr_Department.CompanyID ON
          dbo.fl_ApproveState.DeptID = dbo.hr_Department.DeptID LEFT OUTER JOIN
          dbo.hr_Job ON dbo.fl_ApproveState.JobID = dbo.hr_Job.JobID LEFT OUTER JOIN
          dbo.hr_Employee AS hr_Employee_1 ON dbo.fl_ApproveState.EmployeeID = hr_Employee_1.EmployeeID
          WHERE FormNo='''+@ID+'''';

          DECLARE @Remark NVARCHAR(200)
          SET @Remark= ''
          IF @LastConfirm_Stat = 'A' OR @LastConfirm_Stat = 'S'
          BEGIN
          IF @LastConfirm_Stat = 'S'
          BEGIN
          SET @Remark = '送签时系统内没有设定该单据的签核流程，视为直接核准结单。'
          END
          SET @SQL = @SQL + ' UNION SELECT 0,'''+@ID+''','''+@TableName+''','''','''',-1,'''','''','''','''','''',''结单'','''+CONVERT(NVARCHAR(30),@LastConfirm_Time,121)+''','''','''+@Remark+''''
          END

          SET @SQL = @SQL + ' ORDER BY Confirm_Time'

          EXEC (@SQL)
        </Sql>
      </Table>
    </Group>
    <Group Name="固定资产">
      <Table Name="zc_Category" ConnectionName="Auth" TableName="zc_Category">
        <Sql Name="QueryCount" ConnectionName="Auth" Description="检索查询总数">
          SELECT count(a.[CategoryID])
          FROM [zc_Category]a left join [zc_Category]b on a.[ParentID]=b.CategoryID
          WHERE a.[Category] like '%'+@Category
          and a.[ParentID] like '%'+@ParentID
          and a.[BM] like '%'+@BM
          and a.[IsActive]=1
        </Sql>
        <Sql Name="QueryPage" ConnectionName="Auth" Description="检索分页查询">
          SELECT a.[CategoryID],a.[Category],b.[Category] as ParentName,a.[ParentID],a.[SortID],a.[BM],a.[Remark]
          FROM [zc_Category]a left join [zc_Category]b on a.[ParentID]=b.CategoryID
          WHERE a.[Category] like '%'+@Category
          and a.[ParentID] like '%'+@ParentID
          and a.[BM] like '%'+@BM
          and a.[IsActive]=1
          ORDER BY ParentID,[SortID]
          OFFSET (((CAST(@Page AS int)- 1) * CAST(@Rows AS int))) ROWS
          FETCH NEXT CAST(@Rows AS int) ROWS ONLY
        </Sql>
        <Sql Name="GetDetail" ConnectionName="Auth" Description="查询明细">
          SELECT a.[CategoryID],a.[Category],b.[Category] as ParentName,a.[ParentID],a.[SortID],a.[BM],a.[Remark]
          FROM [zc_Category]a left join [zc_Category]b on a.[ParentID]=b.CategoryID
          WHERE a.[CategoryID]=@CategoryID
        </Sql>
        <Sql Name="Add" ConnectionName="Auth" Description="新增">
          if exists(select [CategoryID] from [zc_Category] where [Category]=@Category and  [ParentID]=@ParentID and [IsActive] = 1)
          begin
          RAISERROR ('已经存在相同信息，无法保存！',15, 1) WITH NOWAIT
          end
          else if exists(select [CategoryID] from [zc_Category] where [BM]=@BM and  [ParentID]=@ParentID and [IsActive] = 1)
          begin
          RAISERROR ('已经存在相同编码，无法保存！',15, 1) WITH NOWAIT
          end
          else
          begin
          INSERT INTO [zc_Category]
          ([CategoryID],[Category],[ParentID],[SortID],[BM],[Remark],[IsActive],[CreatedUser],[CreatedTime],[ModifiedUser],[ModifiedTime])
          VALUES(@CategoryID,@Category,@ParentID,@SortID,@BM,@Remark,1,@CreatedUser,@CreatedTime,@ModifiedUser,@ModifiedTime);
          if exists(select [CategoryID] from [zc_Category] where CategoryID!=@CategoryID and ParentID=@ParentID and SortID=@SortID and IsActive=1)
          update  [dbo].[zc_Category] set SortID=SortID+1 where CategoryID!=@CategoryID and ParentID=@ParentID and SortID&gt;=@SortID and IsActive=1
          end;
        </Sql>
        <Sql Name="GetEdit" ConnectionName="Auth" Description="查询编辑">
          SELECT [CategoryID],[Category],[ParentID],[SortID],[BM],[Remark]
          FROM [zc_Category]
          WHERE [CategoryID]=@CategoryID
        </Sql>
        <Sql Name="Update" ConnectionName="Auth" Description="更新">
          if exists(select [CategoryID] from [zc_Category] where [CategoryID]!=@CategoryID and  [Category]=@Category and  [ParentID]=@ParentID and [IsActive] = 1)
          begin
          RAISERROR ('已经存在相同信息，无法保存！',15, 1) WITH NOWAIT
          end
          else if exists(select [CategoryID] from [zc_Category] where [CategoryID]!=@CategoryID and [BM]=@BM and  [ParentID]=@ParentID and [IsActive] = 1)
          begin
          RAISERROR ('已经存在相同编码，无法保存！',15, 1) WITH NOWAIT
          end
          else
          begin
          declare @sortOld int,@sortMin int,@sortMax int,@change int
          SELECT @sortOld=[SortID] FROM [zc_Category] WHERE [CategoryID]=@CategoryID
          set @change=IIF(@sortOld=@SortID,0,((@sortOld-@SortID)*2+1)%2)
          set @sortMin=IIF(@change&lt;0,@sortOld,@SortID)
          set @sortMax=IIF(@change&gt;0,@sortOld,@SortID)
          if not exists(select [CategoryID] FROM [zc_Category] where CategoryID!=@CategoryID and ParentID=@ParentID and SortID=@SortID and IsActive=1)
          set @change=0
          UPDATE [zc_Category] SET [Category]=@Category,[ParentID]=@ParentID,[SortID]=@SortID,[BM]=@BM,[Remark]=@Remark,[ModifiedUser]=@ModifiedUser,[ModifiedTime]=@ModifiedTime WHERE [CategoryID]=@CategoryID;
          IF(@change&lt;&gt;0)
          UPDATE [zc_Category] SET [SortID]=[SortID]+@change WHERE [CategoryID]!=@CategoryID and [ParentID]=@ParentID and [SortID] between @sortMin and @sortMax
          end
        </Sql>
        <Sql Name="Delete" ConnectionName="Auth" Description="删除">
          DECLARE @sql varchar(max);
          BEGIN TRY
          SET @sql= 'if exists(select [CategoryID] from [zc_Category] where [ParentID] in (''' + REPLACE(@Keys,',',''',''') + '''))
          raiserror(''存在父类别信息，删除无法执行'',16,1) with nowait
			else if exists(select AssetID from zc_Asset where CategoryID in (''' + REPLACE(@Keys,',',''',''') + '''))
			raiserror(''类型已使用，无法删除'',16,1) with nowait
          else
          UPDATE [zc_Category] SET IsActive=0 WHERE [CategoryID] in (''' + REPLACE(@Keys,',',''',''') + ''')';
          EXEC(@sql);
          END TRY
          BEGIN CATCH
          DECLARE @error varchar(2000);
          SET @error = ERROR_MESSAGE();
          RAISERROR(@error ,11,1);
          END CATCH
        </Sql>
        <Sql Name="CategoryTree" SharedName="CategoryTree" ConnectionName="Auth" Description="资产类别树">
          SELECT [CategoryID] as ID
          ,[Category] as Name
          ,IIF(isnull([ParentID],'')='','000000',[ParentID]) as PID
          ,isnull([SortID],100) as SortID
          FROM [zc_Category] where [IsActive]=1
          union
          select '','无','000000',0
          order by SortID
        </Sql>
        <Sql Name="CategoryTreeForQuery" SharedName="CategoryTreeForQuery" ConnectionName="Auth" Description="资产类别树(检索)">
          SELECT [CategoryID] as ID
          ,[Category] as Name
          ,isnull([ParentID],'') as PID
          ,isnull([SortID],100) as SortID
          FROM [zc_Category] where [IsActive]=1
          union
          select '','全部','000000',0
          order by SortID
        </Sql>
        <Sql Name="CategoryTreeForAsset" SharedName="CategoryTreeForAsset" ConnectionName="Auth" Description="资产类别树(固定资产新增修改）">
					SELECT a.[CategoryID]+rtrim(ltrim(ISNULL(b.[BM],'')))+rtrim(ltrim(ISNULL(a.[BM],''))) as ID
,a.[Category] as Name
,a.[parentID]+rtrim(ltrim(ISNULL(b.[BM],''))) as PID
					FROM [zc_Category]a left join [zc_Category]b on a.ParentID=b.CategoryID
				</Sql>
      </Table>
      <Table Name="zc_Unit" ConnectionName="Auth" TableName="zc_Unit">
        <Sql Name="Add" ConnectionName="Auth" Description="新增">
          if exists(select [UnitID] from [zc_Unit] where [UnitName]=@UnitName and [IsActive]=1)
          raiserror('存在相同信息,无法保存',16,1)
          else
          INSERT INTO [zc_Unit]
          ([UnitID],[UnitName],[IsActive],[CreatedUser],[CreatedTime],[ModifiedUser],[ModifiedTime])
          VALUES(@UnitID,@UnitName,1,@CreatedUser,@CreatedTime,@ModifiedUser,@ModifiedTime);
        </Sql>
        <Sql Name="GetEdit" ConnectionName="Auth" Description="查询编辑">
          SELECT [UnitID],[UnitName]
          FROM [zc_Unit]
          WHERE [UnitID]=@UnitID
        </Sql>
        <Sql Name="Update" ConnectionName="Auth" Description="更新">
          if exists(select [UnitID] from [zc_Unit] where   [UnitID]!=@UnitID and [UnitName]=@UnitName and [IsActive]=1)
          raiserror('存在相同信息,无法保存',16,1)
          else
          UPDATE [zc_Unit]
          SET  [UnitName]=@UnitName,[ModifiedUser]=@ModifiedUser,[ModifiedTime]=@ModifiedTime WHERE [UnitID]=@UnitID;
        </Sql>
        <Sql Name="Delete" ConnectionName="Auth" Description="删除">
          DECLARE @sql varchar(max);
          BEGIN TRY

			SET @sql= 'if exists(select AssetID from zc_Asset where UnitID in (''' + REPLACE(@Keys,',',''',''') + '''))
			raiserror(''单位名称已使用，无法删除'',16,1) with nowait
			else
			UPDATE [zc_Unit] SET IsActive=0 WHERE [UnitID] in (''' + REPLACE(@Keys,',',''',''') + ''')';
          EXEC(@sql);

          END TRY
          BEGIN CATCH
          DECLARE @error varchar(2000);
          SET @error = ERROR_MESSAGE();
          RAISERROR(@error ,11,1);
          END CATCH
        </Sql>
        <Sql Name="QueryCount" ConnectionName="Auth" Description="检索查询总数">
          SELECT COUNT(*)
          FROM [zc_Unit] WHERE [IsActive]=1
        </Sql>
        <Sql Name="QueryPage" ConnectionName="Auth" Description="检索分页查询">
          SELECT [UnitID],[UnitName],[IsActive]
          FROM [zc_Unit] WHERE [IsActive]=1
          ORDER BY ModifiedTime desc
          OFFSET ((CAST(@Page as int) - 1) * CAST(@Rows AS int)) ROWS
          FETCH NEXT  CAST(@Rows AS int)  ROWS ONLY
        </Sql>
        <Sql Name="GetUnit" SharedName="GetUnit" ConnectionName="Auth" Description="单位下拉框">
					SELECT [UnitID] as ID
      ,[UnitName] as Name
					FROM [dbo].[zc_Unit] where IsActive=1 order by [UnitName]
				</Sql>
      </Table>
      <Table Name="zc_Supplier" ConnectionName="Auth" TableName="zc_Supplier">
        <Sql Name="QueryCount" ConnectionName="Auth" Description="检索查询总数">
          DECLARE @sql varchar(max);
          DECLARE @where varchar(2000);
          SET @where='';
          IF(len(@SupplierName)&gt;0)
          BEGIN
          IF(LEN(@where)&gt;0)
          SET @where = @where + ' AND'
          set @where= @where+' (' + @SupplierName + ')';
          END

          IF(len(@SupplierJC)&gt;0)
          BEGIN
          IF(LEN(@where)&gt;0)
          SET @where = @where + ' AND'
          set @where= @where+' (' + @SupplierJC + ')';
          END

          IF(len(@SupplierJM)&gt;0)
          BEGIN
          IF(LEN(@where)&gt;0)
          SET @where = @where + ' AND'
          set @where= @where+' (' + @SupplierJM + ')';
          END

          IF(len(@Contact)&gt;0)
          BEGIN
          IF(LEN(@where)&gt;0)
          SET @where = @where + ' AND'
          set @where= @where+' (' + @Contact + ')';
          END

          IF(LEN(@where)&gt;0)
          SET @where = @where + ' AND'
          set @where= @where+' (IsActive=1)';

          SET @sql='SELECT COUNT(*)
          FROM [zc_Supplier]';

          IF(LEN(@where)&gt;0)
          BEGIN
          SET @sql=@sql+' WHERE' + @where;
          END
          execute(@sql);
        </Sql>
        <Sql Name="QueryPage" ConnectionName="Auth" Description="检索分页查询">
          DECLARE @sql varchar(max);
          DECLARE @where varchar(2000);
          SET @where='';
          IF(len(@SupplierName)&gt;0)
          BEGIN
          IF(LEN(@where)&gt;0)
          SET @where = @where + ' AND'
          set @where= @where+' (' + @SupplierName + ')';
          END

          IF(len(@SupplierJC)&gt;0)
          BEGIN
          IF(LEN(@where)&gt;0)
          SET @where = @where + ' AND'
          set @where= @where+' (' + @SupplierJC + ')';
          END

          IF(len(@SupplierJM)&gt;0)
          BEGIN
          IF(LEN(@where)&gt;0)
          SET @where = @where + ' AND'
          set @where= @where+' (' + @SupplierJM + ')';
          END

          IF(len(@Contact)&gt;0)
          BEGIN
          IF(LEN(@where)&gt;0)
          SET @where = @where + ' AND'
          set @where= @where+' (' + @Contact + ')';
          END
          IF(LEN(@where)&gt;0)
          SET @where = @where + ' AND'
          set @where= @where+' (IsActive=1 )';

          SET @sql='SELECT [SupplierID],[SupplierName],[SupplierJC],[SupplierJM],[Contact],[ContactMobiPhone],[ContactTel],[Email],[BusinessLicenseCode],[OrganizationCode],[TaxRegistrationNum],[InvoiceAddress],[Site],[ZipCode],[Address],[Remark]
          FROM [zc_Supplier]';

          IF(LEN(@where)&gt;0)
          BEGIN
          SET @sql=@sql+' WHERE' + @where;
          END

          IF(LEN(ISNULL(@OrderBy,''))=0)
          BEGIN
          SET @sql=@sql+' ORDER BY ModifiedTime desc';
          END
          ELSE
          BEGIN
          SET @sql=@sql+' ORDER BY ' + @OrderBy;
          END

          SET @sql = @sql + '
          OFFSET ('+ CAST((@Page - 1) * @Rows AS varchar(10)) +') ROWS
          FETCH NEXT ' + CAST(@Rows AS varchar(10)) +' ROWS ONLY';

          execute(@sql);
        </Sql>
        <Sql Name="GetDetail" ConnectionName="Auth" Description="查询明细">
          SELECT [SupplierName],[SupplierJC],[SupplierJM],[Contact],[ContactMobiPhone],[ContactTel],[Email],[BusinessLicenseCode],[OrganizationCode],[TaxRegistrationNum],[InvoiceAddress],[Site],[ZipCode],[Address],[Remark]
          FROM [zc_Supplier]
          WHERE [SupplierID]=@SupplierID
        </Sql>
        <Sql Name="Add" ConnectionName="Auth" Description="新增">
          if exists(SELECT [SupplierID] FROM [zc_Supplier] where [SupplierName]=@SupplierName and IsActive=1)
          raiserror('存在相同全称，无法保存',16,1) with nowait
          else if exists(SELECT [SupplierID] FROM [zc_Supplier] where [SupplierJC]=@SupplierJC and IsActive=1)
          raiserror('存在相同简称，无法保存',16,1) with nowait
          else
          INSERT INTO [zc_Supplier]
          ([SupplierID],[SupplierName],[SupplierJC],[SupplierJM],[Contact],[ContactMobiPhone],[ContactTel],[Email],[BusinessLicenseCode],[OrganizationCode],[TaxRegistrationNum],[InvoiceAddress],[Site],[ZipCode],[Address],[Remark],[IsActive],[CreatedUser],[CreatedTime],[ModifiedUser],[ModifiedTime])
          VALUES(@SupplierID,@SupplierName,@SupplierJC,@SupplierJM,@Contact,@ContactMobiPhone,@ContactTel,@Email,@BusinessLicenseCode,@OrganizationCode,@TaxRegistrationNum,@InvoiceAddress,@Site,@ZipCode,@Address,@Remark,1,@CreatedUser,@CreatedTime,@ModifiedUser,@ModifiedTime);
        </Sql>
        <Sql Name="GetEdit" ConnectionName="Auth" Description="查询编辑">
          SELECT [SupplierID],[SupplierName],[SupplierJC],[SupplierJM],[Contact],[ContactMobiPhone],[ContactTel],[Email],[BusinessLicenseCode],[OrganizationCode],[TaxRegistrationNum],[InvoiceAddress],[Site],[ZipCode],[Address],[Remark]
          FROM [zc_Supplier]
          WHERE [SupplierID]=@SupplierID
        </Sql>
        <Sql Name="Update" ConnectionName="Auth" Description="更新">
          if exists(SELECT [SupplierID] FROM [zc_Supplier] where [SupplierID]!=@SupplierID and [SupplierName]=@SupplierName and IsActive=1)
          raiserror('存在相同全称，无法保存',16,1) with nowait
          else if exists(SELECT [SupplierID] FROM [zc_Supplier] where [SupplierID]!=@SupplierID and  [SupplierJC]=@SupplierJC and IsActive=1)
          raiserror('存在相同简称，无法保存',16,1) with nowait
          else
          UPDATE [zc_Supplier]
          SET [SupplierName]=@SupplierName,[SupplierJC]=@SupplierJC,[SupplierJM]=@SupplierJM,[Contact]=@Contact,[ContactMobiPhone]=@ContactMobiPhone,[ContactTel]=@ContactTel,[Email]=@Email,[BusinessLicenseCode]=@BusinessLicenseCode,[OrganizationCode]=@OrganizationCode,[TaxRegistrationNum]=@TaxRegistrationNum,[InvoiceAddress]=@InvoiceAddress,[Site]=@Site,[ZipCode]=@ZipCode,[Address]=@Address,[Remark]=@Remark,[ModifiedUser]=@ModifiedUser,[ModifiedTime]=@ModifiedTime WHERE [SupplierID]=@SupplierID;
        </Sql>
        <Sql Name="Delete" ConnectionName="Auth" Description="删除">
          DECLARE @sql varchar(max);
          BEGIN TRY
      
          SET @sql='if exists(select AssetID from zc_Asset where SupplierID in (''' + REPLACE(@Keys,',',''',''') + '''))
 raiserror(''信息已使用，无法删除'',16,1) with nowait
else
UPDATE [zc_Supplier] SET IsActive=0 WHERE [SupplierID] in (''' + REPLACE(@Keys,',',''',''') + ''')';
          EXEC(@sql);

          END TRY
          BEGIN CATCH
          DECLARE @error varchar(2000);
          SET @error = ERROR_MESSAGE();
          RAISERROR(@error ,11,1);
          END CATCH
        </Sql>
        <Sql Name="GetAssetSupplier" SharedName="GetAssetSupplier" ConnectionName="Auth" Description="获取资产厂商">SELECT [SupplierID]as ID ,[SupplierName] as Name
FROM [dbo].[zc_Supplier] where IsActive=1
				</Sql>
      </Table>
      <Table Name="zc_INVWarehouse" ConnectionName="Auth" TableName="zc_INVWarehouse">
        <Sql Name="QueryCount" ConnectionName="Auth" Description="检索查询总数">
          SELECT count(w.[WHCd])
          FROM [zc_INVWarehouse] w join [dbo].[fun_sys_GetUserCompanys](@UserID)c on w.CompanyID=c.CompanyID
          WHERE w.[CompanyID] like '%'+@CompanyID and  w.[WHName] like '%'+@WHName+'%' and w.IsActive=1
        </Sql>
        <Sql Name="QueryPage" ConnectionName="Auth" Description="检索分页查询">
          SELECT w.[WHCd],w.[CompanyID],w.[WHName],w.[Tel],w.[Fax],w.[Saddress],e.Name as [OfficerName],w.[OfficerEmail],w.[OfficerMtel],w.[OfficerOtel]
         , ass.[Area]+'('+ass.[AreaCode]+')' as[CompanyName]
          FROM [zc_INVWarehouse] w join [dbo].[fun_sys_GetUserCompanys](@UserID)c on w.CompanyID=c.CompanyID
          left join  [hr_Employee]e on w.OfficerName=e.EmployeeID
          left join [zc_Area]ass on w.[CompanyID]=ass.[CompanyID]
          WHERE w.[CompanyID] like '%'+@CompanyID and  w.[WHName] like '%'+@WHName+'%' and w.IsActive=1
          ORDER BY w.ModifiedTime  desc
          OFFSET ((CAST(@Page as int) - 1) * cast(@Rows AS int)) ROWS
          FETCH NEXT  CAST(@Rows AS int) ROWS ONLY
        </Sql>
        <Sql Name="GetDetail" ConnectionName="Auth" Description="查询明细">
          SELECT w.[WHCd],w.[CompanyID],w.[WHName],w.[Tel],w.[Fax],w.[Saddress],e.Name as [OfficerName],w.[OfficerEmail],w.[OfficerMtel],w.[OfficerOtel], ass.[Area]+'('+ass.[AreaCode]+')' as[CompanyName]
          FROM [zc_INVWarehouse] w
          left join [zc_Area]ass on w.[CompanyID]=ass.[CompanyID]
          left join  [hr_Employee]e on w.OfficerName=e.EmployeeID
          join [hr_Company] c on w.CompanyID=c.CompanyID
          WHERE w.[WHCd]=@WHCd
        </Sql>
        <Sql Name="Add" ConnectionName="Auth" Description="新增">
          if exists(select WHCd from [zc_INVWarehouse] where [CompanyID]=@CompanyID and [WHName]=@WHName and [IsActive]=1)
          raiserror('已存在相同信息，保存失败',16,1) with nowait
          else
          INSERT INTO [zc_INVWarehouse]
          ([WHCd],[CompanyID],[WHName],[Tel],[Fax],[Saddress],[OfficerName],[OfficerEmail],[OfficerMtel],[OfficerOtel],[IsActive],[CreatedUser],[CreatedTime],[ModifiedUser],[ModifiedTime])
          VALUES(@WHCd,@CompanyID,@WHName,@Tel,@Fax,@Saddress,@OfficerName,@OfficerEmail,@OfficerMtel,@OfficerOtel,1,@CreatedUser,@CreatedTime,@ModifiedUser,@ModifiedTime);
        </Sql>
        <Sql Name="GetEdit" ConnectionName="Auth" Description="查询编辑">
          SELECT w.[WHCd],w.[CompanyID],w.[WHName],w.[Tel],w.[Fax],w.[Saddress],w.[OfficerName],w.[OfficerEmail],w.[OfficerMtel],w.[OfficerOtel], ass.[Area]+'('+ass.[AreaCode]+')' as[CompanyName]
          FROM [zc_INVWarehouse] w join [hr_Company] c on w.CompanyID=c.CompanyID
          left join [zc_Area]ass on w.[CompanyID]=ass.[CompanyID]
          WHERE w.[WHCd]=@WHCd
        </Sql>
        <Sql Name="Update" ConnectionName="Auth" Description="更新">
          if exists(select WHCd from [zc_INVWarehouse] where [WHCd]!=@WHCd and [CompanyID]=@CompanyID and [WHName]=@WHName and [IsActive]=1)
          raiserror('已存在相同信息，保存失败',16,1) with nowait
          else
          UPDATE [zc_INVWarehouse]
          SET  [WHName]=@WHName,[Tel]=@Tel,[Fax]=@Fax,[Saddress]=@Saddress,[OfficerName]=@OfficerName,[OfficerEmail]=@OfficerEmail,[OfficerMtel]=@OfficerMtel,[OfficerOtel]=@OfficerOtel,[ModifiedUser]=@ModifiedUser,[ModifiedTime]=@ModifiedTime WHERE [WHCd]=@WHCd;
        </Sql>
        <Sql Name="Delete" ConnectionName="Auth" Description="删除">
          DECLARE @sql varchar(max);
          BEGIN TRY
     
          SET @sql= 'if exists(select AssetID from zc_Asset where WHCd in (''' + REPLACE(@Keys,',',''',''') + '''))
 raiserror(''仓库已使用，无法删除'',16,1) with nowait
else
UPDATE [zc_INVWarehouse] SET IsActive=0 WHERE [WHCd] in (''' + REPLACE(@Keys,',',''',''') + ''')';
          EXEC(@sql);

          END TRY
          BEGIN CATCH
          DECLARE @error varchar(2000);
          SET @error = ERROR_MESSAGE();
          RAISERROR(@error ,11,1);
          END CATCH
        </Sql>
        <Sql Name="GetAllWH" SharedName="GetAllWH" ConnectionName="Auth" Description="获取所有仓库">
          SELECT w.[WHCd] as ID,w.[WHName] as Name
          FROM [zc_INVWarehouse] w join [dbo].[fun_sys_GetUserCompanys](@UserID)c on w.CompanyID=c.CompanyID
          WHERE w.[IsActive]=1
          ORDER BY w.[WHName]
        </Sql>
        <Sql Name="GetCompanyID" ConnectionName="Auth" SqlType="Scalar" Description="GetCompanyID">
          SELECT [CompanyID]
          FROM [zc_INVWarehouse]
          WHERE [WHCd]=@WHCd
        </Sql>
        <Sql Name="GetEmpByWH" SharedName="GetEmpByWH" ConnectionName="Auth" Description="根据仓库获取公司员工">
          declare    @CompanyID varchar(6)
          select @CompanyID=CompanyID from  [zc_INVWarehouse] WHERE [WHCd]=@WHCd
          SELECT distinct b.Name,b.DeptID as ID,case when b.ParentID='' then b.CompanyID else b.ParentID end as PID,b.SortID FROM [dbo].hr_Employee a
          left join [dbo].hr_Department b on a.DeptID=b.DeptID where b.CompanyID=@CompanyID  and b.IsActive=1 union
          SELECT Name,EmployeeID,DeptID,'' FROM [dbo].hr_Employee where IsActive=1  union
          SELECT Name,CompanyID,'000000','' from [hr_Company] where [CompanyID]=@CompanyID union
          SELECT ' 无','','000000',0 order by b.SortID
        </Sql>
        <Sql Name="GetWHByCompany" SharedName="GetWHByCompany" ConnectionName="Auth" Description="根据公司获取仓库">
					SELECT [WHCd] as ID,[WHName] as Name
          FROM [zc_INVWarehouse] 
          WHERE [IsActive]=1 and [CompanyID]=@CompanyID
					ORDER BY [WHName]
				</Sql>
      </Table>
      <Table Name="zc_INVWhLoc" ConnectionName="Auth" TableName="zc_INVWhLoc">
        <Sql Name="QueryCount" ConnectionName="Auth" Description="检索查询总数">
          SELECT count(*)
          FROM [zc_INVWhLoc] i join [zc_INVWarehouse] w on i.[WhCd]=w.[WHCd]
          WHERE  i.[WhCd] like '%'+@WhCd  and i.[LOCNO] like '%'+@LOCNO+'%' and i.[IsActive]=1
        </Sql>
        <Sql Name="QueryPage" ConnectionName="Auth" Description="检索分页查询">
          SELECT i.[WhCd],i.[LOCNO],i.[LOCDesc],i.[LOCUser],i.[AutoKey],w.[WhName],e.Name as [LOCUserName]
          FROM [zc_INVWhLoc] i join [zc_INVWarehouse] w on i.[WhCd]=w.[WHCd]
          left join hr_Employee e on i.LOCUser=e.EmployeeID
          WHERE  i.[WhCd] like '%'+@WhCd  and i.[LOCNO] like '%'+@LOCNO+'%' and i.[IsActive]=1
          order by i.[WhCd],i.[LOCNO]
          OFFSET ( (CAST(@Page as int) - 1) * CAST(@Rows AS int)) ROWS
          FETCH NEXT  CAST(@Rows AS int) ROWS ONLY
        </Sql>
        <Sql Name="GetDetail" ConnectionName="Auth" Description="查询明细">
          SELECT i.[WhCd],i.[LOCNO],i.[LOCDesc],i.[LOCUser],w.[WHName],e.Name as [LOCUserName]
          FROM [zc_INVWhLoc] i join [zc_INVWarehouse] w on i.[WhCd]=w.[WHCd]
          left join hr_Employee e on i.LOCUser=e.EmployeeID
          WHERE i.[AutoKey]=@AutoKey
        </Sql>
        <Sql Name="Add" ConnectionName="Auth" Description="新增">
          if exists(select WHCd from [zc_INVWhLoc] where [WhCd]=@WhCd and [LOCNO]=@LOCNO and [IsActive]=1)
          raiserror('已存在相同信息，保存失败',16,1) with nowait
          else
          INSERT INTO [zc_INVWhLoc]
          ([WhCd],[LOCNO],[LOCDesc],[LOCUser],[IsActive],[CreatedUser],[CreatedTime],[ModifiedUser],[ModifiedTime])
          VALUES(@WhCd,@LOCNO,@LOCDesc,@LOCUser,1,@CreatedUser,@CreatedTime,@ModifiedUser,@ModifiedTime)
        </Sql>
        <Sql Name="GetEdit" ConnectionName="Auth" Description="查询编辑">
          SELECT i.[WhCd],i.[LOCNO],i.[LOCDesc],i.[AutoKey],i.[LOCUser],w.[WHName]
          FROM [zc_INVWhLoc] i join [zc_INVWarehouse] w on i.[WhCd]=w.[WHCd]
          WHERE i.[AutoKey]=@AutoKey
        </Sql>
        <Sql Name="Update" ConnectionName="Auth" Description="更新">
          if exists(select WhCd from [zc_INVWhLoc] where [WhCd]=@WhCd and [LOCNO]=@LOCNO and [IsActive]=1 and [AutoKey]!=@AutoKey)
          raiserror('已存在相同信息，保存失败',16,1) with nowait
          else
          UPDATE [zc_INVWhLoc]
          SET  [LOCNO]=@LOCNO,[LOCDesc]=@LOCDesc,[LOCUser]=@LOCUser,[ModifiedUser]=@ModifiedUser,[ModifiedTime]=@ModifiedTime
          WHERE [AutoKey]=@AutoKey
        </Sql>
        <Sql Name="Delete" ConnectionName="Auth" Description="删除">
          DECLARE @sql varchar(max);
          BEGIN TRY
     
          SET @sql= 'if exists(select a.AssetID from zc_Asset a join [zc_INVWhLoc]b on a.WhCd=b.WhCd and a.LOCNO=b.LOCNO   where  b.[AutoKey] in (''' + REPLACE(@Keys,',',''',''') + '''))
 raiserror(''储位已使用，无法删除'',16,1) with nowait
else
delete from [zc_INVWhLoc] WHERE [AutoKey] in (''' + REPLACE(@Keys,',',''',''') + ''')';
          EXEC(@sql);

          END TRY
          BEGIN CATCH
          DECLARE @error varchar(2000);
          SET @error = ERROR_MESSAGE();
          RAISERROR(@error ,11,1);
          END CATCH
        </Sql>
        <Sql Name="GetCompanyID" ConnectionName="Auth" SqlType="Execute" Description="GetCompanyID">
          SELECT w.CompanyID
          FROM [zc_INVWhLoc] i join [zc_INVWarehouse] w on i.[WhCd]=w.[WHCd]
          WHERE i.[AutoKey]=@AutoKey
        </Sql>
        <Sql Name="GetLocByWH" SharedName="GetLocByWH" ConnectionName="Auth" Description="根据仓库获取储位">
					SELECT LOCNO as Name, LOCNO as ID
          FROM [zc_INVWhLoc]
          WHERE  WhCd=@WhCd and [IsActive]=1
        </Sql>
      </Table>
      <Table Name="zc_Asset" ConnectionName="Auth" TableName="zc_Asset">
        <Sql Name="QueryCount" ConnectionName="Auth" Description="检索查询总数">
					set @BuyDateBegin=IIF(@BuyDateBegin='','1900-01-01',@BuyDateBegin)
set @BuyDateEnd=IIF(@BuyDateEnd='','2100-01-01',@BuyDateEnd)
SELECT count(a.[AssetID])
  FROM [dbo].[zc_Asset]a
  left join [zc_Category]ca on a.[CategoryID]=ca.[CategoryID]
  left join [zc_INVWarehouse]wh on a.[WhCd]=wh.[WHCd]
  left join [zc_Unit]u on a.[UnitID]=u.[UnitID]
  left join [zc_Supplier]s on a.[SupplierID]=s.[SupplierID]
   join fun_sys_GetUserCompanys(@UserID)c on a.[CompanyID]=c.[CompanyID]
  left join [hr_Department]d on a.[DeptID]=d.[DeptID]
  left join [hr_Employee]e on a.[EmployeeID]=e.[EmployeeID]
  where a.[BarCard] like '%'+@BarCard+'%'
  and a.[AssetName] like '%'+@AssetName+'%'
  and (a.[CategoryID] like '%'+@CategoryID+'%'
  or ca.[ParentID] like '%'+@CategoryID+'%')
  and a.[AddType] like '%'+@AddType+'%'
  and a.[CompanyID] like '%'+@CompanyID+'%'
  and a.[DeptID] like '%'+@DeptID+'%'
  and a.[EmployeeID] like '%'+@EmployeeID+'%'
  and a.[WhCd] like '%'+@WhCd+'%'
  and a.[SupplierID] like '%'+@SupplierID+'%'
  and (a.[UseCondition] like '%'+@UseCondition+'%'
  or @UseCondition like '%'+a.[UseCondition]+'%')
  and IIF(a.[BuyDate]='','1900-01-01',a.[BuyDate]) between @BuyDateBegin and @BuyDateEnd
					and a.[IsActive]=1
				</Sql>
        <Sql Name="QueryPage" ConnectionName="Auth" Description="检索分页查询">
					set @BuyDateBegin=IIF(@BuyDateBegin='','1900-01-01',@BuyDateBegin)
set @BuyDateEnd=IIF(@BuyDateEnd='','2100-01-01',@BuyDateEnd)
SELECT a.[AssetID]
      ,a.[AssetName]
      ,a.[CategoryID]
      ,a.[SpecificationsModel]
      ,case a.[AddType] when 10 then '购买' when 20 then '借用'  when 90 then '其它' end as [AddType]
      ,a.[WhCd]
      ,a.[LOCNO]
      ,a.[UnitID]
      ,a.[BarCard]
      ,a.[SupplierID]
      ,a.[BuyDate]
      ,a.[UseYear]
,(case a.UseCondition when 'RK'then'入库' when 'LY'then'领用'when 'JY'then'借用'when 'GH'then'归还'when 'DB'then'调拨'when 'BX'then'报修'when 'BF'then'报废'when 'QL'then'清理'when 'QT'then'其他' end)as UseCondition
      ,a.[CompanyID]
      ,a.[DeptID]
      ,a.[EmployeeID]
      ,a.[QualityDescription]
      ,convert(varchar, a.[Price],1) as [Price]
      ,a.[Remark]
      ,a.[Status]
   ,ca.[Category]
   ,wh.[WHName]
   ,u.[UnitName]
   ,s.[SupplierName]
          ,ass.[Area]+'('+ass.[AreaCode]+')' as [CName]
   ,d.[Name]as [DName]
   ,e.[Name]as [EName]
,(select max([AADATE]) from [dbo].[zc_AssetAlteration] where [AssetID]=a.[AssetID] and [AAType]='LY') as [AADATE]
  FROM [dbo].[zc_Asset]a
  left join [zc_Category]ca on a.[CategoryID]=ca.[CategoryID]
  left join [zc_INVWarehouse]wh on a.[WhCd]=wh.[WHCd]
  left join [zc_Unit]u on a.[UnitID]=u.[UnitID]
  left join [zc_Supplier]s on a.[SupplierID]=s.[SupplierID]
          join fun_sys_GetUserCompanys(@UserID)c on a.[CompanyID]=c.[CompanyID]
          left join [zc_Area]ass on a.[CompanyID]=ass.[CompanyID]
  left join [hr_Department]d on a.[DeptID]=d.[DeptID]
  left join [hr_Employee]e on a.[EmployeeID]=e.[EmployeeID]
          where a.[BarCard] like '%'+@BarCard+'%'
  and a.[AssetName] like '%'+@AssetName+'%'
  and (a.[CategoryID] like '%'+@CategoryID+'%'
  or ca.[ParentID] like '%'+@CategoryID+'%')
  and a.[AddType] like '%'+@AddType+'%'
  and a.[CompanyID] like '%'+@CompanyID+'%'
  and a.[DeptID] like '%'+@DeptID+'%'
  and a.[EmployeeID] like '%'+@EmployeeID+'%'
  and a.[WhCd] like '%'+@WhCd+'%'
  and a.[SupplierID] like '%'+@SupplierID+'%'
  and (a.[UseCondition] like '%'+@UseCondition+'%'
  or @UseCondition like '%'+a.[UseCondition]+'%')
  and IIF(a.[BuyDate]='','1900-01-01',a.[BuyDate]) between @BuyDateBegin and @BuyDateEnd
  and a.[IsActive]=1
 ORDER BY CategoryID,AssetName
 OFFSET ( (CAST(@Page as int) - 1) * cast(@Rows AS int)) ROWS
					FETCH NEXT CAST(@Rows AS int) ROWS ONLY
				</Sql>
        <Sql Name="GetDetail" ConnectionName="Auth" Description="查询明细">
					SELECT a.[AssetID]
      ,a.[AssetName]
      ,a.[CategoryID]
      ,a.[SpecificationsModel]
,case a.[AddType] when 10 then '购买' when 20 then '借用'  when 90 then '其它' end as [AddType]
      ,a.[WhCd]
      ,a.[LOCNO]
      ,a.[UnitID]
					,a.[BarCard]
      ,a.[SupplierID]
      ,a.[BuyDate]
      ,a.[UseYear]
,(case a.UseCondition when 'RK'then'入库' when 'LY'then'领用'when 'JY'then'借用'when 'GH'then'归还'when 'BY'then'保养'when 'BX'then'报修'when 'BF'then'报废'when 'QL'then'清理'when 'QT'then'其他' end)as UseCondition
      ,a.[CompanyID]
      ,a.[DeptID]
      ,a.[EmployeeID]
      ,a.[QualityDescription]
      ,a.[Price]
      ,a.[Remark]
      ,a.[Status]
      ,a.[IsActive]
      ,a.[CreatedUser]
      ,a.[CreatedTime]
      ,a.[ModifiedUser]
      ,a.[ModifiedTime]
      ,a.[AutoKey]
   ,ca.[Category]
   ,wh.[WHName]
   ,u.[UnitName]
   ,s.[SupplierName]
          ,ass.[Area]+'('+ass.[AreaCode]+')' as [CName]
   ,d.[Name]as [DName]
   ,e.[Name]as [EName]
,(select max([AADATE]) from [dbo].[zc_AssetAlteration] where [AssetID]=a.[AssetID] and [AAType]='LY') as [AADATE]
  FROM [dbo].[zc_Asset]a
  left join [zc_Category]ca on a.[CategoryID]=ca.[CategoryID]
  left join [zc_INVWarehouse]wh on a.[WhCd]=wh.[WHCd]
  left join [zc_Unit]u on a.[UnitID]=u.[UnitID]
  left join [zc_Supplier]s on a.[SupplierID]=s.[SupplierID]
  left join [hr_Company]c on a.[CompanyID]=c.[CompanyID]
  left join [hr_Department]d on a.[DeptID]=d.[DeptID]
  left join [hr_Employee]e on a.[EmployeeID]=e.[EmployeeID]
          left join [zc_Area]ass on a.[CompanyID]=ass.[CompanyID]
WHERE a.[AssetID]=@AssetID
			</Sql>
        <Sql Name="Add" ConnectionName="Auth" Description="新增">
			declare @JM varchar(10)
			select @JM=[AreaCode] FROM [zc_Area] where CompanyID=@CompanyID
			if (isnull(@JM,'')='')
			raiserror('公司地区编码为空，无法保存',16,1)
else 
begin
 set @JM=@JM+substring(@CategoryID,7,len(@CategoryID))
 declare @len int
 set @len=len(@JM)+5
 print @len
			exec sp_CreateSerialCode 'AssetAdd',@JM,@len,@BarCard output

 INSERT INTO [zc_Asset]
 ([AssetID],[AssetName],[CategoryID],[SpecificationsModel],[UnitID],[AddType],[CompanyID],[DeptID],[EmployeeID],
			[WhCd],[LOCNO],[BarCard],[Price], [BuyDate],[SupplierID],[QualityDescription],[UseYear],[UseCondition],[Status],[Remark],
[IsActive],[CreatedUser],[CreatedTime],[ModifiedUser],[ModifiedTime])
 VALUES
 (@AssetID,@AssetName,substring(@CategoryID,1,6),@SpecificationsModel,@UnitID,@AddType,@CompanyID,'','',
					@WhCd,@LOCNO,@BarCard,@Price,@BuyDate,@SupplierID,@QualityDescription,@UseYear,'RK',@Status,@Remark,
					1,@CreatedUser,@CreatedTime,@ModifiedUser,@ModifiedTime)
					end
				</Sql>
        <Sql Name="GetEdit" ConnectionName="Auth" Description="查询编辑"> SELECT a.[AssetID]
      ,a.[AssetName]
      ,a.[CategoryID]
      ,a.[SpecificationsModel]
,a.[AddType] 
      ,a.[WhCd]
      ,a.[LOCNO]
      ,a.[UnitID]
     ,a.[BarCard]
      ,a.[SupplierID]
      ,a.[BuyDate]
      ,a.[UseYear]
,(case a.UseCondition when 'RK'then'入库' when 'LY'then'领用'when 'JY'then'借用'when 'GH'then'归还'when 'BY'then'保养'when 'BX'then'报修'when 'BF'then'报废'when 'QL'then'清理'when 'QT'then'其他' end)as UseCondition
      ,a.[CompanyID]
      ,a.[DeptID]
      ,a.[EmployeeID]
      ,a.[QualityDescription]
      ,a.[Price]
      ,a.[Remark]
      ,a.[Status]
      ,a.[IsActive]
      ,a.[CreatedUser]
      ,a.[CreatedTime]
      ,a.[ModifiedUser]
      ,a.[ModifiedTime]
      ,a.[AutoKey]
   ,ca.[Category]
   ,wh.[WHName]
   ,u.[UnitName]
   ,s.[SupplierName]
          ,ass.[Area]+'('+ass.[AreaCode]+')' as [CName]
   ,d.[Name]as [DName]
   ,e.[Name]as [EName]
,(select max([AADATE]) from [dbo].[zc_AssetAlteration] where [AssetID]=a.[AssetID] and [AAType]='LY') as [AADATE]
  FROM [dbo].[zc_Asset]a
  left join [zc_Category]ca on a.[CategoryID]=ca.[CategoryID]
  left join [zc_INVWarehouse]wh on a.[WhCd]=wh.[WHCd]
  left join [zc_Unit]u on a.[UnitID]=u.[UnitID]
  left join [zc_Supplier]s on a.[SupplierID]=s.[SupplierID]
  left join [hr_Company]c on a.[CompanyID]=c.[CompanyID]
  left join [hr_Department]d on a.[DeptID]=d.[DeptID]
  left join [hr_Employee]e on a.[EmployeeID]=e.[EmployeeID]
          left join [zc_Area]ass on a.[CompanyID]=ass.[CompanyID]
WHERE a.[AssetID]=@AssetID
			</Sql>
        <Sql Name="Update" ConnectionName="Auth" Description="更新">
				UPDATE [zc_Asset]
				SET  [AssetName]=@AssetName,[SpecificationsModel]=@SpecificationsModel,[UnitID]=@UnitID,[AddType]=@AddType,[BarCard]=@BarCard,[Price]=@Price,[BuyDate]=@BuyDate,[SupplierID]=@SupplierID,[QualityDescription]=@QualityDescription,[UseYear]=@UseYear,[Status]=@Status,[Remark]=@Remark,[ModifiedUser]=@ModifiedUser,[ModifiedTime]=@ModifiedTime WHERE [AssetID]=@AssetID;
			</Sql>
        <Sql Name="Delete" ConnectionName="Auth" Description="删除">
				DECLARE @sql varchar(max);
				BEGIN TRY
				IF(CHARINDEX(',',@Keys,0)&lt;=0)
				BEGIN
				UPDATE [zc_Asset] SET IsActive=0
				WHERE [AssetID]=@Keys;
				END
				ELSE
				BEGIN
				SET @sql= 'UPDATE [zc_Asset] SET IsActive=0 WHERE [AssetID] in (''' + REPLACE(@Keys,',',''',''') + ''')';
				EXEC(@sql);
				END
				END TRY
				BEGIN CATCH
				DECLARE @error varchar(2000);
				SET @error = ERROR_MESSAGE();
				RAISERROR(@error ,11,1);
				END CATCH
			</Sql>
        <Sql Name="GetCompanyID" ConnectionName="Auth" SqlType="Scalar" Description="GetCompanyID">  SELECT  [CompanyID] FROM [zc_Asset] WHERE [AssetID]=@AssetID</Sql>
        <Sql Name="GetDeptID" ConnectionName="Auth" SqlType="Scalar" Description="GetDeptID">  SELECT  IIf(isnull([DeptID],'')='','XXXX',[DeptID]) FROM [zc_Asset] WHERE [AssetID]=@AssetID</Sql>
        <Sql Name="GetWhCd" ConnectionName="Auth" SqlType="Scalar" Description="GetWhCd">  SELECT  IIf(isnull([WhCd],'')='','XXXX',[WhCd]) FROM [zc_Asset] WHERE [AssetID]=@AssetID</Sql>
        <Sql Name="CopyInfo" ConnectionName="Auth" SqlType="Execute" Description="获取复制信息">SELECT [AssetID],[AssetName],
    (select a.[CategoryID]+rtrim(ltrim(ISNULL(b.[BM],'')))+rtrim(ltrim(ISNULL(a.[BM],''))) from zc_Category a left join zc_Category b on a.ParentID=b.CategoryID where a.CategoryID=z.CategoryID)[CategoryID],
    [SpecificationsModel],[UnitID],[AddType],[CompanyID],[DeptID],[EmployeeID],[WhCd],[LOCNO],[BarCard],[Price],[BuyDate],[SupplierID],[QualityDescription],[UseYear],[UseCondition],[Status],[Remark],[IsActive]
    FROM [zc_Asset] z WHERE [AssetID]=@AssetID	</Sql>
        <Sql Name="GetDB" ConnectionName="Auth" Description="GetDB">SELECT aa.[AAID]
      ,convert(varchar, aa.[AADATE],23) as [AADATE]
      ,aa.[ConfirmedBy]
      ,aa.[ConfirmedDt]
      ,aa.[Remark]
   ,wh.[WHName]
   ,nwh.[WHName] as [NewWHName]
   ,ass.[Area]+'('+ass.[AreaCode]+')' as [CName]
   ,nass.[Area]+'('+nass.[AreaCode]+')' as [NewCName]
  FROM [dbo].[zc_AssetAlteration] aa
  left join [zc_Area]ass on aa.[CompanyID]=ass.[CompanyID]
  left join [zc_Area]nass on aa.[NewCompanyID]=nass.[CompanyID]
  left join [zc_INVWarehouse]wh on aa.[WhCd]=wh.[WHCd]
  left join [zc_INVWarehouse]nwh on aa.[NewWhCd]=nwh.[WHCd]
 where aa.[AssetID]=@AssetID and aa.AAType='DB'
				</Sql>
        <Sql Name="GetJH" ConnectionName="Auth" Description="GetJH">SELECT 
 convert(varchar,aa.[AADATE],23)[AADATE]
,case aa.AAType  when 'LY' then '领用' when 'GH' then '归还' when 'BX' then '报修' end as AAType
,aa.[Repairer]
,convert(varchar, aa.[RepairPrice],1) as [RepairPrice]
,aa.[Reason]
,aa.[Remark]
,ass.[Area]+'('+ass.[AreaCode]+')' as [CName]
,d.[Name]as [DName]
,e.[Name]as [ConfirmedName]
,ee.[Name]as [ScrapPersonName]
  FROM [dbo].[zc_AssetAlteration] aa
  join [dbo].[zc_Asset]a on aa.AssetID=a.AssetID
  left join [zc_Area]ass on a.[CompanyID]=ass.[CompanyID]
  left join [hr_Department]d on aa.[DeptID]=d.[DeptID]
  left join [hr_Employee]e on aa.[ConfirmedBy]=e.[EmployeeID]
  left join [hr_Employee]ee on aa.[ScrapPerson]=ee.[EmployeeID]
where a.[AssetID]=@AssetID and (aa.AAType='LY'or aa.AAType='GH')
order by aa.[CreatedTime]</Sql>
        <Sql Name="GetBX" ConnectionName="Auth" Description="GetBX">SELECT 
 convert(varchar,aa.[AADATE],23)[AADATE]
,case aa.AAType  when 'LY' then '领用' when 'GH' then '归还' when 'BX' then '报修' end as AAType
,case aa.[RepairType] when '10' then '定期维修' when '20' then '故障维修' when '30' then '保养' end as [RepairType]
,aa.[Repairer]
,convert(varchar, aa.[RepairPrice],1) as [RepairPrice]
,aa.[Reason]
,aa.[Remark]
,ass.[Area]+'('+ass.[AreaCode]+')' as [CName]
,d.[Name]as [DName]
,e.[Name]as [ConfirmedName]
,ee.[Name]as [ScrapPersonName]
  FROM [dbo].[zc_AssetAlteration] aa
  join [dbo].[zc_Asset]a on aa.AssetID=a.AssetID
  left join [zc_Area]ass on a.[CompanyID]=ass.[CompanyID]
  left join [hr_Department]d on aa.[DeptID]=d.[DeptID]
  left join [hr_Employee]e on aa.[ConfirmedBy]=e.[EmployeeID]
  left join [hr_Employee]ee on aa.[ScrapPerson]=ee.[EmployeeID]
where a.[AssetID]=@AssetID and aa.AAType='BX'
order by aa.[CreatedTime]</Sql>
        <Sql Name="GetDetailByBarCard" ConnectionName="Auth" Description="根据编码获取固定资产信息">
SELECT a.[AssetID]
,a.[AssetName]
,a.[CategoryID]
,a.[SpecificationsModel]
,case a.[AddType] when 10 then '购买' when 20 then '借用'  when 90 then '其它' end as [AddType]
,a.[WhCd]
,a.[LOCNO]
,a.[UnitID]
,a.[BarCard]
,a.[SupplierID]
,a.[BuyDate]
,a.[UseYear]
,(case a.UseCondition when 'RK'then'入库' when 'LY'then'领用'when 'JY'then'借用'when 'GH'then'归还'when 'BY'then'保养'when 'BX'then'报修'when 'BF'then'报废'when 'QL'then'清理'when 'QT'then'其他' end)as UseCondition
,a.[CompanyID]
,a.[DeptID]
,a.[EmployeeID]
,a.[QualityDescription]
, convert(varchar, a.[Price],1) as [Price]
,a.[Remark]
,a.[Status]
,a.[IsActive]
,a.[CreatedUser]
,a.[CreatedTime]
,a.[ModifiedUser]
,a.[ModifiedTime]
,a.[AutoKey]
,ca.[Category]
,wh.[WHName]
,u.[UnitName]
,s.[SupplierName]
,ass.[Area]+'('+ass.[AreaCode]+')' as [CName]
,d.[Name]as [DName]
,e.[Name]as [EName]
,(select max([AADATE]) from [dbo].[zc_AssetAlteration] where [AssetID]=a.[AssetID] and [AAType]='LY') as [AADATE]
FROM [dbo].[zc_Asset]a
left join [zc_Category]ca on a.[CategoryID]=ca.[CategoryID]
left join [zc_INVWarehouse]wh on a.[WhCd]=wh.[WHCd]
left join [zc_Unit]u on a.[UnitID]=u.[UnitID]
left join [zc_Supplier]s on a.[SupplierID]=s.[SupplierID]
left join [hr_Company]c on a.[CompanyID]=c.[CompanyID]
left join [hr_Department]d on a.[DeptID]=d.[DeptID]
left join [hr_Employee]e on a.[EmployeeID]=e.[EmployeeID]
left join [zc_Area]ass on a.[CompanyID]=ass.[CompanyID]
WHERE a.[BarCard]=@BarCard
				</Sql>
        <Sql Name="GetAllBarCardBF" SharedName="GetAllBarCardBF" ConnectionName="Auth" Description="获取可以报废固定资产编码">SELECT a.[BarCard] as ID, a.[BarCard] as Name
FROM [dbo].[zc_Asset]a join [dbo].[fun_sys_GetUserCompanys](@UserID)c
on a.CompanyID = c.CompanyID where a.IsActive=1 and a.UseCondition not in('BF','LY')</Sql>
        <Sql Name="GetAllBarCardQL" SharedName="GetAllBarCardQL" ConnectionName="Auth" Description="获取可以清理固定资产编码">SELECT a.[BarCard] as ID, a.[BarCard] as Name
FROM [dbo].[zc_Asset]a join [dbo].[fun_sys_GetUserCompanys](@UserID)c
on a.CompanyID = c.CompanyID where a.IsActive=1 and a.UseCondition='BF'</Sql>
        <Sql Name="GetAllBarCardDB" SharedName="GetAllBarCardDB" ConnectionName="Auth" Description="获取可以调拨固定资产编码">SELECT a.[BarCard] as ID, a.[BarCard] as Name
FROM [dbo].[zc_Asset]a join [dbo].[fun_sys_GetUserCompanys](@UserID)c
on a.CompanyID = c.CompanyID </Sql>
        <Sql Name="AssetRateReport" ConnectionName="Auth" Description="固定资产使用率报表">declare @a int
select @a=count(*) from [zc_AssetAlteration] where (AAType='LY'or AAType='JY') and IsActive=1;
select a.AssetID,a.AssetName,a.CategoryID,a.BuyDate,a.UseYear,b.Category,@a as UseCount from [zc_Asset]a
left join [zc_Category]b on a.CategoryID=b.CategoryID
where a.BuyDate between @BuyDateS and @BuyDateE and a.CategoryID like '%'+@CategoryID+'%' and a.IsActive=1 and a.CompanyID like '%'+@CompanyID +'%' </Sql>
        <Sql Name="AssetByDeptReport" ConnectionName="Auth" Description="固定资产部门分摊报表">select isnull(b.Name,'库存') as DeptName,isnull(c.Category,'无')Category,sum(isnull(d.NetAsset,0)) as NetAsset,count(a.AssetID)as AssetCount from zc_Asset a
left join hr_Department b on a.DeptID=b.DeptID
left join zc_Category c on a.CategoryID=c.CategoryID
left join zc_AssetValue d on a.AssetID=d.AssetID
where isnull(a.DeptID,'') like '%'+@DeptID+'%'  and isnull(a.CompanyID,'') like '%'+@CompanyID+'%' 
group by b.Name,c.Category
union
select isnull(b.Name,'库存') as DeptName,cast (count(distinct Category)as varchar(4))as Category,sum(isnull(d.NetAsset,0)) as NetAsset,count(a.AssetID)as AssetCount from zc_Asset a
left join hr_Department b on a.DeptID=b.DeptID
left join zc_Category c on a.CategoryID=c.CategoryID
left join zc_AssetValue d on a.AssetID=d.AssetID
where isnull(a.DeptID,'') like '%'+@DeptID+'%'  and isnull(a.CompanyID,'') like '%'+@CompanyID+'%' 
group by b.Name 
union
select '总计',cast (count(distinct Category)as varchar(4))as Category,sum(isnull(d.NetAsset,0)) as NetAsset,count(a.AssetID)as AssetCount from zc_Asset a
left join hr_Department b on a.DeptID=b.DeptID
left join zc_Category c on a.CategoryID=c.CategoryID
left join zc_AssetValue d on a.AssetID=d.AssetID
where isnull(a.DeptID,'') like '%'+@DeptID+'%'  and isnull(a.CompanyID,'') like '%'+@CompanyID+'%' 

order by DeptName ,Category desc</Sql>
        <Sql Name="AssetClassify" ConnectionName="Auth" Description="固定资产分类统计报表">select isnull(b.Name,'库存') as DeptName,isnull(c.Category,'无')Category,sum(isnull(d.NetAsset,0)) as NetAsset,count(a.AssetID)as AssetCount from zc_Asset a
left join hr_Department b on a.DeptID=b.DeptID
left join zc_Category c on a.CategoryID=c.CategoryID
left join zc_AssetValue d on a.AssetID=d.AssetID
where isnull(a.DeptID,'') like '%'+@DeptID+'%'  and isnull(a.CompanyID,'') like '%'+@CompanyID+'%'  and isnull(a.CategoryID,'') like '%'+@CategoryID+'%' and a.BuyDate between @BuyDateS and @BuyDateE 
group by b.Name,c.Category
union
select isnull(b.Name,'库存') as DeptName,cast (count(distinct Category)as varchar(4))as Category,sum(isnull(d.NetAsset,0)) as NetAsset,count(a.AssetID)as AssetCount from zc_Asset a
left join hr_Department b on a.DeptID=b.DeptID
left join zc_Category c on a.CategoryID=c.CategoryID
left join zc_AssetValue d on a.AssetID=d.AssetID
where isnull(a.DeptID,'') like '%'+@DeptID+'%'  and isnull(a.CompanyID,'') like '%'+@CompanyID+'%'   and isnull(a.CategoryID,'') like '%'+@CategoryID+'%' and a.BuyDate between @BuyDateS and @BuyDateE 
group by b.Name 
union
select '总计',cast (count(distinct Category)as varchar(4))as Category,sum(isnull(d.NetAsset,0)) as NetAsset,count(a.AssetID)as AssetCount from zc_Asset a
left join hr_Department b on a.DeptID=b.DeptID
left join zc_Category c on a.CategoryID=c.CategoryID
left join zc_AssetValue d on a.AssetID=d.AssetID
where isnull(a.DeptID,'') like '%'+@DeptID+'%'  and isnull(a.CompanyID,'') like '%'+@CompanyID+'%'   and isnull(a.CategoryID,'') like '%'+@CategoryID+'%' and a.BuyDate between @BuyDateS and @BuyDateE 

order by DeptName ,Category desc</Sql>
      </Table>
      <Table Name="zc_Area" ConnectionName="Auth" TableName="zc_Area">
        <Sql Name="QueryCount" ConnectionName="Auth" Description="检索查询总数">
					SELECT count([AreaCode])
					FROM [zc_Area]
					where [AreaCode] like '%'+@AreaCode+'%'
					and [Area] like '%'+@Area+'%'
					and [CompanyID] like '%'+@CompanyID
					and [IsActive]=1
				</Sql>
        <Sql Name="QueryPage" ConnectionName="Auth" Description="检索分页查询">
					SELECT a.[CompanyID],a.[Area],a.[AreaCode],a.[Remark],c.Name as [CName],a.[AutoKey]
					FROM [zc_Area]a left join [hr_Company]c on a.CompanyID=c.CompanyID
					where a.[AreaCode] like '%'+@AreaCode+'%'
					and a.[Area] like '%'+@Area+'%'
					and a.[CompanyID] like '%'+@CompanyID
					and a.[IsActive]=1
					ORDER BY a.[AreaCode]
					OFFSET ((CAST(@Page as int) - 1) * cast(@Rows as int)) ROWS
					FETCH NEXT CAST(@Rows as int) ROWS ONLY
				</Sql>
        <Sql Name="GetDetail" ConnectionName="Auth" Description="查询明细">
					SELECT a.[CompanyID],a.[Area],a.[AreaCode],a.[Remark],c.Name as [CName]
					FROM [zc_Area]a left join [hr_Company]c on a.CompanyID=c.CompanyID
					WHERE a.[AutoKey]=@AutoKey
				</Sql>
        <Sql Name="Add" ConnectionName="Auth" Description="新增">
					if exists(select [AreaCode] from [zc_Area] where [CompanyID] =@CompanyID and IsActive=1)
					raiserror('已存在公司信息，保存失败',16,1) with nowait
					else if exists(select [Area] from [zc_Area] where [Area] =@Area and IsActive=1)
					raiserror('已存在相同名称，保存失败',16,1) with nowait
					else if exists(select [AreaCode] from [zc_Area] where [AreaCode] =@AreaCode and IsActive=1)
					raiserror('已存在相同编码，保存失败',16,1) with nowait
					else
					INSERT INTO [zc_Area]
					([CompanyID],[Area],[AreaCode],[Remark],[IsActive],[CreatedUser],[CreatedTime],[ModifiedUser],[ModifiedTime])
					VALUES(@CompanyID,@Area,@AreaCode,@Remark,1,@CreatedUser,@CreatedTime,@ModifiedUser,@ModifiedTime);
				</Sql>
        <Sql Name="GetEdit" ConnectionName="Auth" Description="查询编辑">
					SELECT a.[CompanyID],a.[Area],a.[AreaCode],a.[Remark],c.Name as [CName],a.[AutoKey]
					FROM [zc_Area]a left join [hr_Company]c on a.CompanyID=c.CompanyID
					WHERE a.[AutoKey]=@AutoKey
				</Sql>
        <Sql Name="Update" ConnectionName="Auth" Description="更新">
					if exists(select AssetID from zc_Asset where substring(AssetID,1,4) =(select AreaCode from  [zc_Area]WHERE [AutoKey]=@AutoKey))
          raiserror('编码已使用，无法修改',16,1) with nowait
					else if exists(select [Area] from [zc_Area] where [Area] =@Area and IsActive=1 and AutoKey!=@AutoKey)
					raiserror('已存在相同名称，保存失败',16,1) with nowait
					else if exists(select [AreaCode] from [zc_Area] where [AreaCode] =@AreaCode and IsActive=1 and AutoKey!=@AutoKey)
					raiserror('已存在相同编码，保存失败',16,1) with nowait
					else
					UPDATE [zc_Area]
					SET  [Area]=@Area,[AreaCode]=@AreaCode,[Remark]=@Remark,[ModifiedUser]=@ModifiedUser,[ModifiedTime]=@ModifiedTime WHERE [AutoKey]=@AutoKey;
				</Sql>
        <Sql Name="Delete" ConnectionName="Auth" Description="删除">
					DECLARE @sql varchar(max);
					BEGIN TRY
					SET @sql= 'if exists(select AssetID from zc_Asset where substring(AssetID,1,4) in (''' + REPLACE(@Keys,',',''',''') + '''))
					raiserror(''编码已使用，无法删除'',16,1) with nowait
					else
					UPDATE [zc_Area] SET IsActive=0 WHERE [AutoKey] in (''' + REPLACE(@Keys,',',''',''') + ''')';
					EXEC(@sql);
					END TRY
					BEGIN CATCH
					DECLARE @error varchar(2000);
					SET @error = ERROR_MESSAGE();
					RAISERROR(@error ,11,1);
					END CATCH
				</Sql>
        <Sql Name="GetAllAreaCode" SharedName="GetAllAreaCode" ConnectionName="Auth" Description="获取所有地区编码">SELECT a.[CompanyID] as ID,a.[Area]+'('+a.[AreaCode]+')' as Name
FROM [dbo].[zc_Area]a join  fun_sys_GetUserCompanys(@UserID)c
on a.CompanyID=c.CompanyID where [IsActive]=1 order by a.[Area]
				</Sql>
        <Sql Name="GetAllAreaCodeSearch" SharedName="GetAllAreaCodeSearch" ConnectionName="Auth" Description="获取所有地区编码检索">SELECT a.[CompanyID] as ID,a.[Area]+'('+a.[AreaCode]+')' as Name,a.[Area]
FROM [dbo].[zc_Area]a join  fun_sys_GetUserCompanys(@UserID)c
on a.CompanyID=c.CompanyID where a.[IsActive]=1
union select '','全部','' order by a.[Area]</Sql>
        <Sql Name="GetAllAreaCodeDiaoBo" SharedName="GetAllAreaCodeDiaoBo" ConnectionName="Auth" Description="获取所有地区编码调拨">SELECT [CompanyID] as ID,[Area]+'('+[AreaCode]+')' as Name
FROM [dbo].[zc_Area] where [IsActive]=1 order by [Area]
    
    </Sql>
      </Table>
      <Table Name="zc_Consumable" ConnectionName="Auth" TableName="zc_Consumable">
        <Sql Name="QueryCount" ConnectionName="Auth" Description="检索查询总数">select count(*) from zc_Consumable 
where  CompanyID like '%'+@CompanyID+'%'
and Product like '%'+@Product+'%'
and IsActive ='1'</Sql>
        <Sql Name="QueryPage" ConnectionName="Auth" Description="检索分页查询">SELECT a.[CompanyID],a.[ProductID],a.[Product],CONVERT(varchar(100),a.[BuyDate],20)as BuyDate,a.[Amount],a.[SupplierID],a.[Remark],b.Name,c.WHName,d.SupplierName,isnull(sum(f.Qty),0) as Qty 
 FROM [zc_Consumable]a 
left join [hr_Company]b on a.CompanyID=b.CompanyID
left join [zc_INVWarehouse]c on a.[WhCd]=c.[WhCd]
left join [zc_Supplier]d on a.[SupplierID]=d.[SupplierID] 
left join [zc_INVWhQt]f on (a.[ProductID]=f.[ProductID])
where  a.CompanyID like '%'+@CompanyID+'%'
and a.Product like '%'+@Product+'%'
and a.IsActive ='1' 
group by a.ProductID,a.[CompanyID],a.BuyDate,a.[Product],a.[Amount],a.[SupplierID],a.[Remark],b.Name,c.WHName,d.SupplierName
order by a.ProductID desc
 OFFSET ( (CAST(@Page as int) - 1) * cast(@Rows AS int)) ROWS
     FETCH NEXT CAST(@Rows AS int) ROWS ONLY</Sql>
        <Sql Name="GetDetail" ConnectionName="Auth" Description="查询明细">SELECT a.[CompanyID],a.[ProductID],a.[Product],CONVERT(varchar(100),a.[BuyDate],20)as BuyDate,Convert(decimal(18,2),a.[Amount])as Amount,a.[SupplierID],a.[Remark],b.Name,c.WHName,d.SupplierName
 FROM [zc_Consumable]a 
left join [hr_Company]b on a.CompanyID=b.CompanyID
left join [zc_INVWarehouse]c on a.[WhCd]=c.[WhCd]
left join [zc_Supplier]d on a.[SupplierID]=d.[SupplierID] 
WHERE a.[ProductID]=@ProductID</Sql>
        <Sql Name="Add" ConnectionName="Auth" Description="新增"> if exists( select * from [zc_Consumable] where [Product]=@Product and [IsActive]=1)
			  begin
			  RAISERROR ('已经存在相同信息，无法保存！',15, 1) WITH NOWAIT
			  end
			  else
			  begin
			  INSERT INTO [zc_Consumable]
			  ([CompanyID],[ProductID],[Product],[Remark],[IsActive],[CreatedUser],[CreatedTime],[ModifiedUser],[ModifiedTime])
			  VALUES(@CompanyID,@ProductID,@Product,@Remark,@IsActive,@CreatedUser,@CreatedTime,@ModifiedUser,@ModifiedTime);
SELECT a.[CompanyID],a.[ProductID],a.[Product],CONVERT(varchar(100),a.[BuyDate],20)as BuyDate,a.[Amount],a.[SupplierID],a.[Remark],b.Name,c.WHName,d.SupplierName 
 FROM [zc_Consumable]a 
left join [hr_Company]b on a.CompanyID=b.CompanyID
left join [zc_INVWarehouse]c on a.[WhCd]=c.[WhCd]
left join [zc_Supplier]d on a.[SupplierID]=d.[SupplierID] 
			  WHERE a.[AutoKey]=scope_identity();
			  end</Sql>
        <Sql Name="GetEdit" ConnectionName="Auth" Description="查询编辑">SELECT a.[CompanyID],a.[ProductID],a.[Product],CONVERT(varchar(100),a.[BuyDate],20)as BuyDate,a.[Amount],a.[WhCd],a.[SupplierID],a.[Remark],b.Name,c.WHName,d.SupplierName
 FROM [zc_Consumable]a 
left join [hr_Company]b on a.CompanyID=b.CompanyID
left join [zc_INVWarehouse]c on a.[WhCd]=c.[WhCd]
left join [zc_Supplier]d on a.[SupplierID]=d.[SupplierID] 
WHERE a.[ProductID]=@ProductID</Sql>
        <Sql Name="Update" ConnectionName="Auth" Description="更新">UPDATE [zc_Consumable]
 SET  [ProductID]=@ProductID,[Product]=@Product,[CompanyID]=@CompanyID,[Remark]=@Remark,[IsActive]=@IsActive,[ModifiedUser]=@ModifiedUser,[ModifiedTime]=@ModifiedTime WHERE [ProductID]=@ProductID;
SELECT a.[CompanyID],a.[ProductID],a.[Product],CONVERT(varchar(100),a.[BuyDate],20)as BuyDate,a.[Amount],a.[SupplierID],a.[Remark],b.Name,c.WHName,d.SupplierName
 FROM [zc_Consumable]a 
left join [hr_Company]b on a.CompanyID=b.CompanyID
left join [zc_INVWarehouse]c on a.[WhCd]=c.[WhCd]
left join [zc_Supplier]d on a.[SupplierID]=d.[SupplierID] 
WHERE [ProductID]=@ProductID</Sql>
        <Sql Name="Delete" ConnectionName="Auth" Description="删除">
          DECLARE @sql varchar(max);
BEGIN TRY
     
          SET @sql= 'if exists(select ProductID from zc_Consumable where ProductID in (''' + REPLACE(@Keys,',',''',''') + '''))
 raiserror(''耗品处于使用状态，无法删除'',16,1) with nowait
else
UPDATE [zc_Consumable] SET IsActive=0 WHERE [ProductID ] in (''' + REPLACE(@Keys,',',''',''') + ''')';
    EXEC(@sql);

END TRY
BEGIN CATCH
    DECLARE @error varchar(2000);
    SET @error = ERROR_MESSAGE();
    RAISERROR(@error ,11,1);
END CATCH</Sql>
        <Sql Name="GetRK" ConnectionName="Auth" Description="获取入库">select a.[PAID],a.[ProductID],CONVERT(varchar(100),a.[PADATE],20)as PADATE,
a.[WhCd],a.[Qty],a.[Remark],a.[CompanyID],
b.Name,c.Product,d.WHName,e.Name as DeptName,f.Name as EName,
(case when a.YHStatus='RK'then'入库' when a.YHStatus='LY'then'领用'when a.YHStatus='JY'then'借用'when a.YHStatus='GH'then'归还'when a.YHStatus='QT'then'借用（已还）' end)as YHStatus
from zc_ConsumableAlteration a 
left join hr_Company b on a.CompanyID=b.CompanyID 
left join zc_Consumable c on a.ProductID=c.ProductID
left join [zc_INVWarehouse]d on a.[WhCd]=d.[WhCd]
left join [hr_Department]e on a.[DeptID]=e.[DeptID]
left join [hr_Employee]f on a.[EmployeeID]=f.[EmployeeID] 
WHERE a.[ProductID]=@ProductID and a.YHStatus='RK' and a.IsActive=1</Sql>
        <Sql Name="GetLY" ConnectionName="Auth" Description="获取领用">select a.[PAID],a.[ProductID],CONVERT(varchar(100),a.[PADATE],20)as PADATE,
a.[WhCd],a.[Qty],a.[Remark],a.[CompanyID],
b.Name,c.Product,d.WHName,e.Name as DeptName,f.Name as EName,
(case when a.YHStatus='RK'then'入库' when a.YHStatus='LY'then'领用'when a.YHStatus='JY'then'借用'when a.YHStatus='GH'then'归还'when a.YHStatus='QT'then'借用（已还）' end)as YHStatus
from zc_ConsumableAlteration a 
left join hr_Company b on a.CompanyID=b.CompanyID 
left join zc_Consumable c on a.ProductID=c.ProductID
left join [zc_INVWarehouse]d on a.[WhCd]=d.[WhCd]
left join [hr_Department]e on a.[DeptID]=e.[DeptID]
left join [hr_Employee]f on a.[EmployeeID]=f.[EmployeeID] 
WHERE a.[ProductID]=@ProductID and a.YHStatus='LY' and a.IsActive=1</Sql>
        <Sql Name="GetJY" ConnectionName="Auth" Description="获取借用">select a.[PAID],a.[ProductID],CONVERT(varchar(100),a.[PADATE],20)as PADATE,
a.[WhCd],a.[Qty],a.[Remark],a.[CompanyID],
b.Name,c.Product,d.WHName,e.Name as DeptName,f.Name as EName,g.PAID as YPAID,CONVERT(varchar(100),g.[PADATE],20)as YPADATE,
(case when a.YHStatus='RK'then'入库' when a.YHStatus='LY'then'领用'when a.YHStatus='JY'then'借用'when a.YHStatus='GH'then'归还'when a.YHStatus='QT'then'借用（已还）' end)as YHStatus
from zc_ConsumableAlteration a 
left join hr_Company b on a.CompanyID=b.CompanyID 
left join zc_Consumable c on a.ProductID=c.ProductID
left join [zc_INVWarehouse]d on a.[WhCd]=d.[WhCd]
left join [hr_Department]e on a.[DeptID]=e.[DeptID]
left join [hr_Employee]f on a.[EmployeeID]=f.[EmployeeID] 
left join [zc_ConsumableAlteration] g on a.YPAID=g.PAID
WHERE a.[ProductID]=@ProductID and (a.YHStatus='JY' or a.YHStatus='QT') and a.IsActive=1
order by a.YHStatus,a.PADATE</Sql>
        <Sql Name="GetGH" ConnectionName="Auth" Description="获取归还">select a.[PAID],a.[ProductID],CONVERT(varchar(100),a.[PADATE],20)as PADATE,
a.[WhCd],a.[Qty],a.[Remark],a.[CompanyID],
b.Name,c.Product,d.WHName,e.Name as DeptName,f.Name as EName,g.PAID as YPAID,CONVERT(varchar(100),g.[PADATE],20)as YPADATE,
(case when a.YHStatus='RK'then'入库' when a.YHStatus='LY'then'领用'when a.YHStatus='JY'then'借用'when a.YHStatus='GH'then'归还'when a.YHStatus='QT'then'借用（已还）' end)as YHStatus
from zc_ConsumableAlteration a 
left join hr_Company b on a.CompanyID=b.CompanyID 
left join zc_Consumable c on a.ProductID=c.ProductID
left join [zc_INVWarehouse]d on a.[WhCd]=d.[WhCd]
left join [hr_Department]e on a.[DeptID]=e.[DeptID]
left join [hr_Employee]f on a.[EmployeeID]=f.[EmployeeID] 
left join [zc_ConsumableAlteration] g on g.YPAID=a.PAID
WHERE a.[ProductID]=@ProductID and a.YHStatus='QT' and a.IsActive=1</Sql>
        <Sql Name="GetQty" SharedName="GetQtyByProductID" ConnectionName="Auth" Description="获取特定易耗品库存数量">if exists (select Qty from zc_INVWhQt where ProductID=@ProductID and WhCd=@WhCd)
begin
select Qty from zc_INVWhQt where ProductID=@ProductID and WhCd=@WhCd
end
else
begin
select '0' as Qty
end</Sql>
      </Table>
      <Table Name="zc_ConsumableAlteration" ConnectionName="Auth" TableName="zc_ConsumableAlteration">
        <Sql Name="QueryCount" ConnectionName="Auth" Description="检索查询总数">select count(*)
from zc_ConsumableAlteration a 
left join hr_Company b on a.CompanyID=b.CompanyID 
left join zc_Consumable c on a.ProductID=c.ProductID
left join [zc_INVWarehouse]d on a.[WhCd]=d.[WhCd]
where a.YHStatus like '%'+@YHStatus+'%'  
and a.ProductID like '%'+@ProductID+'%'
and a.PADATE like '%'+@PADATE+'%' 
and a.CompanyID like '%'+@CompanyID+'%' 
and a.WhCd like '%'+@WhCd+'%'
and a.Qty like '%'+@Qty+'%'
and a.IsActive=1 </Sql>
        <Sql Name="QueryPage" ConnectionName="Auth" Description="检索分页查询">
			  select a.[PAID],a.[ProductID],CONVERT(varchar(100),a.[PADATE],20)as PADATE,a.[WhCd],a.[Qty],cast(isnull(a.[Amount],0)as decimal(18,2))as Amount,a.[Remark],a.[CompanyID],b.Name,c.Product,d.WHName,e.Name as DeptName,f.Name as EName,(case when a.YHStatus='RK'then'入库' when a.YHStatus='LY'then'领用'when a.YHStatus='JY'then'借用'when a.YHStatus='GH'then'归还'when a.YHStatus='QT'then'借用（已还）' end)as YHStatus
from zc_ConsumableAlteration a 
left join hr_Company b on a.CompanyID=b.CompanyID 
left join zc_Consumable c on a.ProductID=c.ProductID
left join [zc_INVWarehouse]d on a.[WhCd]=d.[WhCd]
left join [hr_Department]e on a.[DeptID]=e.[DeptID]
left join [hr_Employee]f on a.[EmployeeID]=f.[EmployeeID] 
where a.YHStatus like '%'+@YHStatus+'%'   
and a.ProductID like '%'+@ProductID+'%'
and a.PADATE like '%'+@PADATE+'%' 
and a.CompanyID like '%'+@CompanyID+'%' 
and a.WhCd like '%'+@WhCd+'%'
and a.Qty like '%'+@Qty+'%'
and a.IsActive=1 
order by a.PAID desc
 OFFSET ( (CAST(@Page as int) - 1) * cast(@Rows AS int)) ROWS
			  FETCH NEXT CAST(@Rows AS int) ROWS ONLY
		  </Sql>
        <Sql Name="GetDetail" ConnectionName="Auth" Description="查询明细">
			  select a.[PAID],a.[ProductID],CONVERT(varchar(100),a.[PADATE],20)as PADATE,a.[WhCd],a.[Qty],a.[Remark],a.[CompanyID],b.Name,c.Product,d.WHName,e.Name as DeptName,f.Name as EName,(case when a.YHStatus='RK'then'入库' when a.YHStatus='LY'then'领用'when a.YHStatus='JY'then'借用'when a.YHStatus='GH'then'归还'when a.YHStatus='QT'then'借用（已还）' end)as YHStatus
from zc_ConsumableAlteration a 
left join hr_Company b on a.CompanyID=b.CompanyID 
left join zc_Consumable c on a.ProductID=c.ProductID
left join [zc_INVWarehouse]d on a.[WhCd]=d.[WhCd]
left join [hr_Department]e on a.[DeptID]=e.[DeptID]
left join [hr_Employee]f on a.[EmployeeID]=f.[EmployeeID] 
			  WHERE a.[PAID]=@PAID
		  </Sql>
        <Sql Name="AddRK" ConnectionName="Auth" Description="新增入库">
			  declare @p varchar(8)
set @p=@YHStatus
declare @pID varchar(12)
set @p=@p+convert(varchar(6),getdate(),12)
exec [dbo].[sp_CreateSerialCode] 'CAlt',@p,12,@pID output;
INSERT INTO [zc_ConsumableAlteration]
			  ([PAID],[ProductID],[PADATE],[WhCd],[Qty],[Amount],[Remark],[CompanyID],[DeptID],[EmployeeID],[YHStatus],[IsActive],[CreatedUser],[CreatedTime],[ModifiedUser],[ModifiedTime])
			  VALUES(@pID,@ProductID,@PADATE,@WhCd,@Qty,@Amount,@Remark,@CompanyID,@DeptID,@EmployeeID,@YHStatus,@IsActive,@CreatedUser,@CreatedTime,@ModifiedUser,@ModifiedTime);
SELECT [PAID],[ProductID],[PADATE],[WhCd],[Qty],[Remark],[CompanyID],[YHStatus],[IsActive]
 FROM [zc_ConsumableAlteration]
WHERE [AutoKey]=scope_identity();
if exists( select * from zc_INVWhQt where ProductID=@ProductID and WhCd=@WhCd)
begin update [zc_INVWhQt]
set Qty=Qty+@Qty,ModifiedUser=@ModifiedUser,ModifiedTime=@ModifiedTime where ProductID=@ProductID and WhCd=@WhCd;
end
else begin 
insert into [zc_INVWhQt]
([ProductID],[WhCd],[Qty],[CreatedUser],[CreatedTime],[ModifiedUser],[ModifiedTime],[IsActive])
Values(@ProductID,@WhCd,@Qty,@CreatedUser,@CreatedTime,@ModifiedUser,@ModifiedTime,@IsActive);
end
</Sql>
        <Sql Name="GetEdit" ConnectionName="Auth" Description="查询编辑">
			  select a.[PAID],a.[ProductID],CONVERT(varchar(100),a.[PADATE],20)as PADATE,a.[WhCd],a.[Qty],a.[Remark],a.[CompanyID],b.Name,c.Product,d.WHName,e.Name as DeptName,f.Name as EName,(case when a.YHStatus='RK'then'入库' when a.YHStatus='LY'then'领用'when a.YHStatus='JY'then'借用'when a.YHStatus='GH'then'归还'when a.YHStatus='QT'then'借用（已还）' end)as YHStatus
from zc_ConsumableAlteration a 
left join hr_Company b on a.CompanyID=b.CompanyID 
left join zc_Consumable c on a.ProductID=c.ProductID
left join [zc_INVWarehouse]d on a.[WhCd]=d.[WhCd]
left join [hr_Department]e on a.[DeptID]=e.[DeptID]
left join [hr_Employee]f on a.[EmployeeID]=f.[EmployeeID] 
			  WHERE a.[PAID]=@PAID
		  </Sql>
        <Sql Name="Update" ConnectionName="Auth" Description="更新">
			  declare @a varchar(2)
select @a =[YHStatus] from zc_ConsumableAlteration where PAID=@PAID
if (@a='RK' or @a='GH')
begin
UPDATE [zc_ConsumableAlteration]
 SET [Qty]=@Qty1,[ModifiedUser]=@ModifiedUser,[ModifiedTime]=@ModifiedTime WHERE [PAID]=@PAID;
UPDATE [zc_INVWhQt]
SET [Qty]=[Qty]-@Qty+@Qty1,[ModifiedUser]=@ModifiedUser,[ModifiedTime]=@ModifiedTime Where ProductID=@ProductID and WhCd=@WhCd;
end
else begin
declare @q int
select @q= Qty from zc_INVWhQt where ProductID=@ProductID and WhCd=@WhCd
 if (@q+@Qty-@Qty1&lt;0)
 begin RAISERROR ('修改后耗品库存不足！',15, 1) WITH NOWAIT
 end
 else begin
 UPDATE [zc_ConsumableAlteration]
 SET [Qty]=@Qty1,[ModifiedUser]=@ModifiedUser,[ModifiedTime]=@ModifiedTime WHERE [PAID]=@PAID;
 UPDATE [zc_INVWhQt]
 SET [Qty]=[Qty]+@Qty-@Qty1,[ModifiedUser]=@ModifiedUser,[ModifiedTime]=@ModifiedTime Where ProductID=@ProductID and WhCd=@WhCd;
 end;
			  end;
		  </Sql>
        <Sql Name="Delete" ConnectionName="Auth" Description="删除">
			  declare @a varchar(2),@b int,@pID varchar(6),@wID varchar(4);
select @a =[YHStatus],@b =[Qty],@pID=[ProductID],@wID=[WhCd] from zc_ConsumableAlteration where PAID=@PAID
if (@a='RK' or @a='GH')
begin
UPDATE [zc_ConsumableAlteration]
 SET IsActive=0,[ModifiedUser]=@ModifiedUser,[ModifiedTime]=@ModifiedTime WHERE [PAID]=@PAID;
UPDATE [zc_INVWhQt]
SET [Qty]=[Qty]-@b,[ModifiedUser]=@ModifiedUser,[ModifiedTime]=@ModifiedTime Where ProductID=@pID and WhCd=@wID;
end
else begin
UPDATE [zc_ConsumableAlteration]
 SET IsActive=0,[ModifiedUser]=@ModifiedUser,[ModifiedTime]=@ModifiedTime WHERE [PAID]=@PAID;
UPDATE [zc_INVWhQt]
SET [Qty]=[Qty]+@b,[ModifiedUser]=@ModifiedUser,[ModifiedTime]=@ModifiedTime Where ProductID=@pID and WhCd=@wID;
			  end;
		  </Sql>
        <Sql Name="GetProduct" SharedName="GetProductName" ConnectionName="Auth" Description="获取产品名称">select ProductID as ID,Product as Name from zc_Consumable where IsActive=1</Sql>
        <Sql Name="AddLY" ConnectionName="Auth" Description="新增领用">
declare @a int
select @a= Qty from zc_INVWhQt where ProductID=@ProductID and WhCd=@WhCd
if (@a-@Qty&gt;0)
begin
declare @p varchar(8)
set @p=@YHStatus
declare @pID varchar(12)
set @p=@p+convert(varchar(6),getdate(),12)
exec [dbo].[sp_CreateSerialCode] 'CAlt',@p,12,@pID output;
INSERT INTO [zc_ConsumableAlteration]
([PAID],[ProductID],[PADATE],[WhCd],[Qty],[Remark],[CompanyID],[DeptID],[EmployeeID],[YHStatus],[IsActive],[CreatedUser],[CreatedTime],[ModifiedUser],[ModifiedTime]) 
VALUES(@pID,@ProductID,@PADATE,@WhCd,@Qty,@Remark,@CompanyID,@DeptID,@EmployeeID,@YHStatus,@IsActive,@CreatedUser,@CreatedTime,@ModifiedUser,@ModifiedTime);
SELECT [PAID],[ProductID],[PADATE],[WhCd],[Qty],[Remark],[CompanyID],[YHStatus],[IsActive]
 FROM [zc_ConsumableAlteration]
WHERE [AutoKey]=scope_identity();

update [zc_INVWhQt]
set Qty=Qty-@Qty,ModifiedUser=@ModifiedUser,ModifiedTime=@ModifiedTime where ProductID=@ProductID and WhCd=@WhCd;
end
else 
begin RAISERROR ('您领用用的耗品库存不足！',15, 1) WITH NOWAIT
end

</Sql>
        <Sql Name="AddJY" ConnectionName="Auth" Description="新增借用">
declare @a int
select @a= Qty from zc_INVWhQt where ProductID=@ProductID and WhCd=@WhCd
if (@a-@Qty&gt;0)
 begin
declare @p varchar(8)
set @p=@YHStatus
declare @pID varchar(12)
set @p=@p+convert(varchar(6),getdate(),12)
exec [dbo].[sp_CreateSerialCode] 'CAlt',@p,12,@pID output;
INSERT INTO [zc_ConsumableAlteration]
([PAID],[ProductID],[PADATE],[WhCd],[Qty],[Remark],[CompanyID],[DeptID],[EmployeeID],[YHStatus],[IsActive],[CreatedUser],[CreatedTime],[ModifiedUser],[ModifiedTime]) 
VALUES(@pID,@ProductID,@PADATE,@WhCd,@Qty,@Remark,@CompanyID,@DeptID,@EmployeeID,@YHStatus,@IsActive,@CreatedUser,@CreatedTime,@ModifiedUser,@ModifiedTime);
SELECT [PAID],[ProductID],[PADATE],[WhCd],[Qty],[Remark],[CompanyID],[YHStatus],[IsActive]
 FROM [zc_ConsumableAlteration]
WHERE [AutoKey]=scope_identity();

update [zc_INVWhQt]
set Qty=Qty-@Qty,ModifiedUser=@ModifiedUser,ModifiedTime=@ModifiedTime where ProductID=@ProductID and WhCd=@WhCd;
end
else
begin RAISERROR ('您借用的耗品库存不足！',15, 1) WITH NOWAIT
end
</Sql>
        <Sql Name="GH" ConnectionName="Auth" Description="归还">select a.[PAID],a.[ProductID],a.[WhCd],a.[Qty],a.[Remark],a.[CompanyID],a.[DeptID],a.[EmployeeID],b.Name,c.Product,d.WHName,e.Name as DeptName,f.Name as EName,(case when a.YHStatus='RK'then'入库' when a.YHStatus='LY'then'领用'when a.YHStatus='JY'then'借用'when a.YHStatus='GH'then'归还'when a.YHStatus='QT'then'其他' end)as YHStatus
from zc_ConsumableAlteration a 
left join hr_Company b on a.CompanyID=b.CompanyID 
left join zc_Consumable c on a.ProductID=c.ProductID
left join [zc_INVWarehouse]d on a.[WhCd]=d.[WhCd]
left join [hr_Department]e on a.[DeptID]=e.[DeptID]
left join [hr_Employee]f on a.[EmployeeID]=f.[EmployeeID] 
WHERE a.[PAID]=@PAID</Sql>
        <Sql Name="AddGH" ConnectionName="Auth" Description="新增归还">declare @p varchar(8)
set @p=@YHStatus
declare @pID varchar(12)
set @p=@p+convert(varchar(6),getdate(),12)
exec [dbo].[sp_CreateSerialCode] 'CAlt',@p,12,@pID output;
INSERT INTO [zc_ConsumableAlteration]
([PAID],[YPAID],[ProductID],[PADATE],[WhCd],[Qty],[Remark],[CompanyID],[YHStatus],[IsActive],[CreatedUser],[CreatedTime],[ModifiedUser],[ModifiedTime]) 
VALUES(@pID,@PAID,@ProductID,@PADATE,@WhCd,@Qty,@Remark,@CompanyID,@YHStatus,@IsActive,@CreatedUser,@CreatedTime,@ModifiedUser,@ModifiedTime);
SELECT [PAID],[ProductID],[PADATE],[WhCd],[Qty],[Remark],[CompanyID],[YHStatus],[IsActive]
 FROM [zc_ConsumableAlteration]
WHERE [AutoKey]=scope_identity();
declare @q int
select @q= Qty from zc_INVWhQt where ProductID=@ProductID and WhCd=@WhCd
if @q&gt;@Qty
begin
if exists( select * from zc_INVWhQt where ProductID=@ProductID and WhCd=@WhCd)
begin update [zc_INVWhQt]
set Qty=Qty+@Qty,ModifiedUser=@ModifiedUser,ModifiedTime=@ModifiedTime where ProductID=@ProductID and WhCd=@WhCd;
end
else begin 
insert into [zc_INVWhQt]
([ProductID],[WhCd],[Qty],[CreatedUser],[CreatedTime],[ModifiedUser],[ModifiedTime],[IsActive])
Values(@ProductID,@WhCd,@Qty,@CreatedUser,@CreatedTime,@ModifiedUser,@ModifiedTime,@IsActive);
end;
end;
else begin
update [zc_ConsumableAlteration]
set YHStatus='QT'where PAID=@PAID;
if exists( select * from zc_INVWhQt where ProductID=@ProductID and WhCd=@WhCd)
begin update [zc_INVWhQt]
set Qty=Qty+@Qty,ModifiedUser=@ModifiedUser,ModifiedTime=@ModifiedTime where ProductID=@ProductID and WhCd=@WhCd;
end
else begin 
insert into [zc_INVWhQt]
([ProductID],[WhCd],[Qty],[CreatedUser],[CreatedTime],[ModifiedUser],[ModifiedTime],[IsActive])
Values(@ProductID,@WhCd,@Qty,@CreatedUser,@CreatedTime,@ModifiedUser,@ModifiedTime,@IsActive);
end;
end;
</Sql>
      </Table>
      <Table Name="zc_AssetAlteration" ConnectionName="Auth" TableName="zc_AssetAlteration">
        <Sql Name="LingYong" ConnectionName="Auth" SqlType="Execute" Description="领用">declare @AAID varchar(20)
declare @t varchar(8)
set @t='LY'+convert(varchar(8),getdate(),12)
exec [dbo].[sp_CreateSerialCode] 'AAlt',@t,12,@AAID output
insert into [zc_AssetAlteration]
([AAID],[AssetID],[AAType],[AADATE],[CompanyID],[WhCd],[DeptID],[ScrapPerson],[Remark]
,[ConfirmedBy],[ConfirmedDt],[IsActive],[CreatedUser],[CreatedTime],[ModifiedUser],[ModifiedTime])
values(@AAID,@AssetID,'LY',@AADATE,@CompanyID,@WhCd,@DeptID,@ScrapPerson,@Remark
,@ConfirmedBy,@ConfirmedDt,1,@CreatedUser,@CreatedTime,@ModifiedUser,@ModifiedTime)

UPDATE [dbo].[zc_Asset] SET [WhCd] ='' ,[LOCNO] = ''  ,[UseCondition] = 'LY'  ,[DeptID] = @DeptID  ,[EmployeeID] = @ScrapPerson  ,[ModifiedUser] = @ModifiedUser ,[ModifiedTime] = @ModifiedTime
 WHERE [AssetID] = @AssetID</Sql>
        <Sql Name="GuiHuan" ConnectionName="Auth" SqlType="Execute" Description="归还">declare @AAID varchar(20) 
declare @t varchar(8)
set @t='GH'+convert(varchar(8),getdate(),12)
exec [dbo].[sp_CreateSerialCode] 'AAlt',@t,12,@AAID output
insert into [zc_AssetAlteration]
([AAID],[AssetID],[AAType],[AADATE],[CompanyID],[WhCd],[DeptID],[ScrapPerson],[Remark]
,[ConfirmedBy],[ConfirmedDt],[IsActive],[CreatedUser],[CreatedTime],[ModifiedUser],[ModifiedTime])
values(@AAID,@AssetID,'GH',@AADATE,@CompanyID,@WhCd,@DeptID,@ScrapPerson,@Remark
,@ConfirmedBy,@ConfirmedDt,1,@CreatedUser,@CreatedTime,@ModifiedUser,@ModifiedTime)

UPDATE [dbo].[zc_Asset] SET [WhCd] =@WhCd  ,[UseCondition] = 'GH'  ,[DeptID] = ''  ,[EmployeeID] = ''  ,[ModifiedUser] = @ModifiedUser ,[ModifiedTime] = @ModifiedTime
 WHERE [AssetID] = @AssetID</Sql>
        <Sql Name="BaoXiu" ConnectionName="Auth" SqlType="Execute" Description="报修"> declare @AAID varchar(20)
declare @t varchar(8)
set @t='BX'+convert(varchar(8),getdate(),12)
exec [dbo].[sp_CreateSerialCode] 'AAlt',@t,12,@AAID output
INSERT INTO [dbo].[zc_AssetAlteration]([AAID],[AAType],[AADATE],[CompanyID],[AssetID],[WhCd],[ScrapPerson],[RepairType],[ConfirmedBy],[ConfirmedDt]
,[Repairer],[RepairPrice],[Reason],[DeptID],[Remark],[IsActive],[CreatedUser],[CreatedTime],[ModifiedUser],[ModifiedTime])
VALUES(@AAID,'BX',@AADATE,@CompanyID,@AssetID,@WhCd,@ScrapPerson,@RepairType,@ConfirmedBy,@ConfirmedDt
,@Repairer,@RepairPrice,@Reason,@DeptID,@Remark,1,@CreatedUser,@CreatedTime,@ModifiedUser,@ModifiedTime)</Sql>
        <Sql Name="QueryCount" ConnectionName="Auth" Description="QueryCount">set @DateBegin=IIF(@DateBegin='','1900-01-01',@DateBegin)
set @DateEnd=IIF(@DateEnd='','2100-01-01',@DateEnd)
SELECT  count(aa.AAID)
  FROM [dbo].[zc_AssetAlteration] aa
  join [dbo].[zc_Asset]a on aa.AssetID=a.AssetID
  left join [zc_Category]ca on a.[CategoryID]=ca.[CategoryID]
  left join [zc_INVWarehouse]wh on aa.[WhCd]=wh.[WHCd]
  left join [zc_Unit]u on a.[UnitID]=u.[UnitID]
  left join [zc_Supplier]s on a.[SupplierID]=s.[SupplierID]
  left join [zc_Area]ass on a.[CompanyID]=ass.[CompanyID]
  left join [hr_Department]d on aa.[DeptID]=d.[DeptID]
  join fun_sys_GetUserCompanys(@UserID)c on aa.[CompanyID]=c.[CompanyID]
  left join [hr_Employee]e on aa.[ConfirmedBy]=e.[EmployeeID]
  left join [hr_Employee]ee on aa.[ScrapPerson]=ee.[EmployeeID]
 where aa.AAType=@AAType
  and a.[BarCard] like '%'+@BarCard+'%'
  and a.[AssetName] like '%'+@AssetName+'%'
  and a.[CategoryID] like '%'+@CategoryID+'%'
  and a.[AddType] like '%'+@AddType+'%'
  and aa.[CompanyID] like '%'+@CompanyID+'%'
  and isnull(aa.[DeptID],'') like '%'+@DeptID+'%'
  and isnull(aa.[ScrapPerson],'') like '%'+@EmployeeID+'%'
  and aa.[WhCd] like '%'+@WhCd+'%'
  and a.[SupplierID] like '%'+@SupplierID+'%'
  and isnull(aa.[RepairType],'') like '%'+@RepairType+'%'
  and isnull(aa.[ScrapType],'') like '%'+@ScrapType+'%'
  and IIF(aa.[AADATE]='','1900-01-01',aa.[AADATE]) between @DateBegin and @DateEnd
  and aa.[IsActive]=@IsActive
    </Sql>
        <Sql Name="QueryPage" ConnectionName="Auth" Description="QueryPage">set @DateBegin=IIF(@DateBegin='','1900-01-01',@DateBegin)
set @DateEnd=IIF(@DateEnd='','2100-01-01',@DateEnd)
SELECT a.[AssetName]
      ,a.[CategoryID]
      ,a.[SpecificationsModel]
      ,case a.[AddType] when 10 then '购买' when 20 then '借用'  when 90 then '其它' end as [AddType]
      ,a.[UnitID]
      ,a.[BarCard]
      ,a.[SupplierID]
      ,a.[BuyDate]
      ,a.[UseYear]
      ,a.[QualityDescription]
      ,aa.[AAID]
      ,aa.[AAType]
      ,aa.[AssetID]
      ,convert(varchar, aa.[AADATE],23) as [AADATE]
      ,aa.[WhCd]
      ,aa.[ScrapPerson]
      ,case aa.[RepairType] when '10' then '定期维修' when '20' then '故障维修' when '30' then '保养' end as [RepairType]
      ,case aa.[ScrapType] when '10' then '出售' when '20' then '报废' when '30' then '清理残值'  when '30' then '盘亏' end as [ScrapType]
      ,aa.[ConfirmedBy]
      ,aa.[ConfirmedDt]
      ,aa.[Repairer]
      ,convert(varchar, aa.[RepairPrice],1) as [RepairPrice]
      ,aa.[Reason]
      ,aa.[DeptID]
      ,aa.[Remark]
   ,ca.[Category]
   ,wh.[WHName]
   ,u.[UnitName]
   ,s.[SupplierName]
   ,ass.[Area]+'('+ass.[AreaCode]+')' as [CName]
   ,d.[Name]as [DName]
   ,e.[Name]as [ConfirmedName]
   ,ee.[Name]as [ScrapPersonName]
  FROM [dbo].[zc_AssetAlteration] aa
  join [dbo].[zc_Asset]a on aa.AssetID=a.AssetID
  left join [zc_Category]ca on a.[CategoryID]=ca.[CategoryID]
  left join [zc_INVWarehouse]wh on aa.[WhCd]=wh.[WHCd]
  left join [zc_Unit]u on a.[UnitID]=u.[UnitID]
  left join [zc_Supplier]s on a.[SupplierID]=s.[SupplierID]
  left join [zc_Area]ass on a.[CompanyID]=ass.[CompanyID]
  left join [hr_Department]d on aa.[DeptID]=d.[DeptID]
  join fun_sys_GetUserCompanys(@UserID)c on aa.[CompanyID]=c.[CompanyID]
  left join [hr_Employee]e on aa.[ConfirmedBy]=e.[EmployeeID]
  left join [hr_Employee]ee on aa.[ScrapPerson]=ee.[EmployeeID]
 where aa.AAType=@AAType
  and a.[BarCard] like '%'+@BarCard+'%'
  and a.[AssetName] like '%'+@AssetName+'%'
  and a.[CategoryID] like '%'+@CategoryID+'%'
  and a.[AddType] like '%'+@AddType+'%'
  and aa.[CompanyID] like '%'+@CompanyID+'%'
  and isnull(aa.[DeptID],'') like '%'+@DeptID+'%'
  and isnull(aa.[ScrapPerson],'') like '%'+@EmployeeID+'%'
  and aa.[WhCd] like '%'+@WhCd+'%'
  and a.[SupplierID] like '%'+@SupplierID+'%'
  and isnull(aa.[RepairType],'') like '%'+@RepairType+'%'
  and isnull(aa.[ScrapType],'') like '%'+@ScrapType+'%'
  and IIF(aa.[AADATE]='','1900-01-01',aa.[AADATE]) between @DateBegin and @DateEnd
  and aa.[IsActive]=@IsActive
 ORDER BY CategoryID,AssetName
 OFFSET ( (CAST(@Page as int) - 1) * cast(@Rows AS int)) ROWS
     FETCH NEXT CAST(@Rows AS int) ROWS ONLY
    </Sql>
        <Sql Name="GetAssetDetail" ConnectionName="Auth" Description="GetAssetDetail未用">
SELECT a.[AssetID]
,a.[AssetName]
,a.[CategoryID]
,a.[SpecificationsModel]
,case a.[AddType] when 10 then '购买' when 20 then '借用'  when 90 then '其它' end as [AddType]
,a.[WhCd]
,a.[LOCNO]
,a.[UnitID]
,a.[BarCard]
,a.[SupplierID]
,a.[BuyDate]
,a.[UseYear]
,(case a.UseCondition when 'RK'then'入库' when 'LY'then'领用'when 'JY'then'借用'when 'GH'then'归还'when 'BY'then'保养'when 'BX'then'报修'when 'BF'then'报废'when 'QL'then'清理'when 'QT'then'其他' end)as UseCondition
,a.[CompanyID]
,a.[DeptID]
,a.[EmployeeID]
,a.[QualityDescription]
,a.[Price]
,a.[Remark]
,a.[Status]
,a.[IsActive]
,a.[CreatedUser]
,a.[CreatedTime]
,a.[ModifiedUser]
,a.[ModifiedTime]
,a.[AutoKey]
,ca.[Category]
,wh.[WHName]
,u.[UnitName]
,s.[SupplierName]
,ass.[Area]+'('+ass.[AreaCode]+')' as [CName]
,d.[Name]as [DName]
,e.[Name]as [EName]
  FROM [dbo].[zc_AssetAlteration] aa
 join [dbo].[zc_Asset]a on aa.AssetID=a.AssetID
left join [zc_Category]ca on a.[CategoryID]=ca.[CategoryID]
left join [zc_INVWarehouse]wh on a.[WhCd]=wh.[WHCd]
left join [zc_Unit]u on a.[UnitID]=u.[UnitID]
left join [zc_Supplier]s on a.[SupplierID]=s.[SupplierID]
left join [hr_Company]c on a.[CompanyID]=c.[CompanyID]
left join [hr_Department]d on a.[DeptID]=d.[DeptID]
left join [hr_Employee]e on a.[EmployeeID]=e.[EmployeeID]
left join [zc_Area]ass on a.[CompanyID]=ass.[CompanyID]
WHERE aa.[AAID]=@AAID
   </Sql>
        <Sql Name="DiaoBo" ConnectionName="Auth" Description="调拨">IF(@CompanyID=@NewCompanyID and @WhCd=@NewWhCd)
raiserror('原仓库与新仓库不得相同',16,1) with nowait
else
begin
declare @AAID varchar(20) 
declare @t varchar(8)
set @t='DB'+convert(varchar(8),getdate(),12)
exec [dbo].[sp_CreateSerialCode] 'AAlt',@t,12,@AAID output
insert into [zc_AssetAlteration]
([AAID],[AssetID],[AAType],[AADATE],[CompanyID],[WhCd],[NewCompanyID],[NewWhCd],[Remark]
,[ConfirmedBy],[ConfirmedDt],[IsActive],[CreatedUser],[CreatedTime],[ModifiedUser],[ModifiedTime])
values(@AAID,@AssetID,'DB',@AADATE,@CompanyID,@WhCd,@NewCompanyID,@NewWhCd,@Remark
,@ConfirmedBy,@ConfirmedDt,1,@CreatedUser,@CreatedTime,@ModifiedUser,@ModifiedTime)

UPDATE [dbo].[zc_Asset] SET [WhCd] =@NewWhCd  ,[UseCondition] = 'DB'  ,[CompanyID] = @NewCompanyID ,[ModifiedUser] = @ModifiedUser ,[ModifiedTime] = @ModifiedTime
 WHERE [AssetID] = @AssetID
end</Sql>
        <Sql Name="BaoFei" ConnectionName="Auth" Description="报废">declare @AAID varchar(20)
 declare @t varchar(8)
set @t='BF'+convert(varchar(8),getdate(),12)
exec [dbo].[sp_CreateSerialCode] 'AAlt',@t,12,@AAID output
INSERT INTO [dbo].[zc_AssetAlteration]([AAID],[AAType],[AADATE],[CompanyID],[AssetID],[WhCd],[ScrapType],[ConfirmedBy],[ConfirmedDt],
[Remark],[IsActive],[CreatedUser],[CreatedTime],[ModifiedUser],[ModifiedTime])
VALUES(@AAID,'BF',@AADATE,@CompanyID,@AssetID,@WhCd,@ScrapType,@ConfirmedBy,@ConfirmedDt,
@Remark,1,@CreatedUser,@CreatedTime,@ModifiedUser,@ModifiedTime)

UPDATE [dbo].[zc_Asset] SET  [UseCondition] = 'BF',  [ModifiedUser] = @ModifiedUser ,[ModifiedTime] = @ModifiedTime
 WHERE [AssetID] = @AssetID</Sql>
        <Sql Name="AssetAlterationJHReport" ConnectionName="Auth" Description="固定资产借还报表">
			  select a.AAID,(case when a.AAType='JY'then'借用'when a.AAType='GH'then'归还'end) as AAType,a.AssetID,convert(varchar(100),a.AADATE,20)as AADATE,a.ScrapPerson,a.ConfirmedBy,convert(varchar(100),a.ConfirmedDt,20)as ConfirmedDt,b.AssetName,c.Name as ScrapName,d.Name as ConfirmedName
			  from zc_AssetAlteration a
			  left join zc_Asset b on a.AssetID=b.AssetID
			  left join hr_Employee c on a.ScrapPerson=c.EmployeeID
			  left join hr_Employee d on a.ConfirmedBy=d.EmployeeID
			  where c.Name like '%'+@keyword+'%'and d.Name like '%'+@keyword+'%' and b.AssetName like '%'+@keyword+'%'
			  and a.AADATE between @AADATES and @AADATEE and a.AAType like '%'+@AAType+'%' and (a.AAType='JY'or a.AAType='GH') and a.CompanyID like '%'+@CompanyID +'%' 
                                                              and a.IsActive=1
			  order by a.AADATE</Sql>
        <Sql Name="AssetAlterationLYReport" ConnectionName="Auth" Description="固定资产领用报表">select a.AAID,(case when a.AAType='JY'then'借用'when a.AAType='GH'then'归还'end) as AAType,a.AssetID,convert(varchar(100),a.AADATE,20)as AADATE,a.ScrapPerson,a.ConfirmedBy,convert(varchar(100),a.ConfirmedDt,20)as ConfirmedDt,b.AssetName,c.Name as ScrapName,d.Name as ConfirmedName
			  from zc_AssetAlteration a
			  left join zc_Asset b on a.AssetID=b.AssetID
			  left join hr_Employee c on a.ScrapPerson=c.EmployeeID
			  left join hr_Employee d on a.ConfirmedBy=d.EmployeeID
			  where c.Name like '%'+@keyword+'%'and d.Name like '%'+@keyword+'%' and b.AssetName like '%'+@keyword+'%'
			  and a.AADATE between @AADATES and @AADATEE and a.AAType='LY' and a.CompanyID like '%'+@CompanyID +'%' 
                                                              and a.IsActive=1
			  order by a.AADATE</Sql>
        <Sql Name="QueryCountDB" ConnectionName="Auth" Description="QueryCountDB">set @DateBegin=IIF(@DateBegin='','1900-01-01',@DateBegin)
set @DateEnd=IIF(@DateEnd='','2100-01-01',@DateEnd)
SELECT  count(aa.AAID)
  FROM [dbo].[zc_AssetAlteration] aa
  left join [zc_Area]ass on aa.[CompanyID]=ass.[CompanyID]
  left join [zc_Area]nass on aa.[NewCompanyID]=nass.[CompanyID]
  left join [zc_INVWarehouse]wh on aa.[WhCd]=wh.[WHCd]
  left join [zc_INVWarehouse]nwh on aa.[NewWhCd]=nwh.[WHCd]
  left join [hr_Employee]e on aa.[ConfirmedBy]=e.[EmployeeID]

  join [dbo].[zc_Asset]a on aa.AssetID=a.AssetID
  left join [zc_Category]ca on a.[CategoryID]=ca.[CategoryID]
  left join [zc_Unit]u on a.[UnitID]=u.[UnitID]

  join fun_sys_GetUserCompanys(@UserID)c on aa.[CompanyID]=c.[CompanyID]
 where aa.AAType=@AAType
  and a.[BarCard] like '%'+@BarCard+'%'
  and a.[AssetName] like '%'+@AssetName+'%'
  and a.[CategoryID] like '%'+@CategoryID+'%'
  and aa.[CompanyID] like '%'+@CompanyID+'%'
  and aa.[WhCd] like '%'+@WhCd+'%'
  and IIF(aa.[AADATE]='','1900-01-01',aa.[AADATE]) between @DateBegin and @DateEnd
  and aa.[IsActive]=1</Sql>
        <Sql Name="QueryPageDB" ConnectionName="Auth" Description="QueryPageDB">set @DateBegin=IIF(@DateBegin='','1900-01-01',@DateBegin)
set @DateEnd=IIF(@DateEnd='','2100-01-01',@DateEnd)
SELECT a.[AssetName]
      ,a.[CategoryID]
      ,a.[SpecificationsModel]
      ,case a.[AddType] when 10 then '购买' when 20 then '借用'  when 90 then '其它' end as [AddType]
      ,a.[UnitID]
      ,a.[BarCard]
      ,a.[SupplierID]
      ,a.[BuyDate]
      ,a.[UseYear]
      ,a.[QualityDescription]
      ,aa.[AAID]
      ,aa.[AAType]
      ,aa.[AssetID]
      ,convert(varchar, aa.[AADATE],23) as [AADATE]
      ,aa.[WhCd]
      ,aa.[ScrapPerson]
      ,aa.[ConfirmedBy]
      ,aa.[ConfirmedDt]
      ,aa.[Reason]
      ,aa.[DeptID]
      ,aa.[Remark]
   ,ca.[Category]
   ,wh.[WHName]
   ,nwh.[WHName] as [NewWHName]
   ,u.[UnitName]
   ,ass.[Area]+'('+ass.[AreaCode]+')' as [CName]
   ,nass.[Area]+'('+nass.[AreaCode]+')' as [NewCName]
   ,e.[Name]as [ConfirmedName]
  FROM [dbo].[zc_AssetAlteration] aa
  left join [zc_Area]ass on aa.[CompanyID]=ass.[CompanyID]
  left join [zc_Area]nass on aa.[NewCompanyID]=nass.[CompanyID]
  left join [zc_INVWarehouse]wh on aa.[WhCd]=wh.[WHCd]
  left join [zc_INVWarehouse]nwh on aa.[NewWhCd]=nwh.[WHCd]
  left join [hr_Employee]e on aa.[ConfirmedBy]=e.[EmployeeID]

  join [dbo].[zc_Asset]a on aa.AssetID=a.AssetID
  left join [zc_Category]ca on a.[CategoryID]=ca.[CategoryID]
  left join [zc_Unit]u on a.[UnitID]=u.[UnitID]

  join fun_sys_GetUserCompanys(@UserID)c on aa.[CompanyID]=c.[CompanyID]
 where aa.AAType=@AAType
  and a.[BarCard] like '%'+@BarCard+'%'
  and a.[AssetName] like '%'+@AssetName+'%'
  and a.[CategoryID] like '%'+@CategoryID+'%'
  and aa.[CompanyID] like '%'+@CompanyID+'%'
  and aa.[WhCd] like '%'+@WhCd+'%'
  and IIF(aa.[AADATE]='','1900-01-01',aa.[AADATE]) between @DateBegin and @DateEnd
  and aa.[IsActive]=1
 ORDER BY CategoryID,AssetName
 OFFSET ( (CAST(@Page as int) - 1) * cast(@Rows AS int)) ROWS
     FETCH NEXT CAST(@Rows AS int) ROWS ONLY</Sql>
        <Sql Name="QingLi" ConnectionName="Auth" Description="清理">declare @AAID varchar(20)
 declare @t varchar(8)
set @t='QL'+convert(varchar(8),getdate(),12)
exec [dbo].[sp_CreateSerialCode] 'AAlt',@t,12,@AAID output
INSERT INTO [dbo].[zc_AssetAlteration]([AAID],[AAType],[AADATE],[CompanyID],[AssetID],[WhCd],[ScrapType],[ConfirmedBy],[ConfirmedDt],
[Remark],[IsActive],[CreatedUser],[CreatedTime],[ModifiedUser],[ModifiedTime])
VALUES(@AAID,'QL',@AADATE,@CompanyID,@AssetID,@WhCd,@ScrapType,@ConfirmedBy,@ConfirmedDt,
@Remark,1,@CreatedUser,@CreatedTime,@ModifiedUser,@ModifiedTime)
UPDATE [dbo].[zc_Asset] SET  [UseCondition] = 'QL',IsActive=0,  [ModifiedUser] = @ModifiedUser ,[ModifiedTime] = @ModifiedTime
 WHERE [AssetID] = @AssetID</Sql>
        <Sql Name="AssetAlterationWXReport" ConnectionName="Auth" Description="固定资产维修报表">select a.AAID,a.AssetID,convert(varchar(100),a.AADATE,20)as RepairDate,a.Remark,
convert(varchar(100),a.ConfirmedDt,20)as ConfirmedDt,b.AssetName,c.Name as ScrapName,d.Name as ConfirmedName,
a.Repairer,a.RepairPrice,(case when a.RepairType='10'then'定期维修'when a.RepairType='20'then'故障维修'when a.RepairType='30'then'保养'end)as RepairType,a.Reason
     from zc_AssetAlteration a
     left join zc_Asset b on a.AssetID=b.AssetID
     left join hr_Employee c on a.ScrapPerson=c.EmployeeID
     left join hr_Employee d on a.ConfirmedBy=d.EmployeeID
     where d.Name like '%'+@keyword+'%' and b.AssetName like '%'+@keyword+'%'
     and a.AADATE between @RepairDateS and @RepairDateE and a.AAType='BX' and a.RepairType like '%'+@RepairType+'%'  and a.CompanyID like '%'+@CompanyID+'%' 
                                                              and a.IsActive=1 
     order by a.AADATE</Sql>
      </Table>
    </Group>
  </Groups>
</SqlData>