@model Panasia.Core.Auth.RoleAuthModel
@using Panasia.Core
<style>
    .checkbox-span {
        width: auto;
        float: left;
        padding-right: 5px;
    }

    .span {
        margin-bottom: 5px;
    }

    input[type="checkbox"] {
        margin: 3px 3px 3px 4px;
    }
</style>

    <form class="form-dialog" method="post" id="roleEditForm">
        <div class="edit-dialog1">
            <input name="DataFilter" value="@Model.DataFilter"  type="hidden"/>
            <input name="RoleID" id="RoleID" value="@Model.RoleID" type="hidden" />
            <div class="edit-panel" style="width:700px;">
                <div style="padding-bottom:10px;">
                    <div class="easyui-panel" title="基本信息" data-options="" style="height:100px !important;width:700px;">
                        <div class="edit-field-r4">
                            <div class="edit-title"><label class="edit-label">角色名：</label></div>
                            <div class="edit-content-r4">
                                <input id="role" class="edit-input-r3 easyui-textbox" name="Name" value="@Model.Name" data-options="missingMessage:'请输入角色名',required:true,validType:'length[1,50]',invalidMessage:'名称不能大于50'" />
                            </div>
                        </div>
                        <div class="edit-field-r4" style="padding-bottom:10px;">
                            <div class="edit-title"><label class="edit-label">备注：</label></div>
                            <div class="edit-content-r4">

                                <input class="edit-input-r3 easyui-textbox " value="@Model.Description" name="Description" data-options="required:true,missingMessage:'请输入角色说明',validType:'length[1,50]',invalidMessage:'备注不能大于50'" />
                            </div>
                        </div>
                    </div>
                </div>
                    <div class="easyui-panel" title="数据权限" data-options="" style="height:120px !important;width:700px;">
                        <div class="edit-field-r4">
                            <div class="edit-title"><label class="edit-label">公司：</label></div>
                            <div class="edit-content-r4">
                                <input name="CompanyID" id="Company" multiple data-options="url:'/Share/Query?name=GetComWithRootName&resultformat=jsontree&root=111111&pid=PID&id=ID&text=Name',animate:true,lines:true
    " class="edit-input-r3 easyui-combotree" />
                            </div>
                        </div>
                        <div class="edit-field-r4">
                            <div class="edit-title"><label class="edit-label">部门：</label></div>
                            <div class="edit-content-r4">
                                <input name="DeptID" id="DeptID" multiple data-options="url:'',animate:true,lines:true" class="edit-input-r3 easyui-combotree" />
                            </div>
                        </div>
                        <div class="edit-field-r4">
                            <div class="edit-title"><label class="edit-label">银行账号：</label></div>
                            <div class="edit-content-r4">
                                <input name="BankID" id="BankID" multiple data-options="url:'',animate:true,lines:true" class="edit-input-r3 easyui-combotree" />
                            </div>
                        </div>
                    </div>
                    <div style="padding-top:10px;">
                        <div class="easyui-panel" title="菜单权限" data-options="" style="width:700px;">
                            <table id="tg" class="easyui-treegrid"
                                   data-options="animate: true,collapsible: true,fitColumns: true,method: 'post',idField: 'id',singleSelect : false,treeField: 'name'">
                                <thead>
                                    <tr>
                                        <th data-options="field:'name',halign:'center'">页面</th>
                                        <th data-options="field:'action',halign:'center'">功能</th>
                                    </tr>
                                </thead>
                            </table>
                        </div>
                    </div>
                </div>

                <div class="edit-field-r3">
                    <div class="showmsg"><label id="showmsg"></label></div>
                </div>
            </div>
</form>
<div class="dialog-button">
    <a class="easyui-linkbutton edit-button" data-options="iconCls:'icon-ok'" onclick="submitAct_AuthUpdate(@Model.ToJson(),'/Role/Update')">确定</a>
    <a class="easyui-linkbutton edit-button" data-options="iconCls:'icon-cancel'" onclick="cancel()">取消</a>
</div><script type="text/javascript">

    $(document).ready(function () {
        //var datafilter=[];
        var company = [];
        var dept = [];
        var bank=[];
        company = $("input[name='DataFilter']").val().split(":")[0];
        dept = $("input[name='DataFilter']").val().split(":")[1];
        bank=$("input[name='DataFilter']").val().split(":")[2];

        var selectRow = $("#datagrid").datagrid('getSelected');
        var log=0;
        $("#tg").treegrid({
            url: '/Role/GetTreegridState?ID=' + selectRow["RoleID"],
            columns: [[
           {
               title: '页面', field: 'name', halign: 'center', formatter: function (value, rowData, rowIndex) {
                   return "<input class='textbox' name='parent_" + rowData.id + "' type='checkbox' onclick='check(this.name)'/>" + rowData.name;
               }
           },
            {
                field: 'action', title: '功能', halign: 'center', formatter: function (value, rowData, rowIndex) {
                    var ck = rowData.action;
                    var demo = [];
                    if (typeof (ck) == "string") {
                        demo = ck.split(",");
                    }
                    var result = "";
                    for (var i = 0; i < demo.length; i++) {
                        if (demo[i] != "") {
                            var rel = demo[i].split(":");
                            var val = rel[0];
                            var txt = rel[1];
                            var state = rel[2];
                            if (state == "True") {

                                result += "<div class='checkbox-span'> <input checked='checked' class='textbox' value='" + val + "' name='" + rowData.id + "' type='checkbox' onclick='checkAllState(this.name)'/><span class='span'>" + txt + "</span></div>";
                            } else {
                                result += "<div class='checkbox-span'> <input class='textbox' value='" + val + "' name='" + rowData.id + "' type='checkbox' onclick='checkAllState(this.name)'/><span class='span'>" + txt + "</span></div>"
                            }
                        }
                    }
                    return result;
                }
            },
            ]]
            ,onLoadSuccess: function (row,data) {
                if(log==1){
                 
                    var ids = [];
                    var lv1ids = [];
                    $("input[name*='parent_']").each(function () {
                        ids.push($(this)[0].name)
                    });
                    for (var i = 0; i < ids.length; i++) {
                        var page = ids[i].split("_")[1];
                        if (page.charAt(0) == "P") {
                            checkState(page);
                        } else {
                            lv1ids.push(page)
                        }
                    }
                    for (var j = 0; j < lv1ids.length; j++) {
                        var node = $("#tg").treegrid('getChildren', lv1ids[j]);
                        var flag = 0;
                        for (var i = 0; i < node.length; i++) {
                            var lv2id = "parent_" + node[i].id;

                            if ($("input[name='" + lv2id + "']:checkbox")[0].checked) {
                                flag++;
                            }
                        }
                        if (node.length == flag) {
                            $("input[name='parent_" + lv1ids[j] + "']:checkbox")[0].checked = true;
                        }
                        else {
                            $("input[name='parent_" + lv1ids[j] + "']:checkbox")[0].checked = false;
                        }
                    }

                    $("#Company").combotree({
                        onLoadSuccess: function () {
                            if (company.length == 0) {
                                $('#Company').combotree('setValues', '000000');
                            }
                            else {
                                $('#Company').combotree('setValues', company);
                            }
                        },
                        onChange: function () {
                            var CompanyIDs = $('#Company').combotree('getValues');
                            url = '/Share/Query?name=GetComDptTree&resultformat=jsontree&root=aaaaaa&pid=PID&id=ID&text=Name&CompanyID=' + CompanyIDs;
                            url1='/Share/Query?name=GetBankByCompany&resultformat=jsontree&root=&pid=PID&id=ID&text=Name&CompanyID='+ CompanyIDs;
                            $("#DeptID").combotree({ url: url ,onLoadSuccess: function () {
                                if (dept.length == 0) {
                                    $("#DeptID").combotree('setValues', '');
                                } else {
                                    $("#DeptID").combotree('setValues', dept);
                                }

                            }});
                            $("#BankID").combotree({url: url1,onLoadSuccess: function () {
                                if(bank.length==0){
                                    $("#BankID").combotree('setValues', '000000');
                                }else{
                                    $("#BankID").combotree('setValues', bank)
                                }
                               
                            } });
                        }
                    });
                }
                log++;

            }
        });
    });


    function checkparent(name) {
        var parentnode = $('#tg').treegrid('getParent', name);
        var node = $("#tg").treegrid('getChildren', parentnode.id);
        var flag = 0;
        for (var i = 0; i < node.length; i++) {
            var lv2id = "parent_" + node[i].id;

            if ($("input[name='" + lv2id + "']:checkbox")[0].checked||$("input[name='" + lv2id + "']:checkbox")[0].indeterminate) {
                flag++;
            }
        }
        if (node.length == flag) {
            $("input[name='parent_" + parentnode.id + "']:checkbox")[0].indeterminate=false;
            $("input[name='parent_" + parentnode.id + "']:checkbox")[0].checked = true;
        }
        else {
            if (flag > 0)
            {
                $("input[name='parent_" + parentnode.id + "']:checkbox")[0].indeterminate=true;
            }
            else{
                $("input[name='parent_" + parentnode.id + "']:checkbox")[0].indeterminate=false;
            }
        }
    }

    function check(id) {
        var name = id.split("_")[1];

        if ($('#tg').treegrid('getLevel', name) == 2) {

            checkparent(name)
            if ($("input[name='" + id + "']:checkbox")[0].checked) {
                $("input[name='" + name + "']:checkbox").each(function () {
                    $(this)[0].checked = true;
                })
            } else {
                $("input[name='" + name + "']:checkbox").each(function () {
                    $(this)[0].checked = false;
                })
            }
        }
        else {
            var chil = $('#tg').treegrid('getChildren', name);
            if ($("input[name='" + id + "']:checkbox")[0].checked) {
                for (var i = 0; i < chil.length; i++) {
                    $("input[name='parent_" + chil[i].id + "']:checkbox")[0].checked = true;
                    $("input[name='" + chil[i].id + "']:checkbox").each(function () {
                        $(this)[0].checked = true;
                    })
                }
            }
            else {
                for (var i = 0; i < chil.length; i++) {
                    $("input[name='parent_" + chil[i].id + "']:checkbox")[0].checked = false;
                    $("input[name='" + chil[i].id + "']:checkbox").each(function () {
                        $(this)[0].checked = false;
                    })
                }
            }
        }
    }
    function checkAllState(id) {
        checkState(id);
        checkparent(id)
    }

    function checkState(id) {
        var parent = "parent_" + id;
        var flag = 0;
        $("input[name='" + id + "']:checkbox").each(function () {
            if ($(this)[0].checked) {
                flag++;
            }
        });
        if (flag == $("input[name='" + id + "']:checkbox").length && flag != 0) {
            $("input[name='" + parent + "']:checkbox")[0].indeterminate=false;
            $("input[name='" + parent + "']:checkbox")[0].checked = true;
        }
        else {
            if(flag>0){
                $("input[name='" + parent + "']:checkbox")[0].indeterminate=true;
            }
            else{
                $("input[name='" + parent + "']:checkbox")[0].checked = false;
                $("input[name='" + parent + "']:checkbox")[0].indeterminate=false;
            }
        }
    }
    function submitAct_AuthUpdate(data, url) {
        var companyids = [];
        var DeptID = [];
        var bankid=[];

        if ($("#roleEditForm").form('validate')){
            $("input[name='CompanyID']").each(function () {
                if ($(this).val() != '000000')
                { companyids.push($(this).val()) }
            });
            $("input[name='DeptID']").each(function () {
                if ($(this).val() != '') {
                    DeptID.push($(this).val());
                }
            });
            $("input[name='BankID']").each(function(){
                if($(this).val()!='000000'){
                    bankid.push($(this).val())
                }
            })

            var tree = $("#DeptID").combotree('tree');
            var banktree=$("#BankID").combotree('tree');
            var parentnode = [];
            var bank=[];

            for(var i=0;i<bankid.length;i++){
                var node=banktree.tree('find',bankid[i]).target;

                if (bankid[i].charAt(0) == "C"&&bankid[i].length==6) {
                    var chil = banktree.tree('getChildren', node);
                    for (var j = 0; j < chil.length; j++) {
                        if ($.inArray(chil[j].id, bankid) != -1) {
                            bankid.splice($.inArray(chil[j].id, bankid), 1);
                        }
                    }
                    bank = bankid;
                }
                else {
                    if (banktree.tree('isLeaf', node)) {
                        bank.push(bankid[i]);
                    }
                }
            }

            for (var i = 0; i < DeptID.length; i++) {

                var curnode = tree.tree('find', DeptID[i]).target;

                if (DeptID[i].charAt(0) == "C") {
                    var chil = tree.tree('getChildren', curnode);
                    for (var j = 0; j < chil.length; j++) {
                        if ($.inArray(chil[j].id, DeptID) != -1) {
                            DeptID.splice($.inArray(chil[j].id, DeptID), 1);
                        }
                    }
                }
                else {
                    if (!tree.tree('isLeaf', curnode)) {
                        parentnode.push(DeptID[i])
                    }
                }
            }
            if (parentnode.length > 0) {
                for (var i = 0; i < parentnode.length; i++) {
                    var currnode = tree.tree('find', parentnode[i]);
                    var chils = tree.tree('getChildren', currnode.target);
                    for (var j = 0; j < chils.length; j++) {
                        if ($.inArray(chils[j].id, DeptID) != -1) {
                            DeptID.splice($.inArray(chils[j].id, DeptID), 1);
                        }
                    }
                }
            }
            var result = "{\"RoleID\":\"" + $("#RoleID").val() + "\",\"Name\":\"" + $("input[name='Name']").val() + "\",\"Description\":\"" + $("input[name='Description']").val()
                + "\",\"CompanyIDs\":\"" + companyids + "\",\"DeptIDs\":\"" + DeptID+ "\",\"BankIDs\":\""+bank+"\"";
            data = data.Pages;
            var page = [];
            for (var i = 0; i < data.length; i++) {
                var value = 0;
                $("input[name='" + data[i].PageID + "']:checked").each(function () {
                    value += parseInt($(this).val());
                })
                page.push({ PageID: data[i].PageID, Values: value })
            }
            for (var i = 0; i < page.length; i++) {
                result += ",";
                result += "\"" + page[i].PageID + "\":\"" + page[i].Values + "\"";
            }
            result += "}";
            //console.log(result)
            funcForAjax(url, 'post', "roleAddForm", $.parseJSON(result), "datagrid", funcForUpdate);
        }
        
    }
</script>